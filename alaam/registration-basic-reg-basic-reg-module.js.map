{"version":3,"sources":["./src/app/pages/auth/registration/basic-reg/basic-reg.component.html","./src/app/pages/auth/registration/basic-reg/basic-reg-routing.module.ts","./src/app/pages/auth/registration/basic-reg/basic-reg.component.scss","./src/app/pages/auth/registration/basic-reg/basic-reg.component.ts","./src/app/pages/auth/registration/basic-reg/basic-reg.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,27BAA43B,OAAO,uaAAua,kDAAkD,47BAA47B,4CAA4C,uzBAAuzB,WAAW,yCAAyC,2CAA2C,8pBAA8pB,6CAA6C,m2CAAm2C,8CAA8C,k5BAAk5B,+CAA+C,4nBAA4nB,oDAAoD,8oD;;;;;;;;;;;;;;;;;;;ACA/4N;AACc;AACG;AAExD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;QAC5B,IAAI,EAAE;YACJ,KAAK,EAAE,qBAAqB;SAC7B;KACF;CACF,CAAC;AAMF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBlC;AAAe,6GAA8C,uL;;;;;;;;;;;;;;;;;;;;;ACAX;AACO;AACW;AAGK;AAEJ;AAOrE;IAUC,2BAAoB,WAAwB,EAC7B,KAAqB,EACrB,MAAc,EACd,WAAuB,EACvB,qBAA4C;QAJvC,gBAAW,GAAX,WAAW,CAAa;QAC7B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAY;QACvB,0BAAqB,GAArB,qBAAqB,CAAuB;QAX3D,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAIlB,UAAK,GAAG,EAAE,CAAC;QAQA,wCAAwC;QAC3C,IAAI,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACvC;IACF,CAAC;IAER,oCAAQ,GAAR;QACO,IAAI,CAAC,SAAS,GAAC,cAAc,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,EAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnF,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,WAAW,EAAC,CAAC,IAAI,CAAC;YAClB,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,EAAE;YACL,SAAS,EAAE,+EAAkB,CAAC,UAAU,EAAE,eAAe,CAAC;SAC3D,CAAC,CAAC;QACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IAC5E,CAAC;IAED,sBAAI,gCAAC;aAAL,cAAU,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEtC,0CAAc,GAAd;QAAA,iBAmBC;QAjBG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChC,IAAM,CAAC,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAClC,UAAU,CAAC;gBACX,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;qBACjD,SAAS,CAAC,aAAG;oBAAK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC3C,IAAG,GAAG,CAAC,QAAQ,CAAC,IAAE,IAAI,EACtB;wBACE,OAAO,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;qBAClC;yBACD;wBACE,OAAO,CAAC,IAAI,CAAC;qBACd;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,IAAI,CAAC,CAAC;QAEX,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;IACb,CAAC;IAED,oCAAQ,GAAR,UAAS,KAAK;QACV,IAAG,KAAK,IAAE,CAAC,EAAC;YACR,IAAI,CAAC,SAAS,GAAC,MAAM,CAAC;SACzB;aACG;YACA,IAAI,CAAC,SAAS,GAAC,cAAc,CAAC;SACjC;IACL,CAAC;IAED,sCAAU,GAAV,UAAW,KAAK;QACZ,IAAM,IAAI,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtB,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,sBAAsB,EAAE;QAExD,eAAe;QACf,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG;YACd,yCAAyC;QAC3C,CAAC;QACD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,oCAAQ,GAAR;QAAA,iBA6BC;QA5BG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACtB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aACtC,SAAS,CACN,cAAI;YACA,IAAG,IAAI,CAAC,QAAQ,CAAC,IAAE,KAAK,EACxB;gBAEI,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;aAEnD;iBAED;gBACI,KAAI,CAAC,KAAK,GAAG,gCAAgC,CAAC;gBAC9C,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;QAEL,CAAC,EACD,eAAK;YACD,KAAI,CAAC,KAAK,GAAG,wCAAwC,CAAC;YACtD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IAGf,CAAC;;gBA1G6B,0DAAW;gBACtB,8DAAc;gBACb,sDAAM;gBACF,qDAAW;gBACA,+DAAqB;;IAd/C,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,uPAAyC;;SAE1C,CAAC;+EAWgC,0DAAW;YACtB,8DAAc;YACb,sDAAM;YACF,qDAAW;YACA,+DAAqB;OAd/C,iBAAiB,CAyH7B;IAAD,wBAAC;CAAA;AAzH6B;;;;;;;;;;;;;;;;;;;;;;;ACdW;AACM;AACW;AACO;AACH;AACjB;AACQ;AAarD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAV1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,+EAAqB;gBACrB,kEAAY;gBACZ,0DAAW;gBACX,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;SAClC,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ","file":"registration-basic-reg-basic-reg-module.js","sourcesContent":["export default \"\\r\\n<section class=\\\"login p-fixed d-flex text-center bg-primary1 common-img-bg1\\\">\\r\\n  <!-- starts -->\\r\\n  <div class=\\\"auth-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n     <!--  <div class=\\\"col-sm-12\\\"> -->\\r\\n        <!-- Authentication card start -->\\r\\n        <div class=\\\"login-card card-body auth-body\\\">\\r\\n          <form class=\\\"md-float-material\\\" [formGroup]=\\\"regForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            \\r\\n            <div class=\\\"auth-box\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 text-center\\\">\\r\\n                  <img src=\\\"assets/images/auth/allam.png\\\" alt=\\\"Allam\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <h3 class=\\\"text-center txt-primary\\\">Sign Up. It is fast and easy.</h3>\\r\\n                   <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr class=\\\" m-b-30\\\">\\r\\n              \\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 text-center\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"register_as\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.register_as.errors }\\\" (change)=\\\"onChange($event.target.value)\\\">\\r\\n                        <option value=\\\"\\\">Register as</option>\\r\\n                        <option value=\\\"2\\\">Admin</option>\\r\\n                        <option value=\\\"3\\\">Advertiser</option>\\r\\n                      </select>\\r\\n\\r\\n                      <div *ngIf=\\\"submitted && f.register_as.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.register_as.errors.required\\\">Please select role.</div>\\r\\n                      </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                      <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\">\\r\\n\\r\\n                         <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.email.errors.required\\\">This field is requird.</div>\\r\\n                             <div *ngIf=\\\"f.email.errors.email\\\">Invalid email id</div>\\r\\n                              <div *ngIf=\\\"f.email.errors.isEmailExist\\\">Email already exists  </div>\\r\\n                         </div>\\r\\n\\r\\n                         \\r\\n                      </div>\\r\\n                     \\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{nameLabel}}\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\">\\r\\n                      <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.name.errors.required\\\">This field is required.</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                      <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Mobile\\\" formControlName=\\\"mobile\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.mobile.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && f.mobile.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.mobile.errors.required\\\">This field is required.</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\"> \\r\\n                  <div class=\\\"group\\\">\\r\\n                    <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                      <input type=\\\"text\\\" formControlName=\\\"website\\\" class=\\\"form-control\\\" placeholder=\\\"Website\\\">\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                      <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" title=\\\"Comapny Logo\\\" (change)=\\\"uploadFile($event)\\\">\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"country\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.country.errors }\\\">\\r\\n                        <option value=\\\"\\\">Country</option>\\r\\n                        <option value=\\\"UAE\\\">UAE</option>\\r\\n                        <option value=\\\"QATAR\\\">QATAR</option>\\r\\n                      </select>\\r\\n                      <div *ngIf=\\\"submitted && f.country.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.country.errors.required\\\">This field is required.</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                      <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.password.errors.required\\\">This field is required.</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"conf_password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.conf_password.errors }\\\">\\r\\n                      <div *ngIf=\\\"submitted && f.conf_password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.conf_password.errors.required\\\">This field is required.</div>\\r\\n                          <div *ngIf=\\\"f.conf_password.errors.confirmedValidator\\\">Password and Confirm Password must be match.</div>\\r\\n                      </div>\\r\\n                     \\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row m-t-20\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green btn-md btn-block waves-effect text-center text-white m-b-2\\\">\\r\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                    SUBMIT\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr/>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <p class=\\\"text-inverse text-center m-b-0\\\">Already have an account?\\r\\n\\r\\n                   <a [routerLink]=\\\"['/authentication/login']\\\" class=\\\"text-right f-w-600 text-warning\\\"> Login</a>\\r\\n\\r\\n                  </p>\\r\\n                  \\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n          <!-- end of form -->\\r\\n        </div>\\r\\n        <!-- Authentication card end -->\\r\\n   <!--    </div> -->\\r\\n      <!-- end of col-sm-12 -->\\r\\n    </div>\\r\\n    <!-- end of row -->\\r\\n  </div>\\r\\n  <!-- end of -->\\r\\n</section>\\r\\n\"","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BasicRegComponent} from './basic-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicRegComponent,\r\n    data: {\r\n      title: 'Simple Registration'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicRegRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvcmVnaXN0cmF0aW9uL2Jhc2ljLXJlZy9iYXNpYy1yZWcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService,UserService } from '../../../../services';\r\n\r\nimport { ConfirmedValidator } from '../../../../confirmed.validator';\r\n\r\n@Component({\r\n  selector: 'app-basic-reg',\r\n  templateUrl: './basic-reg.component.html',\r\n  styleUrls: ['./basic-reg.component.scss']\r\n})\r\nexport class BasicRegComponent implements OnInit {\r\n  \r\n    regForm: FormGroup;\r\n\tloading = false;\r\n\tsubmitted = false;\r\n    returnUrl: string;\r\n\tnameLabel: string;\r\n    preview  : string;\r\n\terror = '';\r\n\tsignupUser:any;\r\n\tconstructor(private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private userService:UserService,\r\n        private authenticationService: AuthenticationService) \r\n        {\r\n            // redirect to home if already logged in\r\n\t        if (this.authenticationService.currentUserValue) { \r\n\t            this.router.navigate(['dashboard']);\r\n\t        } \r\n        }\r\n\r\n\tngOnInit() {\r\n        this.nameLabel='Company Name';\r\n\t    this.regForm = this.formBuilder.group({\r\n            register_as: ['', Validators.required],\r\n            email: ['', [Validators.required, Validators.email],this.emailValidator.bind(this)],\r\n            name: ['', Validators.required],\r\n            mobile: ['', Validators.required],\r\n            country: ['', Validators.required],\r\n            password: ['', Validators.required],\r\n            website:[''],\r\n            user_avatar:[null],\r\n            conf_password: ['', Validators.required],\r\n        }, { \r\n      validator: ConfirmedValidator('password', 'conf_password')\r\n    });\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\t}\r\n\r\n\tget f() { return this.regForm.controls; }\r\n\r\n    emailValidator()\r\n    {\r\n        console.log(this.f.email.value);\r\n        const q = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n            this.userService.isEmaiIDExist(this.f.email.value)\r\n            .subscribe(res => {console.log(res['status'])\r\n              if(res['status']==true)\r\n              {\r\n                resolve({ 'isEmailExist': true }) \r\n              }else\r\n              {\r\n                resolve(null)\r\n              }\r\n            });\r\n          }, 1000);\r\n\r\n        });\r\n        return q;\r\n    }\r\n\r\n    onChange(regAs) {\r\n        if(regAs==2){\r\n            this.nameLabel='Name';\r\n        }\r\n        else{\r\n            this.nameLabel='Company Name';\r\n        }\r\n    }\r\n\r\n    uploadFile(event) {\r\n        const file = (event.target as HTMLInputElement).files[0];\r\n        this.regForm.patchValue({\r\n          user_avatar: file\r\n        });\r\n        this.regForm.get('user_avatar').updateValueAndValidity()\r\n\r\n        // File Preview\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          //this.preview = reader.result as string;\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        if (this.regForm.invalid) {\r\n            return;\r\n        }\r\n \r\n        this.loading = true; \r\n        this.userService.signup(this.regForm.value)\r\n            .subscribe(\r\n                data => {\r\n                    if(data['status']=='200')\r\n                    {\r\n                       \r\n                        this.router.navigate(['authentication/thanks']);\r\n                        \r\n                    }\r\n                    else\r\n                    {\r\n                        this.error = 'Registration failed. try again';\r\n                        this.loading = false;\r\n                    }\r\n                    \r\n                },\r\n                error => {\r\n                    this.error = \"Something went wrong. Try again later.\";\r\n                    this.loading = false;\r\n                });\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BasicRegComponent } from './basic-reg.component';\r\nimport {BasicRegRoutingModule} from './basic-reg-routing.module';\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BasicRegRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [BasicRegComponent]\r\n})\r\nexport class BasicRegModule { }\r\n"],"sourceRoot":"webpack:///"}