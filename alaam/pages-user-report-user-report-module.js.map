{"version":3,"sources":["./src/app/pages/user-report/user-report.component.html","./src/app/pages/user-report/user-report-routing.module.ts","./src/app/pages/user-report/user-report.component.scss","./src/app/pages/user-report/user-report.component.ts","./src/app/pages/user-report/user-report.module.ts"],"names":[],"mappings":"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","file":"pages-user-report-user-report-module.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-block\\\">\\n                <!-- {{filteredStudents | json}} -->\\n            <div class=\\\"dt-responsive table-responsive11\\\" >\\n                <div id=\\\"autofill_wrapper\\\" class=\\\"dataTables_wrapper dt-bootstrap4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\">\\n                            <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n                                <label class=\\\"example-input-wrapper\\\">\\n                                    Date <br/> \\n                                    <input placeholder=\\\"Choose Date\\\"\\n                                        [(ngModel)]=\\\"created_at\\\" [max]=\\\"max\\\" (ngModelChange)=\\\"filterCatch('created_at', created_at)\\\"\\n                                        [owlDateTimeTrigger]=\\\"dt1\\\" [owlDateTime]=\\\"dt1\\\">\\n                                        <span class=\\\"example-trigger\\\" [owlDateTimeTrigger]=\\\"dt1\\\">\\n                                            <i class=\\\"fas fa-calendar-alt\\\"></i>\\n                                        </span>\\n                                    <owl-date-time [showSecondsTimer]=\\\"'true'\\\" [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\">\\n                            <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n                                <label>Competition Type\\n                                    <select #mySelect class=\\\"form-control select2\\\" style=\\\"width: 100%;\\\" [(ngModel)]=\\\"filters.competitionType\\\" (change)=\\\"filterCatch( 'competitionType', filters.competitionType)\\\" required >\\n                                         <option *ngFor=\\\"let option of competitionOption\\\" [value]=\\\"option.id\\\" [selected]=\\\"competitionOption==option.id\\\" >{{option.title}}</option>\\n                                    </select>\\n                                </label>\\n                            </div>\\n                            <button class=\\\"btn btn-primary\\\" *ngIf=\\\"competitionType\\\" (click)=\\\"removeFilter('competitionType')\\\">\\n                                Clear\\n                            </button>\\n                        </div>\\n                        \\n                        <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\">\\n                            <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n                                <label>Competition Name\\n                                    <select class=\\\"form-control select2\\\" style=\\\"width: 100%;\\\" [(ngModel)]=\\\"audienceFilter.competitioName\\\"  (ngModelChange)=\\\"filterMatch('competitionId' , audienceFilter.competitioName)\\\" required >\\n                                        <option value=\\\"\\\" [selected]=\\\"true\\\">--Select--</option>\\n                                        <option *ngFor=\\\"let competition of competitionSelect\\\" [value]=\\\"competition.id\\\" [selected]=\\\"competitionSelect==competition.id\\\" >{{competition.compitition_name}}</option>\\n                                   </select>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n            </div>\\n            \\n            </div>\\n        </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <!-- <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\">\\n        <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n            <label>Action Type</label>\\n            <select class=\\\"form-control select2\\\" style=\\\"width: 100%;\\\" [(ngModel)]=\\\"audienceFilter.action_flag\\\"  (change)=\\\"filterMatch('action_flag', audienceFilter.action_flag)\\\" required >\\n                <option value=\\\"\\\" [selected]=\\\"true\\\">--Select--</option>\\n                <option *ngFor=\\\"let option of actionOption\\\" [value]=\\\"option.id\\\" [selected]=\\\"actionOption==option.id\\\" >{{option.title}}</option>\\n            </select> \\n        </div>\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"action_flag\\\" (click)=\\\"removeFilter('action_flag')\\\">\\n            Clear\\n        </button>\\n    </div> --> \\n    <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\" *ngIf=\\\"audienceFilter.action_flag == 0\\\"> \\n        <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n            <label>Gender</label>\\n            <select class=\\\"form-control select2\\\" style=\\\"width: 100%;\\\" [(ngModel)]=\\\"audienceFilter.action_value\\\"  (change)=\\\"filterMatch('action_value', audienceFilter.action_value)\\\" required >\\n                <option *ngFor=\\\"let option of actionValueOption\\\" [value]=\\\"option.id\\\" [selected]=\\\"actionValueOption==option.id\\\" >{{option.title}}</option>\\n            </select> \\n        </div>\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"action_value\\\" (click)=\\\"removeFilter('action_value')\\\">\\n            Clear\\n        </button>\\n    </div>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\" *ngIf=\\\"audienceFilter.action_flag == 1\\\"> \\n        <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n            <label>Age</label>\\n            <select class=\\\"form-control select2\\\" style=\\\"width: 100%;\\\" [(ngModel)]=\\\"audienceFilter.action_value\\\"  (change)=\\\"filterMatch('action_value', audienceFilter.action_value)\\\" required >\\n                <option value=\\\"6-16\\\">6-16</option>\\n                <option value=\\\"17-27\\\" >17-27</option>\\n                <option value=\\\"28-38\\\" >28-38</option>\\n                <option value=\\\"39-49\\\" >39-49</option>\\n                <option value=\\\"50-60\\\" >50-60</option>\\n                <option value=\\\"61-71\\\" >61-71</option>\\n                <option value=\\\"72-82\\\" >72-82</option>\\n            </select> \\n        </div>\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"action_value\\\" (click)=\\\"removeFilter('action_value')\\\">\\n            Clear\\n        </button>\\n    </div>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\" *ngIf=\\\"audienceFilter.action_flag == 2\\\"> \\n        <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n            <label>Country</label>\\n            <select class=\\\"form-control select2\\\" style=\\\"width: 100%;\\\" [(ngModel)]=\\\"audienceFilter.action_value\\\"  (change)=\\\"filterMatch('action_value', audienceFilter.action_value)\\\" required >\\n                <option *ngFor=\\\"let option of countryData\\\" [value]=\\\"option.id\\\" [selected]=\\\"actionValueOption==option.id\\\" >{{option.name}}</option>\\n            </select> \\n        </div>\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"action_value\\\" (click)=\\\"removeFilter('action_value')\\\">\\n            Clear\\n        </button>\\n    </div>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-3 mb-3\\\" *ngIf=\\\"audienceFilter.action_flag == 3\\\"> \\n        <div id=\\\"autofill_filter\\\" class=\\\"dataTables_filter\\\">\\n            <label>Rank</label>\\n            <select class=\\\"form-control select2\\\" style=\\\"width: 100%;\\\" [(ngModel)]=\\\"audienceFilter.rank\\\"  (change)=\\\"filterMatch('rank', audienceFilter.rank)\\\" required >\\n                <option value=\\\"asc\\\">Ascending</option>\\n                <option value=\\\"desc\\\" >Descending</option>\\n            </select> \\n        </div>\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"rank\\\" (click)=\\\"removeFilter('rank')\\\">\\n            Clear\\n        </button>\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-sm-12\\\">\\n    <div class=\\\"dt-responsive table-responsive\\\">\\n    <table id=\\\"autofill\\\" class=\\\"table table-striped table-bordered nowrap dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"autofill_info\\\">\\n    <thead>\\n    <tr role=\\\"row\\\">\\n    <!-- <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Name: activate to sort column ascending\\\" style=\\\"width: 30px;\\\">ID</th> -->\\n\\n    <th class=\\\"sorting_desc\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Position: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" aria-sort=\\\"descending\\\" (click)=\\\"sort('full_name')\\\">Full Name<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'full_name', 'fa-sort-asc': (column == 'full_name' && isDesc), 'fa-sort-desc': (column == 'full_name' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n    <th class=\\\"sorting_desc\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Position: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" aria-sort=\\\"descending\\\" (click)=\\\"sort('user_name')\\\">User Name<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'user_name', 'fa-sort-asc': (column == 'user_name' && isDesc), 'fa-sort-desc': (column == 'user_name' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n    <th class=\\\"sorting_desc\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Position: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" aria-sort=\\\"descending\\\" (click)=\\\"sort('country')\\\">Country<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'country', 'fa-sort-asc': (column == 'country' && isDesc), 'fa-sort-desc': (column == 'country' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n    <th class=\\\"sorting_desc\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Position: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" aria-sort=\\\"descending\\\" (click)=\\\"sort('nationality')\\\">Nationality<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'nationality', 'fa-sort-asc': (column == 'nationality' && isDesc), 'fa-sort-desc': (column == 'nationality' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n\\n    <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Office: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" (click)=\\\"sort('email')\\\">Email<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'email', 'fa-sort-asc': (column == 'email' && isDesc), 'fa-sort-desc': (column == 'email' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n\\n    <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Office: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" (click)=\\\"sort('user_mobile')\\\">Phone Number<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'user_mobile', 'fa-sort-asc': (column == 'user_mobile' && isDesc), 'fa-sort-desc': (column == 'user_mobile' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n\\n    <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Office: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" (click)=\\\"sort('rank')\\\">Rank<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'rank', 'fa-sort-asc': (column == 'rank' && isDesc), 'fa-sort-desc': (column == 'rank' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n\\n    <!-- <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Office: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" (click)=\\\"sort('end_time')\\\">End Time<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'end_time', 'fa-sort-asc': (column == 'end_time' && isDesc), 'fa-sort-desc': (column == 'end_time' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th> -->\\n\\n    <!-- <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Office: activate to sort column ascending\\\" style=\\\"width: 100px;\\\" (click)=\\\"sort('status')\\\">Status<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-sort': column != 'status', 'fa-sort-asc': (column == 'status' && isDesc), 'fa-sort-desc': (column == 'status' && !isDesc) }\\\" aria-hidden=\\\"true\\\"> </i></th>\\n\\n    <th class=\\\"sorting\\\" tabindex=\\\"0\\\" aria-controls=\\\"autofill\\\" rowspan=\\\"1\\\" colspan=\\\"1\\\" aria-label=\\\"Age: activate to sort column ascending\\\" style=\\\"width: 60px;\\\"> </th> -->\\n    </thead>\\n    <tbody>\\n\\n\\n    <tr role=\\\"row\\\" *ngFor=\\\"let data of dailyList | filter: term : term2 | orderBy: {property: column, direction: direction} | paginate : {\\n        itemsPerPage: pageSize,\\n        currentPage: page,\\n        totalItems: count\\n    }; let index =index;\\n        let isOdd=odd;\\n        let isEven=even\\\" \\n\\n        [class.odd]=\\\"isOdd\\\" \\n        [class.even]=\\\"isEven\\\" > <!-- {{ data | json }} -->\\n        <!-- <td class=\\\"\\\">{{ data.id }}</td> -->\\n        <td class=\\\"sorting_1\\\">{{ data.full_name }} </td>\\n        <td class=\\\"\\\">{{ data.user_name }}</td>\\n        <td class=\\\"\\\">{{ data.country }}</td>\\n        <td class=\\\"\\\">{{ data.nationality }}</td>\\n        <td class=\\\"\\\">{{ data.user_email }}</td>\\n        <td class=\\\"\\\">{{ data.user_mobile }}</td>\\n        <td class=\\\"\\\">{{ data.rank }}</td>\\n        <!--<td> {{ data.start_time }}   {{ data.total_times | date:\\\"HH:mm:ss\\\":setOffset}} </td> -->\\n        <!-- <td>{{ data.end_time }}</td> -->\\n    \\n    </tr>\\n\\n    </tbody>\\n\\n    </table>\\n    </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\n    <div class=\\\"dataTables_info\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">Show Entries\\n        <label>\\n        <select (change)=\\\"handlePageSizeChange($event)\\\" class=\\\"form-control inpuitemsPerPaget-sm\\\">\\n            <option *ngFor=\\\"let size of pageSizes\\\" [ngValue]=\\\"size\\\">\\n                {{ size }}\\n            </option>\\n        </select>\\n        </label>\\n    </div>\\n    </div>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\n    <pagination-controls\\n        previousLabel=\\\"Prev\\\"\\n        nextLabel=\\\"Next\\\"\\n        responsive=\\\"true\\\"\\n        class=\\\"pagination\\\"\\n        (pageChange)=\\\"handlePageChange($event)\\\"\\n        ></pagination-controls>   \\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserReportComponent } from './user-report.component';\r\n\r\n  import { from } from 'rxjs';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserReportComponent,\r\n    data: {\r\n      breadcrumb: 'UserReport',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserReportRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItcmVwb3J0L3VzZXItcmVwb3J0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { from } from 'rxjs';\nimport { LeaderboardService } from '../../services/leaderboard.service';\nimport { DcService } from '../../services/dc.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\nimport { environment } from '../../../environments/environment';\nimport * as _ from 'lodash';\n\ninterface FilterFormValue {\n  sex: string;\n  category: string;\n  status: string;\n}\n\n@Component({\n  selector: 'app-user-report',\n  templateUrl: './user-report.component.html',\n  styleUrls: ['./user-report.component.scss']\n})\nexport class UserReportComponent implements OnInit {\n\n  dailyList: any = [];\n  filteredStudents: any = [];\n  countryData : any = [];\n\n  filterForm: FormGroup;\n  // filter by value\n  filters : any = { gender: \"both\", competitionType: \"daily_competition\", created_at: new Date()};\n  audienceFilter :any= { gender: \"both\", competitionType: \"daily_competition\", created_at: new Date()};;\n  term: string;\n  term1: string;\n  term2: string;\n  setOffset:string;\n  competitionSelect : any = [];\n  page = 1;\n  count = 0;\n  pageSize = 5;\n  pageSizes = [5, 10, 25, 50, 100];\n\n  public invalidMoment =  new Date().toISOString();\n  //public min = new Date(2021, 1, 3, 10, 30);\n  public min = new Date().toISOString();\n  public max = new Date();\n  public  now = new Date();\n  public created_at =  new Date();\n\n  private competitionOption: any[] = [{\"id\":\"daily_competition\",\"title\":\"Daily Competition\"}, {\"id\":\"special_competition\",\"title\":\"Special Competition\"}, {\"id\":\"league_competition\",\"title\":\"League Competition\"}];\n\n  private actionOption: any[] = [{\"id\":\"0\",\"title\":\"Gender\"}, {\"id\":\"1\",\"title\":\"Age\"}, {\"id\":\"2\",\"title\":\"Country\"}, {\"id\":\"3\", \"title\":\"Rank\"}];\n  private actionValueOption: any[] = [{\"id\":\"Both\",\"title\":\"Both\"}, {\"id\":\"Male\",\"title\":\"Male\"}, {\"id\":\"Female\",\"title\":\"Female\"}];\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, private dataService: DcService, private leaderboardService: LeaderboardService, private alertService: ToasterService, private datePipe: DatePipe, private formBuilder: FormBuilder) {  }\n\n  ngOnInit() {\n    this.term1='';\n    this.term2='0';\n    this.term='';\n\n    this.getTimeZone();\n    this.getCountry();\n    this.getCompetitionOption('daily_competition');\n  }\n\n  getTimeZone() {\n    var offset = new Date().getTimezoneOffset(), o = Math.abs(offset);\n    this.setOffset = (offset < 0 ? \"+\" : \"-\") + (\"00\" + Math.floor(o / 60)).slice(-2) + \":\" + (\"00\" + (o % 60)).slice(-2);\n    console.log(this.setOffset);\n  }\n  private getCountry(){\n    this.dataService.getCountry().subscribe(broadcaster => { \n      this.countryData = broadcaster.data;  \n      //console.log('broadcaster '+JSON.stringify(broadcaster));\n    })\n  }\n\n  private setFilters() {\n    this.filteredStudents = _.filter(this.competitionSelect, _.conforms(this.filters) );\n  }\n\n  filterCatch(property: string, value: any) {\n    //this.filters[property] = i => i === value;\n    //this.filters['action_value'] = '';\n    this.filters[property] = value;\n    if(property == 'competition_type'){\n      this.audienceFilter = value;\n    }\n    console.log(this.filters);\n    this.getCompetitionOption();\n  }\n\n  filterMatch(property: string, value: any) {\n    //this.filters[property] = i => i === value;\n    this.audienceFilter['action_value'] = '';\n    this.audienceFilter[property] = value;\n    console.log('audienceFilter', this.audienceFilter);\n    this.leaderboard();\n  }\n\n  private getCompetitionOption(competition_type='daily_competition'){ \n    //console.log(competition_type);\n    this.leaderboardService.getCompetitionName(this.filters).subscribe(data => { \n      this.competitionSelect = data.data;  \n      //console.log('broadcaster '+JSON.stringify(data));\n\n      // //this.getSexOptions();\n      // when we get all our data initialize the filter form\n      // //this.initFilterForm();\n\n    })\n  }\n  leaderboard(){ \n    //console.log(this.filters);\n    this.leaderboardService.getLeaderboard( this.audienceFilter).subscribe(data => { \n      this.dailyList = data.data;  \n      //console.log('broadcaster '+JSON.stringify(data));\n      if(data.success == false){\n        Swal.fire('', data.message, 'error');\n        this.getCompetitionOption();\n      }\n      // //this.getSexOptions();\n      // when we get all our data initialize the filter form\n      // //this.initFilterForm();\n\n    },\n    err =>{ console.log('err', err) })\n  }\n  /// removes filter\n  removeFilter(property: string) {\n    delete this.filters[property];\n    this[property] = null;\n    this.getCompetitionOption();\n  }\n\n/*    private getSexOptions() {\n    // get all unique values from array of students\n    this.sexOptions = Array.from(new Set(this.competitionSelect.map((student) => student.gender)));\n  }\n\n  private initFilterForm() {\n    // initialize the form with empty strings, in html the 'All' option will be selected\n    this.filterForm = this.formBuilder.group({\n      sex: [''],\n      category: [''],\n      status: ['']\n    });\n    // init watch for any form changes\n    this.watchFormChanges();\n  }\n private watchFormChanges() {\n    // this will fire on any filter changes and call the filtering method with the value of the form\n    this.filterForm.valueChanges.subscribe((value: FilterFormValue) => this.filterStudents(value));\n  }\n\n  private filterStudents(value: FilterFormValue) {\n    // again, this operation would be executed on the backend, but here you go\n    // initialize a new array of all the students\n    let filteredStudents: any = this.competitionSelect;\n    if (value.sex) {\n      // if filter for sex is set, simply filter for any student that has the same value for sex\n      filteredStudents = filteredStudents.filter((student) => student.sex === value.sex);\n    }\n    if (value.category && !value.status) {\n      // when category is set but status is not, filter for any student that has the category in any of its programs \n      filteredStudents = filteredStudents.filter((student: Student) => {\n        return student.programs\n          .map((program: Program) => program.programCategory)\n          .includes(value.category);\n      });\n    }\n    if (!value.category && value.status) {\n      // when status is set but category is not, filter for any student that has the status in any of its programs\n      filteredStudents = filteredStudents.filter((student: Student) => {\n        return student.programs\n          .map((program: Program) => program.programStatus)\n          .includes(value.status);\n      });\n    }\n    if (value.category && value.status) {\n      // when category and status is both set, filter for any student that has the status AND category in any of its programs\n      filteredStudents = filteredStudents.filter((student: Student) => {\n        return student.programs\n          .filter((program: Program) => program.programCategory === value.category)\n          .map((program: Program) => program.programStatus)\n          .includes(value.status);\n      });\n    }\n    // set the filtered students to display\n    this.filteredStudents = filteredStudents;\n  } */\n\n  //custom search & pagination\n  getRequestParams(searchText, page, pageSize): any { \n    let params = {};\n\n    if (searchText) {\n      params[`searchText`] = searchText;\n    }\n    else{\n      params[`searchText`] =0;\n    }\n\n    if (page) {\n      params[`page`] = page - 1;\n    }\n\n    if (pageSize) {\n      params[`size`] = pageSize;\n    }\n\n    return params;\n  }\n\n\n  handlePageChange(event): void {\n    this.page = event;\n    //this.getLeaderboard();\n  }\n\n  handlePageSizeChange(event): void {\n    this.pageSize = event.target.value;\n    this.page = 1;\n    //this.getLeaderboard();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { UserReportRoutingModule } from './user-report-routing.module'\nimport { UserReportComponent } from './user-report.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule, OWL_DATE_TIME_LOCALE } from 'ng-pick-datetime';\nimport { LoadingModule } from '../spinner/loading.module';\nimport { PipesModule } from '../../pipes/pipes.module'\nimport { from } from 'rxjs';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { DcService } from '../../services/dc.service';\n\n@NgModule({\n  declarations: [UserReportComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UserReportRoutingModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    LoadingModule,\n    PipesModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n  ],\n  providers: [ DcService]\n})\nexport class UserReportModule { }\n"],"sourceRoot":"webpack:///"}