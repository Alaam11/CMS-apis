{"version":3,"sources":["./src/app/pages/study-exam/competitive/bulk-competitive.component.html","./src/app/pages/study-exam/competitive/single-competitive.component.html","./src/app/pages/study-exam/curriculum/bulk-curriculum.component.html","./src/app/pages/study-exam/curriculum/single-curriculum.component.html","./src/app/pages/study-exam/dashboard.component.html","./src/app/pages/study-exam/studyexam.component.html","./src/app/pages/study-exam/competitive/bulk-competitive.component.scss","./src/app/pages/study-exam/competitive/bulk-competitive.component.ts","./src/app/pages/study-exam/competitive/single-competitive.component.scss","./src/app/pages/study-exam/competitive/single-competitive.component.ts","./src/app/pages/study-exam/curriculum/bulk-curriculum.component.scss","./src/app/pages/study-exam/curriculum/bulk-curriculum.component.ts","./src/app/pages/study-exam/curriculum/single-curriculum.component.scss","./src/app/pages/study-exam/curriculum/single-curriculum.component.ts","./src/app/pages/study-exam/dashboard.component.ts","./src/app/pages/study-exam/question-routing.module.ts","./src/app/pages/study-exam/question.module.ts","./src/app/pages/study-exam/studyexam.component.ts"],"names":[],"mappings":"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","file":"pages-study-exam-question-module.js","sourcesContent":["export default \"<div class=\\\"container-fluid single-curriculum\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 single-curriculum-wrap\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h4 class=\\\"m-b-0\\\">Competitive exam</h4>\\r\\n          <h5 class=\\\"pre_title\\\">({{pre_quiz_title}})</h5>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"isSave\\\">\\r\\n        <div class=\\\"col-md-12 \\\">\\r\\n          <form class=\\\"md-float-material\\\" [formGroup]=\\\"formVar\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"row file-upload\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"group\\\">\\r\\n                  Upload xlsx file\\r\\n                </div>\\r\\n                <div class=\\\"group\\\">\\r\\n                  <input #variable  accept=\\\".xlsx\\\" (change)=\\\"fileChangeXlsx($event, variable)\\\" type=\\\"file\\\" class=\\\"form-control choosefiles\\\" formControlName=\\\"excelFile\\\">\\r\\n                </div>\\r\\n                <div class=\\\"group\\\">\\r\\n                  <a href=\\\"assets/file/se_competitive_format.xlsx\\\">  Sample Quiz\\r\\n                  <img class=\\\"img-fluid\\\" width=\\\"20\\\" height=\\\"18\\\" alt=\\\" \\\" src=\\\"assets/images/sample-quiz.jpg\\\"> </a>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"group\\\">\\r\\n                  Upload image Zip file\\r\\n                </div>\\r\\n                <div class=\\\"group\\\">\\r\\n                  <input #variable1 accept=\\\".zip\\\" (change)=\\\"fileChangeZip($event, variable1)\\\" type=\\\"file\\\" class=\\\"form-control choosefiles\\\" formControlName=\\\"zipFile\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"group do-u-have-img\\\">\\r\\n                    Do you have image? <input type=\\\"checkbox\\\" formControlName=\\\"existImage\\\" value=\\\"Yes\\\" (change)=\\\"eventCheck($event)\\\"> Yes\\r\\n\\r\\n                  </div>\\r\\n                <div class=\\\"group\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <!-- Progress Bar --> \\r\\n                    <div class=\\\"progress form-group\\\" *ngIf=\\\"percentDone\\\">\\r\\n                        <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\"\\r\\n                          [style.width.%]=\\\"percentDone\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- spinnner element is defined with id loading -->\\r\\n                  <div class=\\\"justify-content-center\\\" id=\\\"loading-s\\\" style=\\\"display: none !important\\\"> \\r\\n                      <div class=\\\"spinner-border\\\" role=\\\"status\\\"> \\r\\n                          <span class=\\\"sr-only\\\" id=\\\"loading\\\"></span> \\r\\n                      </div> \\r\\n                  </div>\\r\\n                  \\r\\n                  <button type=\\\"button\\\" class=\\\"btn allam-btn-green text-white\\\" (click)=\\\"upload()\\\" id=\\\"btnUpload\\\"><span *ngIf=\\\"loading2\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span> Upload</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n          <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n          <div *ngIf=\\\"isError\\\" class=\\\"bulk_table_fullw\\\">\\r\\n            <h5 class=\\\"mt-4\\\">Following data is having errors:</h5>\\r\\n            <div class=\\\"col-sm-12 col-xs-12 col-md-12 table-responsive p-0\\\">\\r\\n              <div class=\\\"publish-table-wrap mt-0\\\">\\r\\n               \\r\\n                  <table width=\\\"100%\\\" class=\\\"table table-striped table-bordered nowrap dataTable\\\" border=\\\"1\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                       \\r\\n                        <th>Question</th>\\r\\n                       <!--  <th>Question File Url</th> -->\\r\\n                        <th>Answer</th>\\r\\n                        <th>option A</th>\\r\\n                        <th>option B</th>\\r\\n                        <th>option C</th>\\r\\n                        <th>Option D</th>\\r\\n                        <th>Level</th>\\r\\n                        \\r\\n                        <th>Remarks</th>\\r\\n                        \\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of errorData\\\">\\r\\n                        \\r\\n                        <td width=\\\"10%\\\">{{ item.question }}</td>\\r\\n                        <!-- <td width=\\\"10%\\\">{{ item.question_file_url }}</td> -->\\r\\n                        <td width=\\\"10%\\\">{{ item.answer }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.option1 }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.option2 }}</td>\\r\\n                         <td width=\\\"10%\\\">{{ item.option3 }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.option4 }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.level }}</td>\\r\\n                       \\r\\n                        <td [innerHTML]=\\\"item.Remarks\\\" width=\\\"15%\\\"></td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"isProcessed\\\" class=\\\"bulk_table_fullw\\\">\\r\\n            <div class=\\\"card-block col-sm-12 col-xs-12 col-md-12 p-0\\\">\\r\\n              \\r\\n                  <button class=\\\"btn allam-btn btn-success mt-3 mb-3\\\" (click)=\\\"downloadItem()\\\" title=\\\"Download\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-download\\\"></i></button>\\r\\n               \\r\\n                    <div class=\\\"publish-table-wrap table-responsive mt-0 pt-0\\\">\\r\\n                      <table id=\\\"autofill\\\" class=\\\"table table-striped table-bordered nowrap dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"autofill_info\\\">\\r\\n                        <thead>\\r\\n                          <tr>\\r\\n                           <!--  <th>Level</th> -->\\r\\n                            <th>Answer</th>\\r\\n                            <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n                            <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n                            <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n                            <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n                            <th>Question Type</th>\\r\\n                            <th>Question </th>\\r\\n                            <th>Quant/Verbal </th>\\r\\n                            <th>Group </th>\\r\\n                            <th>Quiz type</th>\\r\\n                            <th>Quiz sub type</th>\\r\\n                            <th>Duation</th>\\r\\n                            <th>Edit </th>\\r\\n                            <th>Delete </th>\\r\\n                            <th><span class=\\\"option-width\\\"><input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"selectAll()\\\" [checked]=\\\"selectedAll\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deletItem()\\\" title=\\\"Delete\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-delete\\\"></i></button> </span>\\r\\n                            \\r\\n                            </th>\\r\\n                           \\r\\n                           <!--  <th>Image URL</th> -->\\r\\n                            \\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr *ngFor=\\\"let item of questionArr\\\">  \\r\\n                          <!--   <td class=\\\"\\\">{{ item.level }}</td> -->\\r\\n                            <td class=\\\"\\\">{{ item.answer }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.option4 }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.option3 }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.option2 }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.option1 }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.question_type }} </td>\\r\\n                            <td *ngIf=\\\"item.question_type=='text_and_image'\\\">\\r\\n                            <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n                            <br>\\r\\n                             {{ item.question }}\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"item.question_type=='image'\\\">\\r\\n                            <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"item.question_type=='text' || item.question_type==null\\\">\\r\\n                             {{ item.question }}\\r\\n                            </td>\\r\\n                            <td class=\\\"\\\">{{ item.quant_verbal }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.groups }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.quiz_type_name }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.quiz_sub_type_name }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.duration }}</td>\\r\\n                          <!--  <td class=\\\"\\\"> <span class=\\\"img-url-break\\\">{{ item.question_image_url }} </span> </td> -->\\r\\n                            <td><button type=\\\"button\\\" class=\\\"btn allam-btn allam-btn-green text-white\\\" (click)=\\\"editItem(item)\\\"><i class=\\\"icofont icofont-ui-edit\\\"></i> </button>\\r\\n                            </td>\\r\\n                            <td class=\\\"\\\">\\r\\n                              <button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deleteOneItem(item.id)\\\" title=\\\"delete\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-delete\\\"></i></button>\\r\\n                            </td>\\r\\n                            <td class=\\\"categories\\\"><!-- <input type=\\\"checkbox\\\"  name=\\\"del_row\\\" [value]=\\\"item.id\\\" (change)=\\\"onCheckboxChange($event,item.id)\\\" > -->\\r\\n                              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"{{item.question}}\\\" [(ngModel)]=\\\"item.selected\\\" (change)=\\\"checkIfAllSelected($event,item.id)\\\">\\r\\n                            </td>\\r\\n                            \\r\\n                             \\r\\n                          </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n                        <div class=\\\"m-t-15\\\">\\r\\n                            <button (click)=\\\"reUpload()\\\" class=\\\"btn allam-btn-green text-white round-border \\\">\\r\\n                              Cancel\\r\\n                            </button> &nbsp; \\r\\n                            <!-- <button (click)=\\\"onSubmitData()\\\" class=\\\"btn allam-btn-green text-white round-border \\\">\\r\\n                              Publish\\r\\n                            </button> -->\\r\\n                            <button [disabled]=\\\"loading2\\\" class=\\\"btn allam-btn-green text-white round-border\\\"  (click)=\\\"publish()\\\">\\r\\n                              <span *ngIf=\\\"loading2\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                               Publish\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        \\r\\n                      </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"isEdit\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onUpdateTemp()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <!-- <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label >Class</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"class\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.class.errors }\\\">\\r\\n                      <option value=\\\"\\\">Class</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_class\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n                    \\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                    <div *ngIf=\\\"submitted && f.class.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.class.errors.required\\\">Class is required.</div>\\r\\n                      <div *ngIf=\\\"f.class.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label>Quiz Sub Type</label>\\r\\n                    \\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"quiz_sub_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_sub_type.errors }\\\">\\r\\n                      <option value=\\\"\\\">Quiz Sub Type</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_sub_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.quiz_sub_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.quiz_sub_type.errors.required\\\">Quiz sub type is required.</div>\\r\\n                   </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label>Quiz Type</label>\\r\\n                    \\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"quiz_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_type.errors }\\\">\\r\\n                      <option value=\\\"\\\">QuizType</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.quiz_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.quiz_type.errors.required\\\">Quiz type is required.</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n              </div>  -->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n            \\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label>Quant/Verbal</label>\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Quant/Verbal\\\" type=\\\"text\\\" formControlName=\\\"quant_verbal\\\" formControlName=\\\"quant_verbal\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quant_verbal.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.quant_verbal.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.quant_verbal.errors.required\\\">This field is required.</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label>Group</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"group\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.group.errors }\\\">\\r\\n                      <option value=\\\"\\\">Group</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_group\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                    <div *ngIf=\\\"submitted && f.group.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.group.errors.required\\\">Group is required.</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n              <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n               <div class=\\\"group\\\">\\r\\n                <label>Question Type</label>\\r\\n                <select class=\\\"form-control\\\" (change)=\\\"qtChanged($event.target.value)\\\" formControlName=\\\"question_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question_type.errors }\\\">\\r\\n                      <option value=\\\"text\\\">Text</option>\\r\\n                      <option value=\\\"image\\\">Image</option>\\r\\n                      <option value=\\\"text_and_image\\\">Text and Image</option>\\r\\n                </select>\\r\\n                <span class=\\\"md-line\\\"></span>\\r\\n                 <div *ngIf=\\\"submitted && f.question_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.question_type.errors.required\\\">Question Type is required.</div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n              <!-- <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label>Lesson</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"lesson\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lesson.errors }\\\">\\r\\n                      <option value=\\\"\\\">Lesson</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_lesson\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.lesson.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.lesson.errors.required\\\">Lesson is required.</div>\\r\\n                          <div *ngIf=\\\"f.lesson.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                      </div>\\r\\n                 </div>\\r\\n              </div>  -->\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-8 \\\">\\r\\n                <div class=\\\"row \\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                  \\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Option A\\\" type=\\\"text\\\" formControlName=\\\"option1\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option1.errors }\\\">\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                    <div *ngIf=\\\"submitted && f.option1.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.option1.errors.required\\\">Option A is required.</div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2  txt-left \\\"> \\r\\n                    <label class=\\\"radio-box\\\">\\r\\n                      <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"a\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'a'\\\">\\r\\n                      <span class=\\\"checkmark\\\"></span>\\r\\n                    </label>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-15\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n\\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Option B\\\" type=\\\"text\\\" formControlName=\\\"option2\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option2.errors }\\\">\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                   <div *ngIf=\\\"submitted && f.option2.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.option2.errors.required\\\">Option B is required.</div>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2 txt-left\\\"> \\r\\n                    <label class=\\\"radio-box\\\">\\r\\n                      <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"b\\\" formControlName=\\\"answer\\\"  [checked]=\\\"form.get('answer').value.toLowerCase() == 'b'\\\">\\r\\n                      <span class=\\\"checkmark\\\"></span>\\r\\n                    </label>\\r\\n                   </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-15\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n\\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Option C\\\" type=\\\"text\\\" formControlName=\\\"option3\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option3.errors }\\\">\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                   <div *ngIf=\\\"submitted && f.option3.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.option3.errors.required\\\">Option C is required.</div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                    <label class=\\\"radio-box\\\">\\r\\n                      <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"c\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'c'\\\"> \\r\\n                      <span class=\\\"checkmark\\\"></span>\\r\\n                    </label>\\r\\n                   </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row m-t-15\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                  \\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Option D\\\" type=\\\"text\\\" formControlName=\\\"option4\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option4.errors }\\\">\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                   <div *ngIf=\\\"submitted && f.option4.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.option4.errors.required\\\">Option D is required.</div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                    <label class=\\\"radio-box\\\">\\r\\n                      <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"d\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'd'\\\">\\r\\n                      <span class=\\\"checkmark\\\"></span>\\r\\n                    </label>\\r\\n                   </div>\\r\\n                </div>\\r\\n              <!--   <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n                    <label >Level</label>\\r\\n                     <div class=\\\"group\\\">\\r\\n                      \\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"level\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.level.errors }\\\">\\r\\n                        <option value=\\\"\\\">Level</option>\\r\\n                        <option *ngFor=\\\"let option of levelOptions\\\" [value]=\\\"option\\\" >{{option}}</option>\\r\\n                      </select>\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.level.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.level.errors.required\\\">Level is required.</div>\\r\\n                          <div *ngIf=\\\"f.level.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div> \\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n                    <label >Duration (In Seconds)</label>\\r\\n                     <div class=\\\"group\\\">\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"duration\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\">\\r\\n                        <option value=\\\"\\\">Duration (In Seconds)</option>\\r\\n                        <option *ngFor=\\\"let option of durationOptions\\\" [value]=\\\"option\\\" >{{option}}</option>\\r\\n                      </select>\\r\\n                      \\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.duration.errors.required\\\">Question time is required.</div>\\r\\n                          <div *ngIf=\\\"f.duration.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div> \\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                    <label >Note</label>\\r\\n                    <div class=\\\"group\\\">\\r\\n\\r\\n                     <input class=\\\"form-control\\\" placeholder=\\\"Note\\\" type=\\\"text\\\" formControlName=\\\"note\\\" maxlength=\\\"70\\\">\\r\\n                     <span class=\\\"md-line\\\"></span>\\r\\n                    </div>\\r\\n                  </div> \\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                </div> \\r\\n                \\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                    <div class=\\\"m-t-15\\\">\\r\\n                      <button (click)=\\\"goBack()\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-warning text-white round-border m-r-10 create_cancel\\\">\\r\\n                         <span *ngIf=\\\"this.idEdit\\\">Back</span>\\r\\n                      </button>\\r\\n                      \\r\\n                      <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border create_cancel\\\">\\r\\n                        <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                         <span *ngIf=\\\"this.idEdit\\\">Update</span>\\r\\n                         \\r\\n                      </button>\\r\\n\\r\\n                    </div>\\r\\n                    \\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>  \\r\\n                </div>\\r\\n              </div>\\r\\n               <div class=\\\"col-lg-4 \\\" *ngIf=\\\"question_type=='text'\\\">\\r\\n                <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                 <label>Question</label>\\r\\n                  \\r\\n                  <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"> </textarea>\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                  <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.question.errors.required\\\">Question is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n               <div *ngIf=\\\"question_type=='image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n             <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                <div class=\\\" m-t-15\\\">\\r\\n                  <label>Upload Question </label>\\r\\n                    <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"preview\\\" *ngIf=\\\"croppedImage!=local_api_url\\\">\\r\\n                  <img [src]=\\\"croppedImage\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"question_type=='text_and_image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n             <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                <div class=\\\" m-t-15\\\">\\r\\n                  <label>Upload Question </label>\\r\\n                    <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"preview\\\" *ngIf=\\\"croppedImage!=local_api_url\\\">\\r\\n                  <img [src]=\\\"croppedImage\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                 <label>Question Text</label>\\r\\n                  <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" > </textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n\\r\\n              \\r\\n            </div>\\r\\n            <!--\\r\\n               <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n                  <div class=\\\"m-t-15\\\">\\r\\n                    <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 create_cancel\\\">\\r\\n                      <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                       Save and insert\\r\\n                    </button>\\r\\n                    </div>\\r\\n                   </div>\\r\\n                   \\r\\n            </div>\\r\\n            -->\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal crop-image-wrap\\\" id=\\\"myModal\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Crop Image</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close alert-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">&times;</button>\\r\\n      </div>\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body slot-details-wrap\\\">\\r\\n          <image-cropper \\r\\n          [imageChangedEvent]=\\\"imageChangedEvent\\\" \\r\\n          [maintainAspectRatio]=\\\"true\\\" \\r\\n          [aspectRatio]=\\\"3 / 2\\\"\\r\\n          [resizeToWidth]=\\\"600\\\" \\r\\n          format=\\\"png\\\" \\r\\n          (imageCropped)=\\\"imageCropped($event)\\\" \\r\\n          (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n          (cropperReady)=\\\"cropperReady()\\\" \\r\\n          (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal footer -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid single-curriculum\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 single-curriculum-wrap\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 quiz-title-wrap\\\">\\r\\n          <h4 class=\\\"main-title\\\">Competitive exam</h4>\\r\\n          <h5 class=\\\"pre_title\\\">({{pre_quiz_title}})</h5>\\r\\n        </div>\\r\\n        </div>\\r\\n        <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n         <!--  <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n              <div class=\\\"group\\\">\\r\\n                 <select class=\\\"form-control\\\" formControlName=\\\"class\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.class.errors }\\\">\\r\\n                  <option value=\\\"\\\">Class</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_class\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n               </select>\\r\\n                <span class=\\\"md-line\\\"></span>\\r\\n                <div *ngIf=\\\"submitted && f.class.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.class.errors.required\\\">Class is required.</div>\\r\\n                  <div *ngIf=\\\"f.class.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>  -->\\r\\n          \\r\\n         <!--  <div class=\\\" col-sm-4 col-sm-4 col-md-4\\\">\\r\\n              <div class=\\\"group\\\">\\r\\n                <label>Quiz Sub Type</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"quiz_sub_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_sub_type.errors }\\\">\\r\\n                  <option value=\\\"\\\">Quiz Sub Type</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_sub_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                </select>\\r\\n                <span class=\\\"md-line\\\"></span>\\r\\n                <div *ngIf=\\\"submitted && f.quiz_sub_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.quiz_sub_type.errors.required\\\">Quiz sub type is required.</div>\\r\\n               </div>\\r\\n             </div>\\r\\n          </div> \\r\\n           <div class=\\\" col-sm-4 col-sm-4 col-md-4\\\">\\r\\n              <div class=\\\"group\\\">\\r\\n                <label>Quiz Type</label>\\r\\n                 <select class=\\\"form-control\\\" formControlName=\\\"quiz_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_type.errors }\\\">\\r\\n                  <option value=\\\"\\\">Quiz Type</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                </select>\\r\\n                <span class=\\\"md-line\\\"></span>\\r\\n                <div *ngIf=\\\"submitted && f.quiz_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.quiz_type.errors.required\\\">Quiz type is required.</div>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>  -->\\r\\n       </div>\\r\\n\\r\\n       <div class=\\\"row\\\">\\r\\n        \\r\\n        <!-- <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n            <div class=\\\"group\\\">\\r\\n              <label>Chapter</label>\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"chapter\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.chapter.errors }\\\">\\r\\n                  <option value=\\\"\\\">Chapter</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_chapter\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n               </select>\\r\\n\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n              <div *ngIf=\\\"submitted && f.chapter.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.chapter.errors.required\\\">Chapter is required.</div>\\r\\n                  <div *ngIf=\\\"f.chapter.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n              </div>\\r\\n           </div>\\r\\n        </div> --> \\r\\n        \\r\\n         <!-- <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n            <div class=\\\"group\\\">\\r\\n              <label>Semester</label>\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"semester\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.semester.errors }\\\">\\r\\n                <option value=\\\"\\\">Semester</option>\\r\\n                <option *ngFor=\\\"let option of masterArr.master_semester\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n              </select>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n              <div *ngIf=\\\"submitted && f.semester.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.semester.errors.required\\\">Semester is required.</div>\\r\\n                  <div *ngIf=\\\"f.semester.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n              </div>\\r\\n           </div>\\r\\n         </div> --> \\r\\n     </div>\\r\\n     <div class=\\\"row\\\">\\r\\n       <!--  <div class=\\\" col-sm-4 col-sm-4 col-md-4\\\">\\r\\n            <div class=\\\"group\\\">\\r\\n              <label>Subject</label>\\r\\n               <select class=\\\"form-control\\\" formControlName=\\\"subject\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.subject.errors }\\\">\\r\\n                  <option value=\\\"\\\">Subject</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_subject\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n               </select>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n              <div *ngIf=\\\"submitted && f.subject.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.subject.errors.required\\\">Subject is required.</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> -->\\r\\n      <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Quant/Verbal</label>\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Quant/Verbal\\\" type=\\\"text\\\" formControlName=\\\"quant_verbal\\\" formControlName=\\\"quant_verbal\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quant_verbal.errors }\\\">\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n            <div *ngIf=\\\"submitted && f.quant_verbal.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.quant_verbal.errors.required\\\">This field is required.</div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div> \\r\\n       <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Group</label>\\r\\n             <select class=\\\"form-control\\\" formControlName=\\\"group\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.group.errors }\\\">\\r\\n                  <option value=\\\"\\\">Group</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_group\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n            <div *ngIf=\\\"submitted && f.group.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.group.errors.required\\\">Group is required.</div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-2 col-sm-2 col-md-2\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Language</label>\\r\\n            <select class=\\\"form-control\\\" (change)=\\\"lgChanged($event.target.value)\\\" formControlName=\\\"language\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.language.errors }\\\">\\r\\n                  <option value=\\\"arabic\\\">Arabic</option>\\r\\n                  <option value=\\\"english\\\">English</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.language.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.language.errors.required\\\">Question Type is required.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div> \\r\\n       <div class=\\\"col-sm-2 col-sm-2 col-md-2\\\">\\r\\n           <div class=\\\"group\\\">\\r\\n            <label>Question Type</label>\\r\\n            <select class=\\\"form-control\\\" (change)=\\\"qtChanged($event.target.value)\\\" formControlName=\\\"question_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question_type.errors }\\\">\\r\\n                  <option value=\\\"text\\\">text</option>\\r\\n                  <option value=\\\"image\\\">image</option>\\r\\n                  <option value=\\\"text_and_image\\\">Text and Image</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.question_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.question_type.errors.required\\\">Question type is required.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n       <!-- <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Lesson</label>\\r\\n             <select class=\\\"form-control\\\" formControlName=\\\"lesson\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lesson.errors }\\\">\\r\\n                  <option value=\\\"\\\">Lesson</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_lesson\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n               </select>\\r\\n\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n            <div *ngIf=\\\"submitted && f.lesson.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.lesson.errors.required\\\">Lession is required.</div>\\r\\n                  <div *ngIf=\\\"f.lesson.errors.pattern\\\">Accept numeric values only.</div>\\r\\n            </div>\\r\\n         </div>\\r\\n       </div>  -->\\r\\n   </div>\\r\\n\\r\\n   <div class=\\\"row\\\">\\r\\n    \\r\\n    <div class=\\\"col-lg-8 \\\"> \\r\\n      <div class=\\\"row \\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='optiona_value' [config]=\\\"config\\\" (blur)=\\\"onChangeA($event)\\\" class=\\\"q_opton optiona\\\"></ckeditor>\\r\\n        <!-- <input class=\\\"form-control\\\" placeholder=\\\"Option A\\\" type=\\\"text\\\" formControlName=\\\"option1\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option1.errors }\\\"> -->\\r\\n\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n          <div *ngIf=\\\"submitted && f.option1.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option1.errors.required\\\">Option A is required.</div>\\r\\n           </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2  txt-left\\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"a\\\" formControlName=\\\"answer\\\" checked>\\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"row m-t-15\\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='optionb_value' [config]=\\\"config\\\" (blur)=\\\"onChangeB($event)\\\" class=\\\"q_opton optionb\\\"></ckeditor>\\r\\n        <!-- <input class=\\\"form-control\\\" placeholder=\\\"Option B\\\" type=\\\"text\\\" formControlName=\\\"option2\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option2.errors }\\\"> -->\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n         <div *ngIf=\\\"submitted && f.option2.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option2.errors.required\\\">Option B is required.</div>\\r\\n           </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2 txt-left\\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"b\\\" formControlName=\\\"answer\\\">\\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"row m-t-15\\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='optionc_value' [config]=\\\"config\\\" (blur)=\\\"onChangeC($event)\\\" class=\\\"q_opton optionc\\\"></ckeditor>\\r\\n        <!-- <input class=\\\"form-control\\\" placeholder=\\\"Option C\\\" type=\\\"text\\\" formControlName=\\\"option3\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option3.errors }\\\"> -->\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n         <div *ngIf=\\\"submitted && f.option3.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option3.errors.required\\\">Option C is required.</div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"c\\\" formControlName=\\\"answer\\\"> \\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"row m-t-15\\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='optiond_value' [config]=\\\"config\\\" (blur)=\\\"onChangeD($event)\\\" class=\\\"q_opton optiond\\\"></ckeditor>\\r\\n        <!-- <input class=\\\"form-control\\\" placeholder=\\\"Option D\\\" type=\\\"text\\\" formControlName=\\\"option4\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option4.errors }\\\"> -->\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n         <div *ngIf=\\\"submitted && f.option4.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option4.errors.required\\\">Option D is required.</div>\\r\\n          </div>           \\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"d\\\" formControlName=\\\"answer\\\">\\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <!-- <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n             <select class=\\\"form-control\\\" formControlName=\\\"level\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.level.errors }\\\">\\r\\n                  <option value=\\\"\\\">Level</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_level\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n            </select>\\r\\n\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n            <div *ngIf=\\\"submitted && f.level.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.level.errors.required\\\">Level is required.</div>\\r\\n                <div *ngIf=\\\"f.level.errors.pattern\\\">Accept numeric values only.</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>  -->\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n    </div> \\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n           <div class=\\\"group\\\">\\r\\n            <label>Duration(in seconds)</label>\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"duration\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\">\\r\\n                  <option value=\\\"\\\">Duration(in seconds)</option>\\r\\n                  <option value=\\\"05\\\">05</option>\\r\\n                  <option value=\\\"15\\\">15</option>\\r\\n                  <option value=\\\"25\\\">25</option>\\r\\n                  <option value=\\\"30\\\">30</option>\\r\\n                  <option value=\\\"60\\\">60</option>\\r\\n                  <option value=\\\"120\\\">120</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.duration.errors.required\\\">Duration is required.</div>\\r\\n                <div *ngIf=\\\"f.duration.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div> \\r\\n      <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n\\r\\n    </div> \\r\\n    \\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n     <div class=\\\"group\\\">\\r\\n      <label>Note</label>\\r\\n       <input class=\\\"form-control\\\" placeholder=\\\"Note\\\" type=\\\"text\\\" formControlName=\\\"note\\\" maxlength=\\\"70\\\">\\r\\n       <span class=\\\"md-line\\\"></span>\\r\\n    </div>\\r\\n  </div> \\r\\n  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n\\r\\n  </div> \\r\\n\\r\\n  \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-xs-12 col-md-10\\\">\\r\\n      <div class=\\\"m-t-15\\\">\\r\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 create_cancel\\\">\\r\\n          <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n           <span *ngIf=\\\"this.idEdit\\\">Update</span>\\r\\n           <span *ngIf=\\\"this.idEdit==false\\\">Save and insert</span>\\r\\n        </button>\\r\\n        </div>\\r\\n       </div>\\r\\n       <div class=\\\"col-md-2\\\"> </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n    \\r\\n      <div class=\\\"col-md-4\\\" *ngIf=\\\"question_type=='text'\\\">\\r\\n        <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n         <label>Question</label>\\r\\n          <ckeditor [editor]=\\\"Editor\\\" [config]=\\\"config\\\" [data]='question_value' (blur)=\\\"onChange($event)\\\" class=\\\"question\\\"></ckeditor>\\r\\n        <div class=\\\"question_note\\\">Note: your question should be in the limit of the text editor height and width. NO SCROLL BAR should be displayed as this will be out of the limit of the question maximum length.</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"question_type=='image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n         <div class=\\\"form-group  files color m-t-15\\\">\\r\\n            <div class=\\\" m-t-15\\\">\\r\\n              <label>Upload Question </label>\\r\\n                <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"preview\\\" >\\r\\n              <img [src]=\\\"croppedImage\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n       <div *ngIf=\\\"question_type=='text_and_image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n       <div class=\\\"form-group  files color m-t-15\\\">\\r\\n          <div class=\\\" m-t-15\\\">\\r\\n            <label>Upload Question </label>\\r\\n              <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"preview\\\" >\\r\\n            <img [src]=\\\"croppedImage\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n           <label>Question Text</label>\\r\\n            <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question_text\\\" maxlength=\\\"70\\\" > </textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n     \\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"card-block col-sm-6 col-sm-6 col-md-6\\\">\\r\\n         \\r\\n     </div> \\r\\n\\r\\n     <div class=\\\"card-block col-sm-6 col-sm-6 col-md-6\\\">\\r\\n    \\r\\n </div> \\r\\n \\r\\n   </div>\\r\\n\\r\\n</form>   \\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"gridview\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"download-icon\\\">\\r\\n        <button class=\\\"btn allam-btn btn-success\\\" (click)=\\\"downloadItem()\\\" title=\\\"Download\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-download\\\"></i></button>\\r\\n      </div>\\r\\n      <div class=\\\"publish-table-wrap m-b-0 table-responsive\\\"> \\r\\n        <table class=\\\"table table-striped table-bordered \\\" id=\\\"\\\" >\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Answer</th>\\r\\n            <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n            <th><span class=\\\"option-width\\\">option B </span></th>\\r\\n            <th><span class=\\\"option-width\\\">option A</span> </th>\\r\\n            <th>Question </th>\\r\\n            <th>Quant/Verbal </th>\\r\\n            <th>Group </th>\\r\\n            <th>Edit</th>\\r\\n            <th>Delete</th>\\r\\n            <th>\\r\\n              <button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deletItem()\\\" title=\\\"Delete\\\" type=\\\"button\\\">\\r\\n              <i class=\\\"icofont icofont-ui-delete\\\"></i></button> \\r\\n            </th>\\r\\n          </tr>\\r\\n         </thead>\\r\\n          <tbody>\\r\\n            <tr class=\\\"even ng-star-inserted\\\" *ngFor=\\\"let question of questionArr\\\">\\r\\n                <td class=\\\"\\\">{{ question.answer }}</td>\\r\\n                <td class=\\\"\\\"  [innerHTML]=\\\"question.option4 | safeHtml\\\"></td>\\r\\n                <td class=\\\"\\\"  [innerHTML]=\\\"question.option3 | safeHtml\\\"></td>\\r\\n                <td class=\\\"\\\"  [innerHTML]=\\\"question.option2 | safeHtml\\\"></td>\\r\\n                <td class=\\\"\\\"  [innerHTML]=\\\"question.option1 | safeHtml\\\"></td>\\r\\n                <td class=\\\"\\\">\\r\\n                  <div *ngIf=\\\"question.qui_type=='text'\\\" [innerHTML]=\\\"question.question | safeHtml\\\"></div>\\r\\n                  <div *ngIf=\\\"question.qui_type=='image'\\\">\\r\\n                    <img src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"question.qui_type=='text_and_image'\\\">\\r\\n                    <img src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                    <br>{{question.question}}\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td class=\\\"\\\">{{ question.quant_verbal }}</td>\\r\\n                <td class=\\\"\\\">{{ question.groups }}</td>\\r\\n                <td class=\\\"\\\">\\r\\n                  <button class=\\\"btn allam-btn allam-btn-green text-white\\\" (click)=\\\"editItem(question)\\\" title=\\\"Edit\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-edit\\\"></i></button>\\r\\n                </td>\\r\\n                <td class=\\\"\\\">\\r\\n                  <button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deleteOneItem(question.id)\\\" title=\\\"delete\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-delete\\\"></i></button>\\r\\n                </td>\\r\\n                <td class=\\\"categories\\\">\\r\\n                   <input type=\\\"checkbox\\\"  name=\\\"del_row\\\" [value]=\\\"question.id\\\" (change)=\\\"onCheckboxChange($event,question.id)\\\" >  \\r\\n                </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n         \\r\\n      </div>\\r\\n   </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"gridview\\\">\\r\\n    <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n      <div class=\\\"m-t-15 fl-left\\\">\\r\\n         <button [disabled]=\\\"loading2\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 \\\"  (click)=\\\"publish()\\\">\\r\\n          <span *ngIf=\\\"loading2\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n           Publish\\r\\n        </button>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"modal crop-image-wrap\\\" id=\\\"myModal\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Crop Image</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close alert-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">&times;</button>\\r\\n      </div>\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body slot-details-wrap\\\">\\r\\n          <image-cropper \\r\\n          [imageChangedEvent]=\\\"imageChangedEvent\\\" \\r\\n          [maintainAspectRatio]=\\\"true\\\" \\r\\n          [aspectRatio]=\\\"3 / 2\\\"\\r\\n          [resizeToWidth]=\\\"600\\\" \\r\\n          format=\\\"png\\\" \\r\\n          (imageCropped)=\\\"imageCropped($event)\\\" \\r\\n          (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n          (cropperReady)=\\\"cropperReady()\\\" \\r\\n          (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal footer -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid single-curriculum\\\">\\r\\n \\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 single-curriculum-wrap\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h4>Curriculum Exam</h4>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"isSave\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"formVar\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n              <div class=\\\"row file-upload\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                  Upload xlsx file\\r\\n                </div>\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <input #variable accept=\\\".xlsx\\\" (change)=\\\"fileChangeXlsx($event, variable)\\\" type=\\\"file\\\" class=\\\"form-control choosefiles\\\" formControlName=\\\"excelFile\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <a href=\\\"assets/file/se_curriculum_format.xlsx\\\"> \\r\\n                      Sample Quiz\\r\\n                    <img class=\\\"img-fluid\\\" width=\\\"20\\\" height=\\\"18\\\" alt=\\\" \\\" src=\\\"assets/images/sample-quiz.jpg\\\"> </a>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                  Upload image Zip file\\r\\n                </div>\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <input #variable1 accept=\\\".zip\\\" (change)=\\\"fileChangeZip($event, variable1)\\\" type=\\\"file\\\" class=\\\"form-control choosefiles\\\" formControlName=\\\"zipFile\\\">\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"group do-u-have-img\\\">\\r\\n                    Do you have image? <input type=\\\"checkbox\\\" formControlName=\\\"existImage\\\" value=\\\"Yes\\\" (change)=\\\"eventCheck($event)\\\"> Yes\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                      <!-- Progress Bar --> \\r\\n                      <div class=\\\"progress form-group\\\" *ngIf=\\\"percentDone\\\">\\r\\n                          <div class=\\\"progress-bar progress-bar-striped bg-success\\\" role=\\\"progressbar\\\"\\r\\n                            [style.width.%]=\\\"percentDone\\\">\\r\\n                          </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <!-- spinnner element is defined with id loading -->\\r\\n                      <div class=\\\"justify-content-center\\\" id=\\\"loading-s\\\" style=\\\"display: none !important\\\"> \\r\\n                          <div class=\\\"spinner-border\\\" role=\\\"status\\\"> \\r\\n                              <span class=\\\"sr-only\\\" id=\\\"loading\\\"></span> \\r\\n                          </div> \\r\\n                      </div>\\r\\n                    \\r\\n                     <button type=\\\"button\\\" class=\\\"btn allam-btn-green text-white\\\" (click)=\\\"upload()\\\" id=\\\"btnUpload\\\"><span *ngIf=\\\"loading2\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span> Upload</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div *ngIf=\\\"isError\\\" class=\\\"bulk_table_fullw table-responsive\\\">\\r\\n              <div class=\\\"publish-table-wrap \\\">\\r\\n                <h1>Following data is having errors:</h1>\\r\\n                  <table width=\\\"100%\\\" class=\\\"table table-striped table-bordered nowrap dataTable\\\" border=\\\"1\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        \\r\\n                        <th width=\\\"10%\\\">Question</th>\\r\\n                        <!-- <th width=\\\"10%\\\">Question File Url</th> -->\\r\\n                        <th width=\\\"10%\\\">Answer</th>\\r\\n                        <th width=\\\"10%\\\">Option A</th>\\r\\n                        <th width=\\\"10%\\\">Option B</th>\\r\\n                        <th width=\\\"10%\\\">Option C</th>\\r\\n                        <th width=\\\"10%\\\">Option D</th>\\r\\n                        <th width=\\\"10%\\\">Level</th>\\r\\n                        <th width=\\\"10%\\\">Notes</th>\\r\\n                        <th width=\\\"10%\\\">Remarks</th>\\r\\n                        \\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of errorData\\\">\\r\\n                        \\r\\n                        <td width=\\\"10%\\\">{{ item.question }}</td>\\r\\n                        <!-- <td width=\\\"10%\\\">{{ item.question_file_url }}</td> -->\\r\\n                        <td width=\\\"10%\\\">{{ item.answer }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.option1 }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.option2 }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.option3 }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.option4 }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.level }}</td>\\r\\n                        <td width=\\\"10%\\\">{{ item.notes }}</td>\\r\\n                        <td [innerHTML]=\\\"item.Remarks\\\" width=\\\"15%\\\"></td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n              </div>\\r\\n            \\r\\n          </div>\\r\\n          <div *ngIf=\\\"isProcessed\\\" class=\\\"bulk_table_fullw\\\">\\r\\n           \\r\\n              <button class=\\\"btn allam-btn btn-success mt-3 mb-3\\\" (click)=\\\"downloadItem()\\\" title=\\\"Download\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-download\\\"></i></button>\\r\\n           \\r\\n                    <div class=\\\"publish-table-wrap table-responsive mt-0 pt-0\\\">\\r\\n                      <table id=\\\"autofill\\\" class=\\\"table table-striped table-bordered table-sm dataTable no-footer\\\" role=\\\"grid\\\" aria-describedby=\\\"autofill_info\\\">\\r\\n                        <thead>\\r\\n                          <tr>\\r\\n                            <th>Level</th>\\r\\n                            <th>Answer</th>\\r\\n                            <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n                            <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n                            <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n                            <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n                            <th>Question Type</th>\\r\\n                            <th>Question </th>\\r\\n                            <!-- <th>Quant/Verbal </th>\\r\\n                            <th>Group </th> -->\\r\\n                            <th>Quiz type</th>\\r\\n                            <!-- <th>Quiz sub type</th> -->\\r\\n                            <th>Duration</th>\\r\\n                          <!--   <th>Image URL</th> -->\\r\\n                          <th>Edit </th>\\r\\n                          <th>Delete </th>\\r\\n                          <th><span class=\\\"option-width\\\"><input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"selectAll()\\\" [checked]=\\\"selectedAll\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deletItem()\\\" title=\\\"Delete\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-delete\\\"></i></button> </span>\\r\\n                          </th>\\r\\n                            \\r\\n                           \\r\\n                            \\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr *ngFor=\\\"let item of questionArr\\\">\\r\\n                            \\r\\n                            \\r\\n                            <td class=\\\"\\\">{{ item.level }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.answer }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.option4 }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.option3 }} </td>\\r\\n                            <td class=\\\"\\\">{{ item.option2 }} </td>\\r\\n                            <td class=\\\"\\\">{{ item.option1 }} </td>\\r\\n                            <td class=\\\"\\\">{{ item.question_type }} </td>\\r\\n                            <td *ngIf=\\\"item.question_type=='text_and_image'\\\">\\r\\n                            <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n                            <br>\\r\\n                             {{ item.question }}\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"item.question_type=='image'\\\">\\r\\n                            <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"item.question_type=='text' || item.question_type==null\\\">\\r\\n                             {{ item.question }}\\r\\n                            </td>\\r\\n                            <td class=\\\"\\\">{{ item.quiz_type_name }}</td>\\r\\n                            <td class=\\\"\\\">{{ item.duration }}</td>\\r\\n                            <td><button type=\\\"button\\\" class=\\\"btn allam-btn allam-btn-green text-white\\\" (click)=\\\"editItem(item)\\\"><i class=\\\"icofont icofont-ui-edit\\\"></i> </button></td>\\r\\n                            <td class=\\\"\\\">\\r\\n                              <button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deleteOneItem(item.id)\\\" title=\\\"delete\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-delete\\\"></i></button>\\r\\n                            </td>\\r\\n                            <td class=\\\"categories\\\"><!-- <input type=\\\"checkbox\\\"  name=\\\"del_row\\\" [value]=\\\"item.id\\\" (change)=\\\"onCheckboxChange($event,item.id)\\\" > -->\\r\\n                              \\r\\n                              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"{{item.question}}\\\" [(ngModel)]=\\\"item.selected\\\" (change)=\\\"checkIfAllSelected($event,item.id)\\\">\\r\\n                            </td>\\r\\n                           \\r\\n                           \\r\\n                          </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n                        \\r\\n                            <button (click)=\\\"reUpload()\\\" class=\\\"btn allam-btn-green text-white round-border \\\">\\r\\n                              Cancel\\r\\n                            </button> &nbsp; \\r\\n                            <!-- <button (click)=\\\"onSubmitData()\\\" class=\\\"btn allam-btn-green text-white round-border \\\">\\r\\n                              Publish\\r\\n                            </button> -->\\r\\n                            <button [disabled]=\\\"loading2\\\" class=\\\"btn allam-btn-green text-white round-border\\\"  (click)=\\\"publish()\\\">\\r\\n                            <span *ngIf=\\\"loading2\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                               Publish\\r\\n                            </button>\\r\\n                       \\r\\n                        \\r\\n                      </div>\\r\\n                    </div>\\r\\n                  \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"isEdit\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onUpdateTemp()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\"> \\r\\n                    <label>Class</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"class\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.class.errors }\\\">\\r\\n                      <option value=\\\"\\\">Class</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_class\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n                    \\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                    <div *ngIf=\\\"submitted && f.class.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.class.errors.required\\\">Class is required.</div>\\r\\n                      <div *ngIf=\\\"f.class.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n              \\r\\n               <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n\\r\\n                    <label>Chapter</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"chapter\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.chapter.errors }\\\">\\r\\n                      <option value=\\\"\\\">Chapter</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_chapter\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.chapter.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.chapter.errors.required\\\">Chapter is required.</div>\\r\\n                        <div *ngIf=\\\"f.chapter.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                    </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label>Subject</label>\\r\\n                    \\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"subject\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.subject.errors }\\\">\\r\\n                      <option value=\\\"\\\">Subject</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_subject\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.subject.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.subject.errors.required\\\">Subject is required.</div>\\r\\n                      </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n             \\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                  <div class=\\\"group\\\">\\r\\n                    <label>Semester</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"semester\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.semester.errors }\\\">\\r\\n                      <option value=\\\"\\\">Semester</option>\\r\\n                      <option *ngFor=\\\"let option of masterArr.master_semester\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                    </select>\\r\\n                    \\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.semester.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.semester.errors.required\\\">Semester is required.</div>\\r\\n                        <div *ngIf=\\\"f.semester.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                    </div>\\r\\n                 </div>\\r\\n              </div> \\r\\n\\r\\n              <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                <div class=\\\"group\\\">\\r\\n                  <label>Lesson</label>\\r\\n                  \\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"lesson\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lesson.errors }\\\">\\r\\n                    <option value=\\\"\\\">Lesson</option>\\r\\n                    <option *ngFor=\\\"let option of masterArr.master_lesson\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                  </select>\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                   <div *ngIf=\\\"submitted && f.lesson.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.lesson.errors.required\\\">Lession is required.</div>\\r\\n                        <div *ngIf=\\\"f.lesson.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                    </div>\\r\\n               </div>\\r\\n            </div> \\r\\n          <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n           <div class=\\\"group\\\">\\r\\n            <label>Question Type</label>\\r\\n            <select class=\\\"form-control\\\" (change)=\\\"qtChanged($event.target.value)\\\" formControlName=\\\"question_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question_type.errors }\\\">\\r\\n                  <option value=\\\"text\\\">Text</option>\\r\\n                  <option value=\\\"image\\\">Image</option>\\r\\n                  <option value=\\\"text_and_image\\\">Text and Image</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.question_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.question_type.errors.required\\\">question_type is required.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n            </div>\\r\\n   \\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-8 \\\">\\r\\n                <div class=\\\"row \\\">\\r\\n                   <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                      <input class=\\\"form-control\\\" placeholder=\\\"Option A\\\" type=\\\"text\\\" formControlName=\\\"option1\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option1.errors }\\\">\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                        <div *ngIf=\\\"submitted && f.option1.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.option1.errors.required\\\">Option A is required.</div>\\r\\n                         </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-2 col-xs-2 col-md-2  txt-left \\\"> \\r\\n                        <label class=\\\"radio-box\\\">\\r\\n                           <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"a\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'a'\\\">\\r\\n                          <span class=\\\"checkmark\\\"></span>\\r\\n                        </label>\\r\\n                       </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-15\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option B\\\" type=\\\"text\\\" formControlName=\\\"option2\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option2.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.option2.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option2.errors.required\\\">Option B is required.</div>\\r\\n                       </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2 txt-left\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"b\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'b'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-15\\\">\\r\\n                 <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Option C\\\" type=\\\"text\\\" formControlName=\\\"option3\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option3.errors }\\\">\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                   <div *ngIf=\\\"submitted && f.option3.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.option3.errors.required\\\">Option C is required.</div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                    <label class=\\\"radio-box\\\">\\r\\n                      <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"c\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'c'\\\">\\r\\n                      <span class=\\\"checkmark\\\"></span>\\r\\n                    </label>\\r\\n                   </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row m-t-15\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option D\\\" type=\\\"text\\\" formControlName=\\\"option4\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option4.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.option4.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option4.errors.required\\\">Option D is required.</div>\\r\\n                      </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"d\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'd'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n                     <div class=\\\"group\\\">\\r\\n                      <label>Level</label>\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"level\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.level.errors }\\\">\\r\\n                        <option value=\\\"\\\">Level</option>\\r\\n                        <option *ngFor=\\\"let option of masterArr.master_level\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                      </select>\\r\\n                      \\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.level.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.level.errors.required\\\">Level is required.</div>\\r\\n                          <div *ngIf=\\\"f.level.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div> \\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                </div> \\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n                     <div class=\\\"group\\\">\\r\\n                      <label>Duration (In Seconds)</label>\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"duration\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\">\\r\\n                        <option value=\\\"\\\">Duration (In Seconds)</option>\\r\\n                        <option *ngFor=\\\"let option of durationOptions\\\" [value]=\\\"option\\\" >{{option}}</option>\\r\\n                      </select>\\r\\n                      \\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.duration.errors.required\\\">Question time is required.</div>\\r\\n                          <div *ngIf=\\\"f.duration.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div> \\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                </div> \\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <label>Note</label>\\r\\n                     <input class=\\\"form-control\\\" placeholder=\\\"Note\\\" type=\\\"text\\\" formControlName=\\\"note\\\" maxlength=\\\"70\\\">\\r\\n                     <span class=\\\"md-line\\\"></span>\\r\\n                    </div>\\r\\n                  </div> \\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                </div> \\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                    <div class=\\\"m-t-15\\\">\\r\\n                      <button (click)=\\\"goBack()\\\" [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 create_cancel\\\">\\r\\n                         <span *ngIf=\\\"this.idEdit\\\">Back</span>\\r\\n                      </button>\\r\\n                      \\r\\n                      <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border create_cancel\\\">\\r\\n                        <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                         <span *ngIf=\\\"this.idEdit\\\">Update</span>\\r\\n                         \\r\\n                      </button>\\r\\n\\r\\n                    </div>\\r\\n                    \\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>  \\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-lg-4 \\\" *ngIf=\\\"question_type=='text'\\\">\\r\\n                <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                 <label>Question</label>\\r\\n                  \\r\\n                  <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"> </textarea>\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                  <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.question.errors.required\\\">Question is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            <div *ngIf=\\\"question_type=='image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n               <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                  <div class=\\\" m-t-15\\\">\\r\\n                    <label>Upload Question </label>\\r\\n                      <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"preview\\\" *ngIf=\\\"croppedImage!=local_api_url\\\">\\r\\n                    <img [src]=\\\"croppedImage\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"question_type=='text_and_image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n               <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                  <div class=\\\" m-t-15\\\">\\r\\n                    <label>Upload Question </label>\\r\\n                      <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"preview\\\" *ngIf=\\\"croppedImage!=local_api_url\\\">\\r\\n                    <img [src]=\\\"croppedImage\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                   <label>Question Text</label>\\r\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" > </textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            </div>\\r\\n            \\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal crop-image-wrap\\\" id=\\\"myModal\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Crop Image</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close alert-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">&times;</button>\\r\\n      </div>\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body slot-details-wrap\\\">\\r\\n          <image-cropper \\r\\n          [imageChangedEvent]=\\\"imageChangedEvent\\\" \\r\\n          [maintainAspectRatio]=\\\"true\\\" \\r\\n          [aspectRatio]=\\\"3 / 2\\\"\\r\\n          [resizeToWidth]=\\\"600\\\" \\r\\n          format=\\\"png\\\" \\r\\n          (imageCropped)=\\\"imageCropped($event)\\\" \\r\\n          (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n          (cropperReady)=\\\"cropperReady()\\\" \\r\\n          (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal footer -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid single-curriculum\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 single-curriculum-wrap\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h4>Curriculum Exam</h4>\\r\\n        </div>\\r\\n        </div>\\r\\n        <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n         \\r\\n           <!-- <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n              <div class=\\\"group\\\">\\r\\n                <label>Quiz Sub Type</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"quiz_sub_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_sub_type.errors }\\\">\\r\\n                  <option value=\\\"\\\">Quiz Sub Type</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_sub_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                </select>\\r\\n\\r\\n                <span class=\\\"md-line\\\"></span>\\r\\n                 <div *ngIf=\\\"submitted && f.quiz_sub_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.quiz_sub_type.errors.required\\\">Quiz sub type is required.</div>\\r\\n               </div>\\r\\n             </div>\\r\\n          </div> \\r\\n           <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n              <div class=\\\"group\\\">\\r\\n                <label>Quiz Type</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"quiz_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_type.errors }\\\">\\r\\n                  <option value=\\\"\\\">Quiz Type</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                </select>\\r\\n\\r\\n                <span class=\\\"md-line\\\"></span>\\r\\n                 <div *ngIf=\\\"submitted && f.quiz_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.quiz_type.errors.required\\\">Quiz type is required.</div>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div>  -->\\r\\n       </div>\\r\\n\\r\\n       <div class=\\\"row\\\">\\r\\n         <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n          <label>Class</label>\\r\\n              <div class=\\\"group\\\">\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"class\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.class.errors }\\\">\\r\\n                  <option value=\\\"\\\">Class</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_class\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n               </select>\\r\\n              \\r\\n                <span class=\\\"md-line\\\"></span>\\r\\n                <div *ngIf=\\\"submitted && f.class.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.class.errors.required\\\">Class is required.</div>\\r\\n                  <div *ngIf=\\\"f.class.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                </div>\\r\\n             </div>\\r\\n          </div> \\r\\n        <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n            <div class=\\\"group\\\">\\r\\n\\r\\n              <label>Chapter</label>\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"chapter\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.chapter.errors }\\\">\\r\\n                  <option value=\\\"\\\">Chapter</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_chapter\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n              </select>\\r\\n\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n               <div *ngIf=\\\"submitted && f.chapter.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.chapter.errors.required\\\">Chapter is required.</div>\\r\\n                  <div *ngIf=\\\"f.chapter.errors.pattern\\\">Accept numeric values only.</div>\\r\\n              </div>\\r\\n           </div>\\r\\n        </div> \\r\\n         <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n            <div class=\\\"group\\\">\\r\\n            <label>Subject</label>\\r\\n             <select class=\\\"form-control\\\" formControlName=\\\"subject\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.subject.errors }\\\">\\r\\n                  <option value=\\\"\\\">Subject</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_subject\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n              </select>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n               <div *ngIf=\\\"submitted && f.subject.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.subject.errors.required\\\">Subject is required.</div>\\r\\n                </div>\\r\\n           </div>\\r\\n        </div> \\r\\n         \\r\\n     </div>\\r\\n     <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n            <div class=\\\"group\\\">\\r\\n              <label>Semester</label>\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"semester\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.semester.errors }\\\">\\r\\n                <option value=\\\"\\\">Semester</option>\\r\\n                <option *ngFor=\\\"let option of masterArr.master_semester\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                <option value=\\\"3\\\">Both(1 & 2)</option>\\r\\n              </select>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n               <div *ngIf=\\\"submitted && f.semester.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.semester.errors.required\\\">Semester is required.</div>\\r\\n                  <div *ngIf=\\\"f.semester.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n              </div>\\r\\n           </div>\\r\\n        </div> \\r\\n          <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Lesson</label>\\r\\n              <select class=\\\"form-control\\\" formControlName=\\\"lesson\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lesson.errors }\\\">\\r\\n                  <option value=\\\"\\\">Lesson</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_lesson\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n               </select>\\r\\n\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.lesson.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.lesson.errors.required\\\">Lession is required.</div>\\r\\n                  <div *ngIf=\\\"f.lesson.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n              </div>\\r\\n         </div>\\r\\n      </div> \\r\\n        <div class=\\\"col-sm-2 col-sm-2 col-md-2\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Language</label>\\r\\n            <select class=\\\"form-control\\\" (change)=\\\"lgChanged($event.target.value)\\\" formControlName=\\\"language\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.language.errors }\\\">\\r\\n                  <option value=\\\"arabic\\\">Arabic</option>\\r\\n                  <option value=\\\"english\\\">English</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.language.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.language.errors.required\\\">Question Type is required.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-sm-2 col-md-2\\\">\\r\\n           <div class=\\\"group\\\">\\r\\n            <label>Question Type</label>\\r\\n            <select class=\\\"form-control\\\" (change)=\\\"qtChanged($event.target.value)\\\" formControlName=\\\"question_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question_type.errors }\\\">\\r\\n                  <option value=\\\"text\\\">Text</option>\\r\\n                  <option value=\\\"image\\\">Image</option>\\r\\n                  <option value=\\\"text_and_image\\\">Text and Image</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.question_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.question_type.errors.required\\\">Question Type is required.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n     <!--  <div class=\\\" col-sm-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Quant/Verbal</label>\\r\\n            <input class=\\\"form-control\\\" placeholder=\\\"Quant/Verbal\\\" type=\\\"text\\\" formControlName=\\\"quant_verbal\\\" formControlName=\\\"quant_verbal\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quant_verbal.errors }\\\">\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.quant_verbal.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.quant_verbal.errors.required\\\">This field is required.</div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>  -->\\r\\n      <!--  <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n          <div class=\\\"group\\\">\\r\\n            <label>Group</label>\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"group\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.group.errors }\\\">\\r\\n                  <option value=\\\"\\\">Group</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_group\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n            <div *ngIf=\\\"submitted && f.group.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                  <div *ngIf=\\\"f.group.errors.required\\\">Group is required.</div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>  -->\\r\\n      \\r\\n   </div>\\r\\n   <div class=\\\"row\\\">\\r\\n    \\r\\n   </div>\\r\\n\\r\\n   <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-lg-8 \\\">\\r\\n      <div class=\\\"row \\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n        <label>Option A</label>\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='optiona_value' [config]=\\\"config\\\" (blur)=\\\"onChangeA($event)\\\" class=\\\"q_opton optiona\\\"></ckeditor>\\r\\n\\r\\n        <!-- <input class=\\\"form-control\\\" placeholder=\\\"Option A\\\" type=\\\"text\\\" formControlName=\\\"option1\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option1.errors }\\\"> -->\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n          <div *ngIf=\\\"submitted && f.option1.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option1.errors.required\\\">Option A is required.</div>\\r\\n           </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2  txt-left \\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"a\\\" formControlName=\\\"answer\\\" checked>\\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n           \\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row \\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n        <label>Option B</label>\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='optionb_value' [config]=\\\"config\\\" (blur)=\\\"onChangeB($event)\\\" class=\\\"q_opton optionb\\\"></ckeditor>\\r\\n        <!-- <input class=\\\"form-control\\\" placeholder=\\\"Option B\\\" type=\\\"text\\\" formControlName=\\\"option2\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option2.errors }\\\"> -->\\r\\n\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n         <div *ngIf=\\\"submitted && f.option2.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option2.errors.required\\\">Option B is required.</div>\\r\\n           </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2 txt-left\\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"b\\\" formControlName=\\\"answer\\\">\\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row \\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n\\r\\n      <!--   <input class=\\\"form-control\\\" placeholder=\\\"Option C\\\" type=\\\"text\\\" formControlName=\\\"option3\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option3.errors }\\\"> -->\\r\\n      <label>Option C</label>\\r\\n      <ckeditor [editor]=\\\"Editor\\\" [data]='optionc_value' [config]=\\\"config\\\" (blur)=\\\"onChangeC($event)\\\" class=\\\"q_opton optionc\\\"></ckeditor>\\r\\n\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n         <div *ngIf=\\\"submitted && f.option3.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option3.errors.required\\\">Option C is required.</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"c\\\" formControlName=\\\"answer\\\"> \\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row \\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n        <label>Option D</label>\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='optiond_value' [config]=\\\"config\\\" (blur)=\\\"onChangeD($event)\\\" class=\\\"q_opton optiond\\\"></ckeditor>\\r\\n       <!--  <input class=\\\"form-control\\\" placeholder=\\\"Option D\\\" type=\\\"text\\\" formControlName=\\\"option4\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option4.errors }\\\"> -->\\r\\n        <span class=\\\"md-line\\\"></span>\\r\\n         <div *ngIf=\\\"submitted && f.option4.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.option4.errors.required\\\">Option D is required.</div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n          <label class=\\\"radio-box\\\">\\r\\n            <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"d\\\" formControlName=\\\"answer\\\">\\r\\n            <span class=\\\"checkmark\\\"></span>\\r\\n          </label>\\r\\n         </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n           <div class=\\\"group\\\">\\r\\n            <label>Level</label>\\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"level\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.level.errors }\\\">\\r\\n                  <option value=\\\"\\\">Level</option>\\r\\n                  <option *ngFor=\\\"let option of masterArr.master_level\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.level.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.level.errors.required\\\">Level is required.</div>\\r\\n                <div *ngIf=\\\"f.level.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div> \\r\\n    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n\\r\\n</div> \\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n           <div class=\\\"group\\\">\\r\\n            <label>Duration(in seconds)</label>\\r\\n            \\r\\n            <select class=\\\"form-control\\\" formControlName=\\\"duration\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\">\\r\\n                  <option value=\\\"\\\">Duration(in seconds)</option>\\r\\n                  <option value=\\\"05\\\">05</option>\\r\\n                  <option value=\\\"15\\\">15</option>\\r\\n                  <option value=\\\"25\\\">25</option>\\r\\n                  <option value=\\\"30\\\">30</option>\\r\\n                  <option value=\\\"60\\\">60</option>\\r\\n                  <option value=\\\"120\\\">120</option>\\r\\n            </select>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n             <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.duration.errors.required\\\">Duration is required.</div>\\r\\n                <div *ngIf=\\\"f.duration.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div> \\r\\n      <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n\\r\\n    </div> \\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n<div class=\\\"group\\\">\\r\\n  <label>Note</label>\\r\\n  \\r\\n <input class=\\\"form-control\\\" placeholder=\\\"Note\\\" type=\\\"text\\\" formControlName=\\\"note\\\" maxlength=\\\"70\\\">\\r\\n <span class=\\\"md-line\\\"></span>\\r\\n</div>\\r\\n</div> \\r\\n<div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n\\r\\n</div> \\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n    <div class=\\\"m-t-15\\\">\\r\\n      <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 create_cancel\\\">\\r\\n        <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n         <span *ngIf=\\\"this.idEdit\\\">Update</span>\\r\\n         <span *ngIf=\\\"this.idEdit==false\\\">Save and insert</span>\\r\\n      </button>\\r\\n      </div>\\r\\n     </div>\\r\\n\\r\\n     <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n     \\r\\n</div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"col-lg-4\\\" *ngIf=\\\"question_type=='text'\\\">\\r\\n      <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n       <label>Question</label>\\r\\n        <ckeditor [editor]=\\\"Editor\\\" [data]='question_value' [config]=\\\"config\\\" (blur)=\\\"onChange($event)\\\" class=\\\"question\\\"></ckeditor>\\r\\n        <div class=\\\"question_note\\\">Note: your question should be in the limit of the text editor height and width. NO SCROLL BAR should be displayed as this will be out of the limit of the question maximum length.</div>\\r\\n      </div>\\r\\n    </div>\\r\\n     <div *ngIf=\\\"question_type=='image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n       <div class=\\\"form-group  files color m-t-15\\\">\\r\\n          <div class=\\\" m-t-15\\\">\\r\\n            <label>Upload Question </label>\\r\\n              <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"preview\\\" >\\r\\n            <img [src]=\\\"croppedImage\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"question_type=='text_and_image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n       <div class=\\\"form-group  files color m-t-15\\\">\\r\\n          <div class=\\\" m-t-15\\\">\\r\\n            <label>Upload Question </label>\\r\\n              <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"preview\\\" >\\r\\n            <img [src]=\\\"croppedImage\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n           <label>Question Text</label>\\r\\n            <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question_text\\\" maxlength=\\\"70\\\" > </textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n<!--\\r\\n   <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n      <div class=\\\"m-t-15\\\">\\r\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 create_cancel\\\">\\r\\n          <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n           Save and insert\\r\\n        </button>\\r\\n        </div>\\r\\n       </div>\\r\\n       \\r\\n</div>\\r\\n-->\\r\\n\\r\\n</form>   \\r\\n\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"gridview\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"download-icon\\\">\\r\\n        <button class=\\\"btn allam-btn btn-success\\\" (click)=\\\"downloadItem()\\\" title=\\\"Download\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-download\\\"></i></button>\\r\\n      </div>\\r\\n      <div class=\\\"publish-table-wrap  table-responsive\\\" id=\\\"tableDiv\\\"> \\r\\n        <table class=\\\"table table-striped table-bordered \\\" id=\\\"contentToConvert\\\" >\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Semester</th>\\r\\n            <th>Level</th>\\r\\n            <th>Answer</th>\\r\\n            <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n            <th>Question Type</th>\\r\\n            <th>Question </th>\\r\\n            <th>Duration </th>\\r\\n            <th>Edit</th>\\r\\n            <th>Delete</th>\\r\\n            <th>\\r\\n              <button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deletItem()\\\" title=\\\"Delete\\\" type=\\\"button\\\">\\r\\n              <i class=\\\"icofont icofont-ui-delete\\\"></i></button> \\r\\n            </th>\\r\\n          <!--   <th>Group </th>  -->           \\r\\n          </tr>\\r\\n         </thead>\\r\\n          <tbody>\\r\\n            <tr class=\\\"even ng-star-inserted\\\" *ngFor=\\\"let question of questionArr\\\">\\r\\n                \\r\\n                <td>\\r\\n                  <p *ngIf=\\\"question.semester==3 else semElse\\\">\\r\\n                    Both(1 & 2)\\r\\n                  </p>\\r\\n                  <ng-template #semElse>\\r\\n                      {{ question.semester }}\\r\\n                    </ng-template>\\r\\n                </td>\\r\\n                \\r\\n                <td class=\\\"\\\">{{ question.level }}</td>\\r\\n                <td class=\\\"\\\">{{ question.answer }}</td>\\r\\n                <td [innerHTML]=\\\"question.option4 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option3 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option2 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option1 | safeHtml\\\"></td>\\r\\n                <td class=\\\"\\\">{{ question.qui_type }}</td>\\r\\n                <td class=\\\"\\\">\\r\\n                  <div *ngIf=\\\"question.qui_type=='text'\\\" [innerHTML]=\\\"question.question | safeHtml\\\"></div>\\r\\n                   <div *ngIf=\\\"question.qui_type=='image'\\\">\\r\\n                    <img style=\\\"width: 400px;\\\" src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                   </div>\\r\\n                   <div *ngIf=\\\"question.qui_type=='text_and_image'\\\">\\r\\n                    <img style=\\\"width: 400px;\\\"  src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                    <br>{{question.question}}\\r\\n                   </div>\\r\\n                   \\r\\n                </td>\\r\\n                <td class=\\\"\\\">{{ question.duration }}</td>\\r\\n                <td class=\\\"\\\">\\r\\n                  <button class=\\\"btn allam-btn allam-btn-green text-white \\\" (click)=\\\"editItem(question)\\\" title=\\\"Edit\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-edit\\\"></i></button>\\r\\n                </td>\\r\\n                <td class=\\\"\\\">\\r\\n                  <button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"deleteOneItem(question.id)\\\" title=\\\"delete\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-ui-delete\\\"></i></button>\\r\\n                </td>\\r\\n                <td class=\\\"categories\\\">\\r\\n                   <input type=\\\"checkbox\\\"  name=\\\"del_row\\\" [value]=\\\"question.id\\\" (change)=\\\"onCheckboxChange($event,question.id)\\\" >  \\r\\n                </td>\\r\\n\\r\\n               <!--  <td class=\\\"\\\">{{ question.groups }}</td> -->\\r\\n                \\r\\n            </tr>\\r\\n          </tbody>\\r\\n\\r\\n          </table>\\r\\n\\r\\n\\r\\n      </div>\\r\\n   </div>\\r\\n  </div>\\r\\n  \\r\\n   <div class=\\\"row\\\" *ngIf=\\\"gridview\\\">\\r\\n    <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n      <div class=\\\"m-t-15\\\">\\r\\n         <button [disabled]=\\\"loading2\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 \\\"  (click)=\\\"publish()\\\">\\r\\n          <span *ngIf=\\\"loading2\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n           Publish\\r\\n        </button>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"modal crop-image-wrap\\\" id=\\\"myModal\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Crop Image</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close alert-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">&times;</button>\\r\\n      </div>\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body slot-details-wrap\\\">\\r\\n          <image-cropper \\r\\n          [imageChangedEvent]=\\\"imageChangedEvent\\\" \\r\\n          [maintainAspectRatio]=\\\"true\\\" \\r\\n          [aspectRatio]=\\\"3 / 2\\\"\\r\\n          [resizeToWidth]=\\\"600\\\" \\r\\n          format=\\\"png\\\" \\r\\n          (imageCropped)=\\\"imageCropped($event)\\\" \\r\\n          (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n          (cropperReady)=\\\"cropperReady()\\\" \\r\\n          (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal footer -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid dashboard\\\">\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12 Competitive-exam-wrap\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 col-xl-3\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-block-small\\\">\\r\\n        <a [routerLink]=\\\"['/study-exam/create']\\\">\\r\\n          <!--<i class=\\\"ti-files bg-c-blue card1-icon\\\"></i>-->\\r\\n          <span class=\\\"text-c-blue f-w-600\\\">+</span>\\r\\n          <h4>Create New <br>Study Exam </h4>\\r\\n      </a>\\r\\n       \\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-6 col-xl-3\\\" *ngFor=\\\"let item of quizData\\\">\\r\\n    <div class=\\\"card widget-card-1 mt-0\\\">\\r\\n      <div class=\\\"card-block-small p-0\\\">\\r\\n        <i class=\\\"ti-book bg-c-pink card1-icon\\\"></i>\\r\\n        <h5 class=\\\"mt-5\\\">{{ item.quiz_title }}</h5>\\r\\n        <span class=\\\"text-c-pink\\\">Create on {{ item.created_at | date: 'dd/MM/yyyy' }} </span>\\r\\n        <p class=\\\"published\\\">(Published)</p>\\r\\n       <!--  <div>\\r\\n          Total Quiz: 12\\r\\n        </div>\\r\\n        <div>Total Participant: 120</div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n    <div class=\\\"col-md-6 col-xl-3\\\" *ngFor=\\\"let item of quizDraftData\\\">\\r\\n    <div class=\\\"card widget-card-1 mt-0\\\">\\r\\n      <!-- <a target=\\\"_blank\\\" *ngIf=\\\"item.save_type =='single' \\\" [routerLink]=\\\"['/study-exam/competitive-single/'+baseEncode(item.id)]\\\">\\r\\n        <div class=\\\"card-block-small p-0\\\">\\r\\n          <i class=\\\"ti-book bg-c-pink card1-icon\\\"></i>\\r\\n          <h4 class=\\\"mt-5\\\">{{ item.quiz_title }}</h4>\\r\\n          <span class=\\\"text-c-pink\\\">Create on {{ item.created_at | date: 'dd/MM/yyyy' }} </span>\\r\\n          <p class=\\\"draft\\\">(Draft)</p>\\r\\n\\r\\n        </div>\\r\\n      </a> *ngIf=\\\"item.save_type =='bulk' \\\" -->\\r\\n      <a target=\\\"_blank\\\" [routerLink]=\\\"['/study-exam/create/'+baseEncode(item.id)]\\\">\\r\\n        <div class=\\\"card-block-small p-0\\\">\\r\\n          <i class=\\\"ti-book bg-c-pink card1-icon\\\"></i>\\r\\n          <h4 class=\\\"mt-5\\\">{{ item.quiz_title }}</h4>\\r\\n          <span class=\\\"text-c-pink\\\">Create on {{ item.created_at | date: 'dd/MM/yyyy' }} </span>\\r\\n          <p class=\\\"draft\\\">(Draft)</p>\\r\\n        </div>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n   </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","export default \"<div class=\\\"container-fluid dashboard\\\">\\r\\n  \\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 Competitive-curriculum-exam-wrap\\\">\\r\\n      <div class=\\\"row justify-content-md-center\\\">\\r\\n\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n        <h4 *ngIf=\\\"!isEdit\\\">Create New Study Exam  </h4>\\r\\n        <h4 *ngIf=\\\"isEdit\\\">Edit Study Exam  </h4>\\r\\n        <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\" col-sm-12 col-xs-12 col-md-12 \\\">\\r\\n                       \\r\\n               <div class=\\\"group\\\">\\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"quiz_type\\\" (change)=\\\"examType($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_type.errors }\\\">\\r\\n                    <option value=\\\"\\\">Quiz Type</option>\\r\\n                    <option *ngFor=\\\"let option of masterArr.master_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"group competitive-exam-drpdown\\\" *ngIf=\\\"isCompt\\\">\\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"quiz_sub_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_sub_type.errors }\\\">\\r\\n                    <option value=\\\"\\\">Quiz Sub Type</option>\\r\\n                    <option *ngFor=\\\"let option of masterArr.master_sub_quiz\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"submitted && f.quiz_sub_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.quiz_sub_type.errors.required\\\">This field is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"col-sm-12 col-xs-12 col-md-12 scientific-achievement\\\">\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"isCompt\\\">\\r\\n                  <div class=\\\"col-sm-12 col-xs-12 col-md-12 \\\"> \\r\\n                    <div class=\\\"group\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control \\\" placeholder=\\\"Quiz title\\\" formControlName=\\\"quiz_title\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_title.errors }\\\">\\r\\n                      <div *ngIf=\\\"submitted && f.quiz_title.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.quiz_title.errors.required\\\">This field is required.</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"group \\\">\\r\\n                      <textarea class=\\\"form-control \\\" cols=\\\"5\\\" name=\\\"description\\\" placeholder=\\\"Description\\r\\n                      \\\" rows=\\\"3\\\" formControlName=\\\"quiz_description\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quiz_description.errors }\\\"></textarea>\\r\\n                      <div *ngIf=\\\"submitted && f.quiz_description.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.quiz_description.errors.required\\\">This field is required.</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                     <!-- <div class=\\\"group\\\">\\r\\n                        <image-cropper \\r\\n                        [imageChangedEvent]=\\\"imageChangedEvent\\\" \\r\\n                        [maintainAspectRatio]=\\\"true\\\" \\r\\n                        [aspectRatio]=\\\"1 / 1\\\"\\r\\n                        [resizeToWidth]=\\\"200\\\" \\r\\n                        format=\\\"png\\\" \\r\\n                        (imageCropped)=\\\"imageCropped($event)\\\" \\r\\n                        (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n                        (cropperReady)=\\\"cropperReady()\\\" \\r\\n                        (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\r\\n                      </div> -->\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-md-12 \\\">\\r\\n                    <!-- <div class=\\\"iconupload\\\">\\r\\n\\r\\n                     <input #variable type=\\\"file\\\" class=\\\"form-control customupload\\\" title=\\\"Icon Upload\\\" (change)=\\\"uploadFile($event, variable)\\\" accept=\\\"image/x-png,image/jpeg\\\">  \\r\\n                    </div>\\r\\n                     <div class=\\\"upload-jpgpng\\\">Please upload png, jpg or JPEG files, Image should be 200 x 200 size</div>\\r\\n                   \\r\\n                    <div class=\\\"form-group preview-wrap\\\">\\r\\n                        <div class=\\\"preview\\\" *ngIf=\\\"preview && preview !== null\\\">\\r\\n                          <img [src]=\\\"preview\\\" [alt]=\\\"\\\" height=\\\"200\\\" >\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n\\r\\n                    <div class=\\\"form-group sexam files color m-t-15\\\">\\r\\n                      <div class=\\\"m-t-15\\\">\\r\\n                       <input #variable type=\\\"file\\\" class=\\\"form-control customupload\\\" title=\\\"Icon Upload\\\"  (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\">  \\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <div class=\\\"preview\\\" >\\r\\n                        <img [src]=\\\"croppedImage\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </div>\\r\\n                 \\r\\n                 </div>\\r\\n               \\r\\n                 <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-xs-12 col-md-8\\\"> \\r\\n                    <div class=\\\"group radio-wrap\\\"> \\r\\n                      <label class=\\\"\\\">\\r\\n                        SINGLE UPLOAD\\r\\n                        <input type=\\\"radio\\\" checked name=\\\"upload_type\\\" value=\\\"single\\\" formControlName=\\\"upload_type\\\" [checked]=\\\"form.get('upload_type').value == 'single'\\\">\\r\\n                      </label>\\r\\n                      <label class=\\\"\\\">\\r\\n                        BULK UPLOAD\\r\\n                        <input type=\\\"radio\\\" name=\\\"upload_type\\\" value=\\\"bulk\\\" formControlName=\\\"upload_type\\\" [checked]=\\\"form.get('upload_type').value == 'bulk'\\\">\\r\\n                      </label>\\r\\n                     </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"col-sm-12 col-xs-12 col-md-12 scientific-achievement\\\">\\r\\n                    \\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-xs-12 col-md-8 pl-0\\\"> \\r\\n                        \\r\\n                        <div class=\\\"group\\\" *ngIf=\\\"!isEdit || !isCompt\\\">\\r\\n                          <button  class=\\\"btn btn-block allam-btn-green text-white \\\">\\r\\n                            Next\\r\\n                          </button>\\r\\n                        </div>\\r\\n\\r\\n                         <div class=\\\"group\\\" *ngIf=\\\"isEdit && isCompt\\\">\\r\\n                          <button class=\\\"btn btn-block btn-warning text-white study-skip\\\">\\r\\n                            Skip\\r\\n                          </button>\\r\\n                          <button class=\\\"btn btn-block allam-btn-green text-white study-edit\\\">\\r\\n                            Edit & Next\\r\\n                          </button>\\r\\n                        </div>\\r\\n\\r\\n                      </div>\\r\\n                      <div class=\\\"col-xs-12 col-md-4\\\"> </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          </div>\\r\\n        </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal crop-image-wrap\\\" id=\\\"myModal\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Crop Image</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close alert-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">&times;</button>\\r\\n      </div>\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body slot-details-wrap\\\">\\r\\n          <image-cropper \\r\\n          [imageChangedEvent]=\\\"imageChangedEvent\\\" \\r\\n          [maintainAspectRatio]=\\\"true\\\" \\r\\n          [aspectRatio]=\\\"1 / 1\\\"\\r\\n          [resizeToWidth]=\\\"200\\\" \\r\\n          format=\\\"png\\\" \\r\\n          (imageCropped)=\\\"imageCropped($event)\\\" \\r\\n          (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n          (cropperReady)=\\\"cropperReady()\\\" \\r\\n          (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal footer -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \".table-responsive {\\n  display: block;\\n  overflow-x: auto;\\n}\\n\\n.single-curriculum-wrap .group label {\\n  display: block;\\n}\\n\\n.card-block {\\n  padding: 0 12px 5px;\\n}\\n\\n.single-curriculum-wrap h4 {\\n  margin-bottom: 10px;\\n}\\n\\n.single-curriculum-wrap h5 {\\n  margin-bottom: 15px;\\n  font-size: 16px !important;\\n  color: #FFB64D;\\n}\\n\\n.single-curriculum-wrap .publish-table-wrap {\\n  max-height: 400px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc3R1ZHktZXhhbS9jb21wZXRpdGl2ZS9EOlxcbWVhblxcYWxsYW0tY21zL3NyY1xcYXBwXFxwYWdlc1xcc3R1ZHktZXhhbVxcY29tcGV0aXRpdmVcXGJ1bGstY29tcGV0aXRpdmUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3N0dWR5LWV4YW0vY29tcGV0aXRpdmUvYnVsay1jb21wZXRpdGl2ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7RUFDQSxnQkFBQTtBQ0NKOztBREdBO0VBQ0ksY0FBQTtBQ0FKOztBREdBO0VBQ0ksbUJBQUE7QUNBSjs7QURHQTtFQUE2QixtQkFBQTtBQ0M3Qjs7QURBQTtFQUE2QixtQkFBQTtFQUFxQiwwQkFBQTtFQUEwQixjQUFBO0FDTTVFOztBRExBO0VBQTZDLGlCQUFBO0FDUzdDIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvc3R1ZHktZXhhbS9jb21wZXRpdGl2ZS9idWxrLWNvbXBldGl0aXZlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxlLXJlc3BvbnNpdmUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG59XHJcblxyXG5cclxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLmdyb3VwIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uY2FyZC1ibG9jayB7XHJcbiAgICBwYWRkaW5nOiAwIDEycHggNXB4O1xyXG59XHJcblxyXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCBoNCB7IG1hcmdpbi1ib3R0b206IDEwcHg7fVxyXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCBoNSB7IG1hcmdpbi1ib3R0b206IDE1cHg7IGZvbnQtc2l6ZToxNnB4IWltcG9ydGFudDsgY29sb3I6I0ZGQjY0RDt9XHJcbi5zaW5nbGUtY3VycmljdWx1bS13cmFwIC5wdWJsaXNoLXRhYmxlLXdyYXAge21heC1oZWlnaHQ6IDQwMHB4O31cclxuXHJcblxyXG4iLCIudGFibGUtcmVzcG9uc2l2ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdy14OiBhdXRvO1xufVxuXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAuZ3JvdXAgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNhcmQtYmxvY2sge1xuICBwYWRkaW5nOiAwIDEycHggNXB4O1xufVxuXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCBoNCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5zaW5nbGUtY3VycmljdWx1bS13cmFwIGg1IHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgZm9udC1zaXplOiAxNnB4ICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjRkZCNjREO1xufVxuXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAucHVibGlzaC10YWJsZS13cmFwIHtcbiAgbWF4LWhlaWdodDogNDAwcHg7XG59Il19 */\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\r\nimport { QuestionService } from '../../../services/studyexam/question.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { PocquestionService } from '../../../services/studyexam/pocquestion.service';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { HttpClient, HttpParams, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { AuthenticationService } from '../../../services';\r\nimport { CurriculumSingleService } from '../../../services/studyexam/curriculum-single.service';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\r\n\r\nimport domtoimage from 'dom-to-image-more';\r\ndeclare var $: any;\r\ndeclare var download: any;\r\n\r\nconst apiUrl =environment.apiUrl;\r\n\r\n@Component({\r\n  selector: 'app-bulk-competitive',\r\n  templateUrl: './bulk-competitive.component.html',\r\n  styleUrls: ['./bulk-competitive.component.scss']\r\n})\r\nexport class BulkCompetitiveComponent implements OnInit {\r\n    public resultGridList : Array <any>;\r\n    title = 'angular Curriculum Bulk';\r\n    s3_url =environment.s3_url;\r\n    local_api_url=environment.apiUrl;\r\n    form: FormGroup;\r\n    formVar: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    error = '';\r\n    private questionArr:any=[];\r\n\r\n    uploadedFiles: Array<File>;\r\n    isProcessed: boolean = false;\r\n    isError: boolean;\r\n    errorData: [];\r\n    fileData: any[];\r\n    errorCode : number;\r\n    errorDesc : string;\r\n    percentDone: any = 0;\r\n\r\n    logUser:any;\r\n    created_by:number;\r\n    isEdit=false;\r\n    idEdit=false;\r\n    editData:any=[];\r\n    isSave = true;\r\n    preview: string;\r\n    loading2 = false;\r\n    submitted2 = false;\r\n    quiz_temp_id:number;\r\n    checkBox : string = 'false';\r\n    private quizArr:any=[];\r\n    pre_quiz_title:string;\r\n\r\n    public selectedItems = [];\r\n    masterArr:any=[];\r\n    selectedAll: boolean = false;\r\n    selectedNames: any;\r\n    private toasterService: ToasterService;\r\n\r\n    public question_value: string = ``;\r\n\r\n  private classOptions: string[] = [\"1\", \"2\", \"3\", \"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"];\r\n  private semesterOptions: string[] = [\"1\", \"2\"];\r\n  private groupOptions: string[] = [\"1\", \"2\", \"3\"];\r\n  private levelOptions: string[] = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n  private lessonOptions: string[] = [\"1\", \"2\", \"3\", \"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"];\r\n  private chapterOptions: string[] = [\"1\", \"2\", \"3\", \"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"];\r\n  private durationOptions: string[] = [\"05\",\"15\", \"25\", \"30\",\"60\",\"120\"];\r\n  \r\n  question_type:any='text';\r\n  showModal:boolean=false;\r\n  isFile:boolean=false;\r\n\r\n  constructor(private fb: FormBuilder,private route: ActivatedRoute,private router: Router, private http: HttpClient, private questionService: QuestionService, private pocquestionService: PocquestionService,private alertService: ToasterService,private authenticationService: AuthenticationService, private curriculumSingleService:CurriculumSingleService) \r\n  {\r\n        this.formVar = this.fb.group({\r\n          excelFile: [null, Validators.required],\r\n          zipFile : [null, Validators.required],\r\n          existImage : ['']\r\n      })\r\n  }\r\n\r\n  // ViewChild is used to access the input element. \r\n  \r\n  @ViewChild('variable', {static: false}) \r\n  // this InputVar is a reference to our input. \r\n  InputVar: ElementRef; \r\n  reset()  \r\n  { \r\n    // We will clear the value of the input  \r\n    // field using the reference variable. \r\n    this.InputVar.nativeElement.value = \"\"; \r\n  } \r\n\r\n\t  ngOnInit() {\r\n      this.quiz_temp_id = (this.route.snapshot.params['quiz_temp_id']); //atob\r\n        //console.log(this.quiz_temp_id);\r\n      this.form = this.fb.group({\r\n          question: [''],\r\n          question_text: [''],\r\n          question_image_url:[''],\r\n          question_image:[''],\r\n          edit_question_image:[''],\r\n          question_type:[''],\r\n          option1: ['',Validators.required],\r\n          option2: ['',Validators.required],\r\n          option3: ['',Validators.required],\r\n          option4: ['',Validators.required],\r\n          answer: [''],\r\n          class: [''], //[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          quiz_sub_type: ['',Validators.required],\r\n          quiz_type: ['',Validators.required],\r\n          chapter: [''],//[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          subject: [''],//Validators.required],\r\n          semester: [''],//[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          quant_verbal: ['',Validators.required],\r\n          group: [''],//Validators.required],\r\n          lesson: [''],//[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          note: [''],\r\n          level: [''],\r\n          duration: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          delArray: this.fb.array([])\r\n        });\r\n\r\n        this.logUser    = this.authenticationService.currentUserValue;\r\n        this.logUser    = JSON.parse(this.logUser);\r\n        this.created_by = this.logUser['user'][0]['id'];  \r\n        this.getDraftQuestion();\r\n        //check draft quiz\r\n        this.getDraftQuiz();\r\n        // Get all master data\r\n        this.getMasterData();\r\n\r\n        this.resultGridList = this.questionService.dataArray;\r\n        //console.log('resultGridList ' +JSON.stringify(this.resultGridList));\r\n\t  }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  public getMasterData() {\r\n        this.curriculumSingleService.getMasterData().subscribe(response => { \r\n        this.masterArr = response['data']; \r\n        });\r\n        //console.log(this.masterArr);\r\n    }\r\n\r\n  public getDraftQuiz() {\r\n      this.pocquestionService.getDraftQuizByUser(this.created_by,this.quiz_temp_id).subscribe(response => {  \r\n        this.quizArr=response;\r\n       \r\n        if(this.quizArr.length==0){\r\n          this.router.navigate(['/study-exam/create'])\r\n        }\r\n        this.pre_quiz_title = this.quizArr[0].quiz_title;\r\n      });\r\n  }\r\n\r\n  public getDraftQuestion(user_id=0) {\r\n    this.pocquestionService.getDraftQuestionCompetitiveByUser(this.created_by, this.quiz_temp_id)\r\n    .subscribe(\r\n    response => { //console.log('response -- '+JSON.stringify(response));\r\n      this.questionArr = response;\r\n      //this.isProcessed = true;\r\n      //console.log(Object.keys(this.questionArr).length);\r\n      if (Object.keys(this.questionArr).length != 0) {\r\n        this.isProcessed = true;\r\n      }\r\n    },\r\n    error => {\r\n        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n        this.loading = false;\r\n        //this.router.navigate(['/study-exam']);\r\n    });\r\n  }\r\n\r\n  /*editItem(event)\r\n  {\r\n    this.editData = event;\r\n    this.isEdit   = true;\r\n    this.isSave   = false;\r\n    this.idEdit   = this.editData.id;\r\n    this.router.navigate(['/study-exam/create/'+btoa(this.idEdit)]);\r\n  }*/\r\n\r\n  downloadItem(){\r\n      this.router.navigate([]).then(result => {  window.open('/authentication/studyexam-downlad/teacher/4/'+this.quiz_temp_id, '_blank'); });;\r\n      //this.generatePDF();\r\n  }\r\n\r\n  editItem(event)\r\n  {\r\n    this.editData = event;\r\n    this.isEdit   = true;\r\n    this.isSave   = false;\r\n    this.idEdit   = this.editData.id;\r\n    this.question_value=this.editData.question;\r\n    \r\n    //console.log('---------------->>');\r\n    //console.log(this.question_value);\r\n    \r\n    //const domEditableElement = document.querySelector('.ck-editor__editable');\r\n    //const editorInstance = domEditableElement.ckeditorInstance;\r\n    //editorInstance.setData(this.editData.question );\r\n\r\n    //console.log('<<----------------');\r\n\r\n    this.form.patchValue({\r\n        question: this.editData.question,\r\n        option1: this.editData.option1,\r\n        option2: this.editData.option2,\r\n        option3: this.editData.option3,\r\n        option4: this.editData.option4,\r\n        answer: this.editData.answer,\r\n        class: this.editData.class,\r\n        quiz_sub_type: this.editData.quiz_sub_type,\r\n        quiz_type: this.editData.quiz_type,\r\n        chapter: this.editData.chapter,\r\n        subject: this.editData.subject,\r\n        semester: this.editData.semester,\r\n        quant_verbal: this.editData.quant_verbal,\r\n        group: this.editData.groups,\r\n        lesson: this.editData.lesson,\r\n        note: this.editData.note,\r\n        level:this.editData.level,\r\n        duration:this.convertTwoDigit(this.editData.duration),\r\n        question_type:this.editData.qui_type,\r\n        question_text:this.editData.question,\r\n        qui_type:this.editData.qui_type,\r\n        question_image_url:this.editData.question_image_url,\r\n        question_image:this.editData.question_image,\r\n        });\r\n\r\n        this.croppedImage  = this.local_api_url+this.editData.question_image;\r\n        this.question_type = this.editData.qui_type;\r\n        this.preview = apiUrl+this.editData.question_image_url;\r\n  }\r\n  goBack(){\r\n    this.isEdit   = false;\r\n    this.isSave   = true;\r\n  }\r\n\r\n    fileChangeXlsx(element, variable) {\r\n      //var pattern=\"^.+\\.(xlsx|xls|csv)$\";\r\n      //var pattern=\"^.+\\.(xlsx)$\";\r\n      \r\n      const file = (element.target as HTMLInputElement).files[0];\r\n      //console.log('type', file.type);\r\n      //console.log('accept', element.target.accept);\r\n      //console.log(element.target.files[0].name);\r\n      \r\n      var name = element.target.files[0].name;\r\n      var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n      if (ext.toLowerCase() == 'xlsx') {\r\n          if (typeof (this.uploadedFiles) == \"undefined\") {\r\n            this.uploadedFiles = new Array<File>();\r\n            this.uploadedFiles.push(element.target.files[0]);\r\n          }\r\n          else {\r\n            this.uploadedFiles.push(element.target.files[0]);\r\n          }\r\n      }else{\r\n        variable.value = null;\r\n        Swal.fire('','File type should be xlsx','error');\r\n        return;\r\n      }\r\n\r\n      /*if (file.type !== 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n        //this.form.reset();\r\n        element.value = \"\";\r\n        variable.value = null;\r\n        Swal.fire('','File type should be xlsx','error');\r\n        return;\r\n      }else{\r\n      \r\n        if (typeof (this.uploadedFiles) == \"undefined\") {\r\n          this.uploadedFiles = new Array<File>();\r\n          this.uploadedFiles.push(element.target.files[0]);\r\n        }\r\n        else {\r\n          this.uploadedFiles.push(element.target.files[0]);\r\n        }\r\n        //console.log(this.uploadedFiles);\r\n      }*/\r\n    }\r\n    fileChangeZip(element, variable1) {\r\n      const file = (element.target as HTMLInputElement).files[0];\r\n      console.log('type', file.type);\r\n\r\n      var name = element.target.files[0].name;\r\n      var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n      if (ext.toLowerCase() == 'zip') {\r\n          if (typeof (this.uploadedFiles) == \"undefined\") {\r\n            this.uploadedFiles = new Array<File>();\r\n            this.uploadedFiles.push(element.target.files[0]);\r\n          }\r\n          else {\r\n            this.uploadedFiles.push(element.target.files[0]);\r\n          }\r\n      }else{\r\n        variable1.value = null;\r\n        Swal.fire('','File type should be zip','error');\r\n        return;\r\n      }\r\n    }\r\n\r\n  eventCheck(event){\r\n    this.checkBox = event.target.checked;\r\n      console.log(event.target.checked)  //<--- Check with this\r\n  }\r\n    upload() {\r\n        this.showLoader(); \r\n        //debugger;\r\n        this.loading2   = true; \r\n        if (typeof (this.uploadedFiles) == \"undefined\" || this.uploadedFiles.length==0) {\r\n          this.isError = false;\r\n          this.isProcessed=false;\r\n          this.errorData = null;\r\n\r\n          //this.alertService.pop('error', \"Excel file or zip file not selected.\");\r\n          Swal.fire('','Excel file or zip file not selected.','error');\r\n          this.hideLoader(); \r\n           this.loading2   = false; \r\n          return;\r\n        }\r\n\r\n        //console.log('fileChange');\r\n        //console.log(this.uploadedFiles);\r\n        //console.log('End fileChange');\r\n        let formData = new FormData();\r\n        formData.append(\"existImage\", this.checkBox);\r\n        for (var i = 0; i < this.uploadedFiles.length; i++) {\r\n          formData.append(\"uploads[]\", this.uploadedFiles[i], this.uploadedFiles[i].name);\r\n        }\r\n        //const url = 'http://localhost:3000/api/upload';\r\n        this.http.post(apiUrl+'cms-study-exam/api/curr_upload/2', formData, { reportProgress: true, observe: \"events\"})\r\n          .subscribe((response: HttpEvent<any>) => {\r\n              \r\n              switch (response.type) {\r\n                    case HttpEventType.Sent:\r\n                        console.log('Request has been made!');\r\n                        break;\r\n                    case HttpEventType.ResponseHeader:\r\n                        console.log('Response header has been received!');\r\n                        break;\r\n                    case HttpEventType.UploadProgress:\r\n                        this.percentDone = Math.round(response.loaded / response.total * 100);\r\n                        console.log(`Uploaded! ${this.percentDone}%`);\r\n                        break;\r\n                    case HttpEventType.Response:\r\n                         //console.log('response.body.message '+ response.body.message);\r\n                            console.log('Upload successfully ', response.body);\r\n                        if (response.body.error_code == 0) {\r\n                             //this.errorData = response[\"data\"];\r\n                              this.fileData = response.body[\"data\"];\r\n                              //console.log(this.fileData);\r\n                              this.saveTemp(); // Here call function for save data in temp table\r\n                              this.reset(); // Reset selected file with input tag file type\r\n                              this.isError=false;\r\n                              this.isProcessed=true;\r\n                              this.loading2 = false;\r\n                              this.alertService.pop('success', 'Study data upload successfully!');\r\n                              this.hideLoader(); \r\n                              this.uploadedFiles = new Array<File>();\r\n                        }\r\n                        else if (response.body.error_code == 1) {\r\n                              this.isError = false;\r\n                              this.isProcessed=false;\r\n                              this.loading2 = false;\r\n                              this.errorData = response.body[\"data\"];\r\n                              this.errorCode = response.body[\"error_code\"];\r\n                              this.errorDesc = response.body[\"err_desc\"];\r\n                              Swal.fire('',response.body.err_desc,'error');\r\n                              //this.alertService.pop('error', response.body.err_desc);\r\n                              this.reset(); // Reset selected file with input tag file type\r\n                              this.uploadedFiles = new Array<File>();\r\n                              this.formVar.reset();\r\n\r\n                        }else if (response.body.error_code == 2) {\r\n                              this.isError = true;\r\n                              this.isProcessed=false;\r\n                              this.loading2 = false;\r\n                              this.errorData = response.body[\"data\"];\r\n                              Swal.fire('',response.body.err_desc,'error');\r\n                              //this.alertService.pop('error', response.body.err_desc);\r\n                              this.uploadedFiles = new Array<File>();\r\n                              this.formVar.reset();\r\n                        }   \r\n                \r\n                this.percentDone = false;\r\n                       \r\n                }\r\n\r\n            \r\n            this.hideLoader(); \r\n            //console.log('response receved is ', response);\r\n            //console.log('HttpEventType -- '+JSON.stringify(HttpEventType));\r\n        },\r\n        error => {\r\n          //this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n          this.loading = false;\r\n          this.reset(); // Reset selected file with input tag file type\r\n          Swal.fire('Oh','Something went wrong. Try again later. :)','error');\r\n          \r\n          //this.router.navigate(['/study-exam']);\r\n        });\r\n    }\r\n\r\n  saveTemp(){\r\n    this.pocquestionService.addBulkQuestionCompetitiveTemp(this.fileData, this.created_by, this.quiz_temp_id )\r\n          .subscribe(\r\n              data => { //console.log('data -- '+JSON.stringify(data));\r\n                if(data['status']==200){\r\n                    this.getDraftQuestion(); //Show all temp data \r\n                    this.alertService.pop('success', 'Question added successfully in temp');\r\n                    //setTimeout(()=>this.router.navigate(['/study-exam']), 1500);\r\n                  }\r\n                  else\r\n                  {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                  }\r\n\r\n                  this.loading = false;\r\n                  //this.router.navigate(['/study-exam']);\r\n                  \r\n              },\r\n              error => {\r\n                  this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                  this.loading = false;\r\n                  //this.router.navigate(['/study-exam']);\r\n              });\r\n  }\r\n  // Function is defined \r\n      hideLoader() { \r\n\r\n        // Setting display of spinner \r\n        // element to none \r\n        document.getElementById('loading-s') \r\n            .style.display = 'none'; \r\n    }\r\n    showLoader() { \r\n\r\n        // Setting display of spinner \r\n        // element to none \r\n        document.getElementById('loading-s') \r\n            .style.display = 'block'; \r\n    }\r\n\r\n   /*  onCheckboxChange(event,val) {\r\n        if(event.target.checked ) {\r\n            this.selectedItems.push(val);\r\n        }\r\n         else {\r\n          this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n        }\r\n\r\n    } */\r\n    selectAll() {\r\n      this.selectedAll = !this.selectedAll;\r\n      this.selectedItems = [];\r\n      for (var i = 0; i < this.questionArr.length; i++) {\r\n          this.questionArr[i].selected = this.selectedAll;\r\n          //console.log(this.selectedAll)\r\n          if(this.selectedAll == true){\r\n            this.selectedItems.push(this.questionArr[i].id);\r\n          }else{\r\n            this.selectedItems.splice(this.selectedItems.indexOf(this.questionArr[i].id),1);\r\n          }\r\n          \r\n      } \r\n      //console.log(this.selectedItems)\r\n    }\r\n    checkIfAllSelected(event,val) {\r\n      if(event.target.checked ) {\r\n          this.selectedItems.push(val);\r\n      }\r\n      else {\r\n        this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n      }\r\n      //console.log(this.selectedItems)\r\n    }\r\n\r\n  deleteOneItem(item_id){\r\n        var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to delete?',\r\n            text: 'You will not be able to recover this item!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n\r\n              self.pocquestionService.deleteDraftQuestion(item_id).subscribe(() => {  \r\n                console.log('deleted draft row'); \r\n                self.getDraftQuestion();\r\n                //self.questionArr.splice(self.questionArr.indexOf(item_id),1);\r\n              });\r\n\r\n              if(self.questionArr.length==0){\r\n                this.isProcessed=false;\r\n              }\r\n\r\n               Swal.fire(\r\n                'Deleted!',\r\n                'Your data has been deleted.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n    }\r\n  deletItem(){ //console.log('this.selectedItems '+this.selectedItems)\r\n    if(this.selectedItems.length==0){\r\n     Swal.fire('Oh','No item selected to delete :)','error');\r\n     return false;\r\n     }\r\n      var self = this;\r\n      Swal.fire({\r\n          title: 'Are you sure want to delete?',\r\n          text: 'You will not be able to recover this item!',\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Yes, delete it!',\r\n          cancelButtonText: 'No, keep it'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n\r\n              /*this.selectedItems.forEach(function (value) {\r\n                   self.fileData.forEach(function(arrItem){\r\n                      if (value == arrItem.question) {\r\n                          self.fileData.splice(self.fileData.indexOf(arrItem),1);\r\n                      } \r\n                   });\r\n              });*/\r\n              this.selectedItems.forEach(function (value) { \r\n                   self.questionArr.forEach(function(arrItem){  \r\n                      if (value == arrItem.id) { \r\n                          self.questionArr.splice(self.questionArr.indexOf(arrItem),1);\r\n                          self.pocquestionService.deleteDraftQuestion(value).subscribe(() => {  \r\n                            console.log('deleted draft row'); \r\n                          });\r\n                      } \r\n                   });\r\n              });\r\n\r\n            if(self.questionArr.length==0){\r\n              this.isProcessed=false;\r\n            }\r\n            Swal.fire(\r\n              'Deleted!',\r\n              'Your data has been deleted.',\r\n              'success'\r\n            )\r\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n            Swal.fire(\r\n              'Cancelled',\r\n              'Your data is safe :)',\r\n              'error'\r\n            )\r\n          }\r\n        })\r\n  }\r\n\r\n  onUpdateTemp() {\r\n       \r\n        this.submitted = true;\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        if(!this.form.value.answer){\r\n          Swal.fire('','Please select correct answer.','error');\r\n          return;\r\n        }\r\n\r\n        if(this.question_value=='' && this.form.value.question_type!='text'){\r\n          Swal.fire('','Please upload question.','error');\r\n          return;\r\n        }\r\n        if(this.form.value.question=='' && this.form.value.question_type=='text'){\r\n          Swal.fire('','Please write question.','error');\r\n          return;\r\n        }\r\n\r\n        if(this.form.value.question=='' && this.form.value.question_type=='text_and_image'){\r\n          Swal.fire('','Please write question.','error');\r\n          return;\r\n        }\r\n\r\n        //this.gridview=true;\r\n       \r\n        //this.form.value.q_id=this.row_id;\r\n        // this.row_id=this.row_id+1;\r\n        //this.form.value.question=this.question_value;\r\n        this.form.value.created_by=this.created_by; \r\n        this.form.value.isFile=this.isFile;\r\n        //this.questionArr.push(this.form.value);\r\n        //console.log(this.form.value);\r\n        //this.form.reset();\r\n\r\n        this.loading = true;\r\n          /////update in temp////\r\n          this.form.value.id=this.idEdit;\r\n\r\n          //console.log(this.form.value);\r\n          console.log('---------->>>>>>>>')  \r\n          this.pocquestionService.updateQuestionCompetitiveDraft(this.form.value)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question successfully updated in draft');\r\n                      this.getDraftQuestion();\r\n                      //setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      this.idEdit=false; \r\n                      this.isEdit=false;\r\n                      this.isProcessed=true;\r\n                      this.isSave=true;\r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                });\r\n\r\n  }\r\n\r\n  publish() \r\n  {\r\n  \r\n      Swal.fire({\r\n        title: '',\r\n        text: 'Are you sure want to publish?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n\r\n        //////////publish call///\r\n        this.submitted2 = true;\r\n        this.loading2   = true; \r\n        //console.log(this.questionArr);\r\n        this.pocquestionService.saveCompetitiveQuiz(this.questionArr,this.quiz_temp_id)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question added successfully');\r\n                      setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      \r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading2 = false;\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading2 = false;\r\n                });\r\n          //////////end////////////\r\n         \r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n          //cancel\r\n        }\r\n      })\r\n  }\r\n\r\n    reUpload(){\r\n        this.router.navigate(['/study-exam/create']);\r\n    }\r\n\r\n    onSubmitData() {\r\n        this.submitted = true;\r\n        \r\n        /*if(this.form.value.status){\r\n        this.form.value.status=\"1\";\r\n        }\r\n        else{\r\n        this.form.value.status=\"0\"\r\n        }*/\r\n         //this.form.value.question=this.value;\r\n        this.loading = true; \r\n        this.pocquestionService.addBulkQuestionCompetitive(this.fileData, this.resultGridList)\r\n            .subscribe(\r\n                data => { //console.log('data -- '+JSON.stringify(data));\r\n                    if(data['error_code']==0){\r\n                        this.alertService.pop('success', 'Question added successfully');\r\n                        setTimeout(()=>this.router.navigate(['/study-exam']), 1500);\r\n                    }else if(data['error_code']==2 ){\r\n                        this.alertService.pop('error', 'Quiz data not selected, First of all you have to fill quiz related data.');\r\n                       // setTimeout(()=>this.router.navigate(['/study-exam']), 1500);\r\n                    }\r\n                    else\r\n                    {\r\n                        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading = false;\r\n                    //this.router.navigate(['/study-exam']);\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    //this.router.navigate(['/study-exam']);\r\n                });\r\n\r\n\r\n    }\r\n  convertTwoDigit(n) {\r\n    n = String(n);\r\n    if (n.length == 1){\r\n      n = '0' + n\r\n    }\r\n    return n;\r\n  }\r\n\r\n  qtChanged(element){\r\n    this.question_type=element;\r\n    this.question_value='';\r\n    this.croppedImage='';\r\n    this.form.patchValue({\r\n      question:''\r\n    });\r\n  }\r\n\r\n  //image cropping\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n  \r\n    fileChangeEvent(event: any): void {\r\n    \r\n      if (event.target.files && event.target.files.length > 0) {\r\n        let file = event.target.files[0];\r\n        let img = new Image();\r\n        var name = event.target.files[0].name;\r\n        var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n        if (ext.toLowerCase() != 'jpeg' && ext.toLowerCase() != 'jpg' && ext.toLowerCase() != 'png')\r\n          { \r\n            Swal.fire('','File type should be jpeg, jpg or png format','error');\r\n            return;\r\n          }\r\n          else\r\n          {\r\n            this.imageChangedEvent = event;\r\n            this.showModal = true;\r\n          }\r\n      }\r\n        \r\n    }\r\n    imageCropped(event: ImageCroppedEvent) {\r\n        this.croppedImage = event.base64;\r\n        this.question_value=this.croppedImage;\r\n        this.isFile=true;\r\n        this.form.patchValue({\r\n          edit_question_image: this.croppedImage\r\n        });\r\n\r\n    }\r\n    imageLoaded() {\r\n        /* show cropper */\r\n    }\r\n    cropperReady() {\r\n        /* cropper ready */\r\n    }\r\n    loadImageFailed() {\r\n        /* show message */\r\n        Swal.fire('','Please upload image only','error');\r\n    }\r\n\r\n    closePopup(){\r\n      this.showModal = false;\r\n    }\r\n}\r\n","export default \":host ::ng-deep .ck-editor__editable_inline {\\n  min-height: 200px;\\n  max-height: 200px;\\n}\\n\\n:host ::ng-deep .ck-editor__editable_inline p {\\n  font-size: 18px;\\n}\\n\\n:host ::ng-deep .ck-editor {\\n  width: 300px;\\n}\\n\\n.single-curriculum-wrap .group label {\\n  display: block;\\n}\\n\\n.card-block {\\n  padding: 0 12px 5px;\\n}\\n\\n.publish-table-wrap.m-b-0 {\\n  margin-bottom: 0px;\\n}\\n\\n.single-curriculum-wrap .publish-table-wrap {\\n  max-height: 500px;\\n}\\n\\n:host ::ng-deep .q_opton .ck-editor__editable_inline {\\n  min-height: 40px;\\n  max-height: 40px;\\n}\\n\\n:host ::ng-deep .ltr-txt .ck-editor__editable_inline {\\n  text-align: left;\\n  direction: ltr;\\n}\\n\\n:host ::ng-deep .rtl-txt .ck-editor__editable_inline {\\n  text-align: right;\\n  direction: rtl;\\n}\\n\\n.single-curriculum-wrap .publish-table-wrap {\\n  padding: 0px 0 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc3R1ZHktZXhhbS9jb21wZXRpdGl2ZS9EOlxcbWVhblxcYWxsYW0tY21zL3NyY1xcYXBwXFxwYWdlc1xcc3R1ZHktZXhhbVxcY29tcGV0aXRpdmVcXHNpbmdsZS1jb21wZXRpdGl2ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvc3R1ZHktZXhhbS9jb21wZXRpdGl2ZS9zaW5nbGUtY29tcGV0aXRpdmUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxlQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0FDQ0o7O0FERUE7RUFDSSxtQkFBQTtBQ0NKOztBREVBO0VBQTRCLGtCQUFBO0FDRTVCOztBRERBO0VBQTZDLGlCQUFBO0FDSzdDOztBREhBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtBQ01KOztBREhBO0VBQ0ksZ0JBQUE7RUFDSCxjQUFBO0FDTUQ7O0FESkE7RUFDSSxpQkFBQTtFQUNBLGNBQUE7QUNPSjs7QURKQTtFQUE2QyxtQkFBQTtBQ1E3QyIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N0dWR5LWV4YW0vY29tcGV0aXRpdmUvc2luZ2xlLWNvbXBldGl0aXZlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XHJcbiAgICBtaW4taGVpZ2h0OiAyMDBweDtcclxuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHAge1xyXG4gICAgZm9udC1zaXplOjE4cHg7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAuY2stZWRpdG9ye1xyXG4gICAgd2lkdGg6IDMwMHB4OztcclxufVxyXG5cclxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLmdyb3VwIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uY2FyZC1ibG9jayB7XHJcbiAgICBwYWRkaW5nOiAwIDEycHggNXB4O1xyXG59XHJcblxyXG4ucHVibGlzaC10YWJsZS13cmFwLm0tYi0wIHsgbWFyZ2luLWJvdHRvbTogMHB4O31cclxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLnB1Ymxpc2gtdGFibGUtd3JhcCB7bWF4LWhlaWdodDogNTAwcHg7fVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5xX29wdG9uIC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XHJcbiAgICBtaW4taGVpZ2h0OiA0MHB4O1xyXG4gICAgbWF4LWhlaWdodDogNDBweDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5sdHItdHh0IC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdGRpcmVjdGlvbjogbHRyO1xyXG59XHJcbjpob3N0IDo6bmctZGVlcCAucnRsLXR4dCAuY2stZWRpdG9yX19lZGl0YWJsZV9pbmxpbmUge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBkaXJlY3Rpb246IHJ0bDtcclxufVxyXG5cclxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLnB1Ymxpc2gtdGFibGUtd3JhcCB7cGFkZGluZzogMHB4IDAgMTVweDt9XHJcblxyXG5cclxuIiwiOmhvc3QgOjpuZy1kZWVwIC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XG4gIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICBtYXgtaGVpZ2h0OiAyMDBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSBwIHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLmNrLWVkaXRvciB7XG4gIHdpZHRoOiAzMDBweDtcbn1cblxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLmdyb3VwIGxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5jYXJkLWJsb2NrIHtcbiAgcGFkZGluZzogMCAxMnB4IDVweDtcbn1cblxuLnB1Ymxpc2gtdGFibGUtd3JhcC5tLWItMCB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cblxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLnB1Ymxpc2gtdGFibGUtd3JhcCB7XG4gIG1heC1oZWlnaHQ6IDUwMHB4O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnFfb3B0b24gLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHtcbiAgbWluLWhlaWdodDogNDBweDtcbiAgbWF4LWhlaWdodDogNDBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5sdHItdHh0IC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGRpcmVjdGlvbjogbHRyO1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnJ0bC10eHQgLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGRpcmVjdGlvbjogcnRsO1xufVxuXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAucHVibGlzaC10YWJsZS13cmFwIHtcbiAgcGFkZGluZzogMHB4IDAgMTVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { ChangeEvent,BlurEvent} from '@ckeditor/ckeditor5-angular/ckeditor.component';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\r\nimport { CompetitiveSingleService } from '../../../services/studyexam/competitive-single.service';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport { AuthenticationService } from '../../../services';\r\n\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper'; \r\nimport { environment } from '../../../../environments/environment'\r\n \r\n\r\nimport domtoimage from 'dom-to-image-more';\r\ndeclare var $: any;\r\ndeclare var download: any;\r\n\r\n@Component({\r\n  selector: 'app-single-competitive',\r\n  templateUrl: './single-competitive.component.html',\r\n  styleUrls: ['./single-competitive.component.scss']\r\n})\r\nexport class SingleCompetitiveComponent implements OnInit {\r\n    title = 'angularckeditor';\r\n    s3_url =environment.s3_url;\r\n    public Editor = ClassicEditor;\r\n    public selectedItems = [];\r\n    form: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    loading2 = false;\r\n    submitted2 = false;\r\n    gridview = false;\r\n    quiz_temp_id:number;\r\n    error = '';\r\n    private questionArr:any=[];\r\n    private quizArr:any=[];\r\n    row_id=1;\r\n    private toasterService: ToasterService;\r\n\r\n    logUser:any;\r\n    created_by:number;\r\n    isEdit=false;\r\n    idEdit=false;\r\n    editData:any=[];\r\n    pre_quiz_title:string;\r\n    masterArr:any=[];\r\n    quiz_type_id:number;\r\n    quiz_sub_type_id:number;\r\n\r\n    question_type:any='text';\r\n    showModal:boolean=false;\r\n    isFile:boolean=false;\r\n\r\n    public question_value: string = ``;\r\n    public optiona_value: string = ``;\r\n    public optionb_value: string = ``;\r\n    public optionc_value: string = ``;\r\n    public optiond_value: string = ``;\r\n    public default_font_size='font-size:18px';\r\n    language:any='arabic'; \r\n\r\n    public config={\r\n    fontSize: {\r\n      options: [\r\n         12,\r\n          13,\r\n          14,\r\n          15,\r\n          16,\r\n          17,\r\n          18\r\n      ]\r\n    },\r\n    toolbar: [\r\n      'heading',\r\n      '|',\r\n      'fontSize',\r\n      '|',\r\n      'bold',\r\n      'italic',\r\n      'underline', \r\n      'strikethrough',\r\n      'link',\r\n      'bulletedList',\r\n      'numberedList',\r\n      '|',\r\n      'indent',\r\n      'outdent',\r\n      '|',\r\n      //'imageUpload',\r\n      //'blockQuote',\r\n      //'insertTable',\r\n      //'mediaEmbed',\r\n      'MathType',\r\n      'ChemType',\r\n      'undo',\r\n      'redo'\r\n    ],\r\n    contentsLangDirection : 'rtl',\r\n    contentsLanguage:'ar',\r\n    language:'ar'\r\n  }\r\n\r\n      constructor(private fb: FormBuilder,\r\n      private activeAouter: ActivatedRoute,\r\n      private router: Router,\r\n      private alertService: ToasterService,\r\n      private competitiveSingleService:CompetitiveSingleService,\r\n      private authenticationService: AuthenticationService) \r\n      {\r\n        \r\n      }\r\n\r\n\r\n      ngOnInit() \r\n      { \r\n        this.quiz_temp_id = (this.activeAouter.snapshot.params['quiz_temp_id']); //atob\r\n        console.log(this.quiz_temp_id);\r\n       \r\n\r\n        this.form = this.fb.group({\r\n          question: [''],\r\n          question_text: [''],\r\n          question_image_url:[''],\r\n          question_type:[this.question_type,Validators.required],\r\n          language:[this.language],\r\n          option1: [''],\r\n          option2: [''],\r\n          option3: [''],\r\n          option4: [''],\r\n          answer: [''],\r\n          class: [''],\r\n          quiz_sub_type: [''],\r\n          quiz_type: [''],\r\n          chapter: [''],\r\n          subject: [''],\r\n          semester: [''],\r\n          quant_verbal: [''],\r\n          group: ['',Validators.required],\r\n          lesson: [''],\r\n          note: [''],\r\n          level: [''],\r\n          duration: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          delArray: this.fb.array([])\r\n        });\r\n\r\n      \r\n        this.logUser    = this.authenticationService.currentUserValue;\r\n        this.logUser    = JSON.parse(this.logUser);\r\n        this.created_by = this.logUser['user'][0]['id']; \r\n         //check draft quiz\r\n        this.getDraftQuiz();\r\n        this.getDraftQuestion();\r\n        this.getMasterData();\r\n        \r\n\r\n      }\r\n\r\n      public getMasterData() {\r\n        this.competitiveSingleService.getMasterData().subscribe(response => { \r\n        this.masterArr = response['data']; \r\n        });\r\n        console.log(this.masterArr);\r\n      }\r\n\r\n      public getDraftQuestion(user_id=0) {\r\n        this.competitiveSingleService.getDraftQuestionByUser(this.created_by,this.quiz_temp_id).subscribe(response => { \r\n        this.questionArr = response; \r\n        if(this.questionArr.length>0){\r\n          this.gridview=true;\r\n        }\r\n        \r\n        });\r\n      }\r\n\r\n      public getDraftQuiz() {\r\n        this.competitiveSingleService.getDraftQuizByUser(this.created_by,this.quiz_temp_id).subscribe(response => {  \r\n        this.quizArr=response;\r\n       \r\n        if(this.quizArr.length==0){\r\n          this.router.navigate(['/study-exam/create'])\r\n        }\r\n        this.pre_quiz_title = this.quizArr[0].quiz_title;\r\n        this.quiz_type_id   = this.quizArr[0].quiz_type;\r\n        this.quiz_sub_type_id   = this.quizArr[0].quiz_sub_type;\r\n\r\n        this.form.patchValue({\r\n          quiz_type:this.quiz_type_id,\r\n          quiz_sub_type:this.quiz_sub_type_id,\r\n        });\r\n\r\n        \r\n        });\r\n      }\r\n\r\n      get f() { return this.form.controls; }\r\n\r\n       onSubmit() {\r\n         console.log(this.form.value);\r\n        this.submitted = true;\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        if(!this.form.value.answer){\r\n          Swal.fire('','Please select correct answer.','error');\r\n          return;\r\n        }\r\n        if(this.question_type=='text')\r\n        {\r\n          if(this.question_value=='' || this.question_value=='<p><br data-cke-filler=\"true\"></p>'){\r\n            Swal.fire('','Please write question.','error');\r\n            return;\r\n          }\r\n\r\n          //var qSize=this.isOverflown($(\".ck-content\")[0]);\r\n          var qSize=this.isOverflown($(\".question\").find(\"div.ck-content\")[0]);\r\n\r\n          if(qSize){\r\n            Swal.fire('','Question maximum request length exceeded ','error');\r\n            return;\r\n          }\r\n        }\r\n        if(this.croppedImage=='' && this.question_type!='text'){\r\n           Swal.fire('','Please upload question.','error');\r\n            return;\r\n        }\r\n        if(this.form.value.question_text=='' && this.form.value.question_type=='text_and_image'){\r\n          Swal.fire('','Please write question.','error');\r\n          return;\r\n        }\r\n\r\n        if(this.optiona_value=='' || this.optiona_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option A.','error');\r\n            return;\r\n        }\r\n        if(this.optionb_value=='' || this.optionb_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option B.','error');\r\n            return;\r\n        }\r\n        if(this.optionc_value=='' || this.optionc_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option C.','error');\r\n            return;\r\n        }\r\n        if(this.optiond_value=='' || this.optiond_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option D.','error');\r\n            return;\r\n        }\r\n\r\n        this.gridview=true;\r\n        this.form.value.isFile=this.isFile;\r\n        this.form.value.created_by=this.created_by; \r\n        this.form.value.quiz_temp_id=this.quiz_temp_id; \r\n\r\n        this.form.value.question=this.question_value;\r\n        this.form.value.created_by=this.created_by; \r\n        this.form.value.option1=this.optiona_value;\r\n        this.form.value.option2=this.optionb_value;\r\n        this.form.value.option3=this.optionc_value;\r\n        this.form.value.option4=this.optiond_value;\r\n\r\n       \r\n        //this.questionArr.push(this.form.value)\r\n        //this.form.reset();\r\n        //this.submitted=false\r\n\r\n        this.loading = true;\r\n\r\n        if(this.idEdit && this.isEdit){\r\n          /////update in temp////\r\n          this.form.value.id=this.idEdit;\r\n\r\n          console.log(this.form.value);\r\n          console.log('---------->>>>>>>>')  \r\n          this.competitiveSingleService.updateQuestionInDraft(this.form.value)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question successfully saved in draft');\r\n                      this.getDraftQuestion();\r\n                      //setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      this.idEdit=false; \r\n                      this.isEdit=false;\r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n                    this.croppedImage='';\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                });\r\n        }\r\n        else{\r\n          /////save in temp////\r\n          this.competitiveSingleService.saveQuestionInDraft(this.form.value)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question successfully saved in draft');\r\n                      this.getDraftQuestion();\r\n                      //setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.croppedImage='';\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                });\r\n        }\r\n\r\n\r\n        }\r\n\r\n    publish() \r\n    {\r\n\r\n      Swal.fire({\r\n        title: '',\r\n        text: 'Are you sure want to publish?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n\r\n        //////////publish call///\r\n        this.submitted2 = true;\r\n        this.loading2   = true; \r\n        this.competitiveSingleService.saveQuiz(this.questionArr,this.quiz_temp_id)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question added successfully');\r\n                      setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      \r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading2 = false;\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading2 = false;\r\n                });\r\n          //////////end////////////\r\n         \r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n          //cancel\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n\r\n        publish_() {\r\n      \r\n        console.log(this.questionArr)\r\n        this.submitted2 = true;\r\n        this.loading2 = true; \r\n        this.competitiveSingleService.saveQuiz(this.questionArr,this.quiz_temp_id)\r\n            .subscribe(\r\n                data => {\r\n                    if(data['status']==200){\r\n                        this.alertService.pop('success', 'Question added successfully');\r\n                        setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                        \r\n                    }\r\n                    else\r\n                    {\r\n                        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading2 = false;\r\n                    //this.router.navigate(['/study-exam/curriculum-single']);\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading2 = false;\r\n                    //this.router.navigate(['/study-exam']);\r\n                });\r\n\r\n\r\n    }\r\n    \r\n    downloadItem(){\r\n      this.router.navigate([]).then(result => {  window.open('/authentication/studyexam-downlad/teacher/3/'+this.quiz_temp_id, '_blank'); });;\r\n      //this.generatePDF();\r\n    }\r\n\r\n    editItem(event)\r\n    {\r\n      this.isFile=false;\r\n      this.editData = event;\r\n      this.isEdit   = true;\r\n      this.idEdit   = this.editData.id;\r\n      this.question_value=this.editData.question;\r\n      \r\n      console.log('---------------->>');\r\n      console.log(this.question_value);\r\n      \r\n      //const domEditableElement = document.querySelector('.ck-editor__editable');\r\n      //const editorInstance = domEditableElement.ckeditorInstance;\r\n      //editorInstance.setData(this.editData.question );\r\n\r\n      console.log('<<----------------');\r\n\r\n      this.form.patchValue({\r\n          option1: this.editData.option1,\r\n          option2: this.editData.option2,\r\n          option3: this.editData.option3,\r\n          option4: this.editData.option4,\r\n          answer: this.editData.answer,\r\n          class: this.editData.class,\r\n          quiz_sub_type: this.editData.quiz_sub_type,\r\n          quiz_type: this.editData.quiz_type,\r\n          chapter: this.editData.chapter,\r\n          subject: this.editData.subject,\r\n          semester: this.editData.semester,\r\n          quant_verbal: this.editData.quant_verbal,\r\n          group: this.editData.groups,\r\n          lesson: this.editData.lesson,\r\n          note: this.editData.note,\r\n          level:this.editData.level,\r\n          duration:this.editData.duration,\r\n          question_type:this.editData.qui_type,\r\n          question_text:this.editData.question,\r\n          qui_type:this.editData.qui_type,\r\n          question_image_url:this.editData.question_image_url,\r\n          });\r\n          this.croppedImage=this.s3_url+this.editData.question_image_url;\r\n          this.question_type=this.editData.qui_type;\r\n          window.scroll(0,0);\r\n\r\n    }\r\n\r\n    deleteOneItem(item_id){\r\n        var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to delete?',\r\n            text: 'You will not be able to recover this item!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n\r\n              self.competitiveSingleService.deleteDraftQuestion(item_id).subscribe(() => {  \r\n                console.log('deleted draft row'); \r\n                self.getDraftQuestion();\r\n\r\n              });\r\n\r\n              if(self.questionArr.length==0){\r\n                this.gridview=false;\r\n              }\r\n\r\n               Swal.fire(\r\n                'Deleted!',\r\n                'Your data has been deleted.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n    deletItem(){\r\n       \r\n       if(this.selectedItems.length==0){\r\n       Swal.fire('Oh','No item selected to delete :)','error');\r\n       return false;\r\n       }\r\n       var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to delete?',\r\n            text: 'You will not be able to recover this item!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n\r\n              this.selectedItems.forEach(function (value) {\r\n                   self.questionArr.forEach(function(arrItem){\r\n                   \r\n                      if (value == arrItem.id) { \r\n                          self.questionArr.splice(self.questionArr.indexOf(arrItem),1);\r\n                          self.competitiveSingleService.deleteDraftQuestion(value).subscribe(() => {  \r\n                            console.log('deleted draft row'); \r\n                          });\r\n                      } \r\n                   });\r\n              });\r\n\r\n              if(self.questionArr.length==0){\r\n                this.gridview=false;\r\n              }\r\n\r\n               Swal.fire(\r\n                'Deleted!',\r\n                'Your data has been deleted.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n        \r\n        \r\n    }\r\n\r\n    onCheckboxChange(event,val) {\r\n        if(event.target.checked ) {\r\n            this.selectedItems.push(val);\r\n        }\r\n         else {\r\n          this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public onChange( { editor }: BlurEvent ) {\r\n        this.question_value = editor.getData();\r\n        //var html =$(\".ck-content\").html();\r\n        var html = $(\".question\").find(\"div.ck-content\").html();\r\n        html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n        this.question_value =html;\r\n    }\r\n\r\n    public onChangeA( { editor }: BlurEvent ) {\r\n        this.optiona_value = editor.getData();\r\n        var html = $(\".optiona\").find(\"div.ck-content\").html();\r\n        html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n        this.optiona_value =html;\r\n        console.log('editor change event Option A'+html);\r\n    }\r\n    public onChangeB( { editor }: BlurEvent ) {\r\n        this.optionb_value = editor.getData();\r\n        var html = $(\".optionb\").find(\"div.ck-content\").html();\r\n        html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n        this.optionb_value =html;\r\n        console.log('editor change event Option B'+html);\r\n    }\r\n    public onChangeC( { editor }: BlurEvent ) {\r\n        this.optionc_value = editor.getData();\r\n        var html = $(\".optionc\").find(\"div.ck-content\").html();\r\n        html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n        this.optionc_value =html;\r\n        console.log('editor change event Option C'+html);\r\n    }\r\n    public onChangeD( { editor }: BlurEvent ) {\r\n        this.optiond_value = editor.getData();\r\n        var html = $(\".optiond\").find(\"div.ck-content\").html();\r\n        html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n        this.optiond_value =html;\r\n        console.log('editor change event Option D'+html);\r\n    }\r\n\r\n    isOverflown(element) {\r\n      return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\r\n    }\r\n\r\n  qtChanged(element){\r\n    this.question_type=element;\r\n    this.question_value='';\r\n    this.croppedImage='';\r\n    this.form.patchValue({\r\n      question_text:'',\r\n    });\r\n  }\r\n\r\n  lgChanged(element)\r\n  {\r\n    this.language=element;\r\n    if(element=='english'){\r\n      $(\".q_opton,.question\").removeClass(\"rtl-txt\");\r\n      $(\".q_opton,.question\").addClass(\"ltr-txt\");\r\n      //update editor config\r\n      this.config.contentsLangDirection='ltr';\r\n      this.config.contentsLanguage='en';\r\n      this.config.language='en';\r\n    }\r\n    else{\r\n      $(\".q_opton,.question\").removeClass(\"ltr-txt\");\r\n      $(\".q_opton,.question\").addClass(\"rtl-txt\");\r\n      //update editor config\r\n      this.config.contentsLangDirection='rtl';\r\n      this.config.contentsLanguage='ar';\r\n      this.config.language='ar';\r\n    }\r\n  }\r\n\r\n\r\n  //image cropping\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n  \r\n    fileChangeEvent(event: any): void {\r\n    \r\n      if (event.target.files && event.target.files.length > 0) {\r\n        let file = event.target.files[0];\r\n        let img = new Image();\r\n        var name = event.target.files[0].name;\r\n        var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n        if (ext.toLowerCase() != 'jpeg' && ext.toLowerCase() != 'jpg' && ext.toLowerCase() != 'png')\r\n          { \r\n            Swal.fire('','File type should be jpeg, jpg or png format','error');\r\n            return;\r\n          }\r\n          else\r\n          {\r\n            this.imageChangedEvent = event;\r\n            this.showModal = true;\r\n          }\r\n      }\r\n        \r\n    }\r\n    imageCropped(event: ImageCroppedEvent) {\r\n        this.croppedImage = event.base64;\r\n        this.question_value=this.croppedImage;\r\n        this.isFile=true;\r\n        this.form.patchValue({\r\n          question_image: this.croppedImage\r\n        });\r\n\r\n    }\r\n    imageLoaded() {\r\n        /* show cropper */\r\n    }\r\n    cropperReady() {\r\n        /* cropper ready */\r\n    }\r\n    loadImageFailed() {\r\n        /* show message */\r\n        Swal.fire('','Please upload image only','error');\r\n    }\r\n\r\n    closePopup(){\r\n      this.showModal = false;\r\n    }\r\n}\r\n","export default \".table-responsive {\\n  display: block;\\n  overflow-x: auto;\\n}\\n\\n.single-curriculum-wrap .publish-table-wrap {\\n  max-height: 400px;\\n}\\n\\n.single-curriculum-wrap .group label {\\n  display: block;\\n}\\n\\n.card-block {\\n  padding: 0 12px 5px;\\n}\\n\\n.publish-table-wrap.m-b-0 {\\n  margin-bottom: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc3R1ZHktZXhhbS9jdXJyaWN1bHVtL0Q6XFxtZWFuXFxhbGxhbS1jbXMvc3JjXFxhcHBcXHBhZ2VzXFxzdHVkeS1leGFtXFxjdXJyaWN1bHVtXFxidWxrLWN1cnJpY3VsdW0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3N0dWR5LWV4YW0vY3VycmljdWx1bS9idWxrLWN1cnJpY3VsdW0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsZ0JBQUE7QUNDSjs7QURFQTtFQUE2QyxpQkFBQTtBQ0U3Qzs7QURBQTtFQUNJLGNBQUE7QUNHSjs7QURBQTtFQUNJLG1CQUFBO0FDR0o7O0FEREE7RUFBNEIsa0JBQUE7QUNLNUIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9zdHVkeS1leGFtL2N1cnJpY3VsdW0vYnVsay1jdXJyaWN1bHVtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhYmxlLXJlc3BvbnNpdmUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG59XHJcblxyXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAucHVibGlzaC10YWJsZS13cmFwIHttYXgtaGVpZ2h0OiA0MDBweDt9XHJcblxyXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAuZ3JvdXAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5jYXJkLWJsb2NrIHtcclxuICAgIHBhZGRpbmc6IDAgMTJweCA1cHg7XHJcbn1cclxuLnB1Ymxpc2gtdGFibGUtd3JhcC5tLWItMCB7IG1hcmdpbi1ib3R0b206IDBweDt9IiwiLnRhYmxlLXJlc3BvbnNpdmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3cteDogYXV0bztcbn1cblxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLnB1Ymxpc2gtdGFibGUtd3JhcCB7XG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xufVxuXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAuZ3JvdXAgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNhcmQtYmxvY2sge1xuICBwYWRkaW5nOiAwIDEycHggNXB4O1xufVxuXG4ucHVibGlzaC10YWJsZS13cmFwLm0tYi0wIHtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { PocquestionService } from '../../../services/studyexam/pocquestion.service';\r\nimport { ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { HttpClient, HttpParams, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { AuthenticationService } from '../../../services';\r\nimport { CurriculumSingleService } from '../../../services/studyexam/curriculum-single.service';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\r\n\r\ndeclare var $: any;\r\n\r\nconst apiUrl =environment.apiUrl;\r\n\r\n@Component({\r\n  selector: 'app-bulk-curriculum',\r\n  templateUrl: './bulk-curriculum.component.html',\r\n  styleUrls: ['./bulk-curriculum.component.scss']\r\n})\r\nexport class BulkCurriculumComponent implements OnInit {\r\n\ttitle = 'angular Curriculum Bulk';\r\n  s3_url =environment.s3_url;\r\n  local_api_url=environment.apiUrl;\r\n  form: FormGroup;\r\n  formVar: FormGroup;\r\n\tloading = false;\r\n\tsubmitted = false;\r\n\terror = '';\r\n\tprivate questionArr:any=[];\r\n\r\n  uploadedFiles: Array<File>;\r\n  isProcessed: boolean = false;\r\n  isError: boolean;\r\n  errorData: [];\r\n  fileData: any;\r\n  errorCode : number;\r\n  errorDesc : string;\r\n  percentDone: any = 0;\r\n  masterArr:any=[];\r\n  logUser:any;\r\n  created_by:number;\r\n  isEdit=false;\r\n  idEdit=false;\r\n  editData:any=[];\r\n  isSave = true;\r\n  preview: string;\r\n  loading2 = false;\r\n  submitted2 = false;\r\n  checkBox : string = 'false';\r\n\r\n  public selectedItems = [];\r\n\r\n\tprivate toasterService: ToasterService;\r\n\r\n  public question_value: string = ``;\r\n\r\n  selectedAll: any = false;\r\n  selectedNames: any;\r\n\r\n  /*private classOptions: string[] = [\"1\", \"2\", \"3\", \"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"];\r\n  private semesterOptions: string[] = [\"1\", \"2\"];\r\n  private groupOptions: string[] = [\"1\", \"2\", \"3\"];\r\n  \r\n  private lessonOptions: string[] = [\"1\", \"2\", \"3\", \"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"];\r\n  private chapterOptions: string[] = [\"1\", \"2\", \"3\", \"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"];*/\r\n  private levelOptions: string[] = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n  private durationOptions: string[] = [\"05\",\"15\", \"25\", \"30\",\"60\",\"120\"];\r\n\r\n  question_type:any='text';\r\n  showModal:boolean=false;\r\n  isFile:boolean=false;\r\n\r\n\tconstructor(private fb: FormBuilder,private route: ActivatedRoute,private router: Router, private http: HttpClient, private pocquestionService: PocquestionService,private alertService: ToasterService,private authenticationService: AuthenticationService, private curriculumSingleService:CurriculumSingleService) \r\n\t{\r\n\t  \tthis.formVar = this.fb.group({\r\n\t      excelFile: [null, Validators.required],\r\n\t      zipFile : [null, Validators.required],\r\n        existImage : ['']\r\n\t    })\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n    this.form = this.fb.group({\r\n          question: [''],\r\n          question_text: [''],\r\n          question_image_url:[''],\r\n          question_image:[''],\r\n          edit_question_image:[''],\r\n          question_type:[''],\r\n          option1: ['',Validators.required],\r\n          option2: ['',Validators.required],\r\n          option3: ['',Validators.required],\r\n          option4: ['',Validators.required],\r\n          answer: [''],\r\n          class: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          quiz_sub_type: [''],\r\n          quiz_type: ['',Validators.required],\r\n          chapter: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          subject: ['',Validators.required],\r\n          semester: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          quant_verbal: [''],\r\n          group: [''],\r\n          lesson: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          note: [''],\r\n          level: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          duration: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          delArray: this.fb.array([])\r\n        });\r\n\r\n    this.logUser    = this.authenticationService.currentUserValue;\r\n    this.logUser    = JSON.parse(this.logUser);\r\n    this.created_by = this.logUser['user'][0]['id'];  \r\n    this.getDraftQuestion();\r\n    this.getMasterData();\r\n    \r\n\t}\r\n  get f() { return this.form.controls; }\r\n\r\n  public getMasterData() {\r\n        this.curriculumSingleService.getMasterData().subscribe(response => { \r\n        this.masterArr = response['data']; \r\n        });\r\n        //console.log(this.masterArr);\r\n  }\r\n  public getDraftQuestion(user_id=0) {\r\n    this.pocquestionService.getDraftQuestionByUser(this.created_by)\r\n    .subscribe(\r\n    response => { //console.log('response -- '+JSON.stringify(response));\r\n      this.questionArr = response;\r\n      //this.isProcessed = true;\r\n      //console.log(Object.keys(this.questionArr).length);\r\n      if (Object.keys(this.questionArr).length != 0) {\r\n        this.isProcessed = true;\r\n      }\r\n    },\r\n    error => {\r\n        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n        this.loading = false;\r\n        //this.router.navigate(['/study-exam']);\r\n    });\r\n  }\r\n\r\n  downloadItem(){\r\n    this.router.navigate([]).then(result => {  window.open('/authentication/studyexam-downlad/teacher/2/0', '_blank'); });;\r\n    //this.generatePDF();\r\n  }\r\n\r\n  editItem(event)\r\n    {\r\n      this.editData = event;\r\n      this.isEdit   = true;\r\n      this.isSave   = false;\r\n      this.idEdit   = this.editData.id;\r\n      this.question_value=this.editData.question;\r\n      \r\n      console.log('---------------->>');\r\n      console.log(this.question_value);\r\n    \r\n\r\n      this.form.patchValue({\r\n          question: this.editData.question,\r\n          option1: this.editData.option1,\r\n          option2: this.editData.option2,\r\n          option3: this.editData.option3,\r\n          option4: this.editData.option4,\r\n          answer: this.editData.answer,\r\n          class: this.editData.class,\r\n          quiz_sub_type: this.editData.quiz_sub_type,\r\n          quiz_type: this.editData.quiz_type,\r\n          chapter: this.editData.chapter,\r\n          subject: this.editData.subject,\r\n          semester: this.editData.semester,\r\n          quant_verbal: this.editData.quant_verbal,\r\n          group: this.editData.groups,\r\n          lesson: this.editData.lesson,\r\n          note: this.editData.note,\r\n          level:this.editData.level,\r\n          duration:this.convertTwoDigit(this.editData.duration),\r\n          question_type:this.editData.qui_type,\r\n          question_text:this.editData.question,\r\n          qui_type:this.editData.qui_type,\r\n          question_image_url:this.editData.question_image_url,\r\n          question_image:this.editData.question_image,\r\n          });\r\n          this.croppedImage  = this.local_api_url+this.editData.question_image;\r\n          this.question_type = this.editData.qui_type;\r\n          this.preview = apiUrl+this.editData.question_image_url;\r\n          \r\n    }\r\n  goBack(){\r\n    this.isEdit   = false;\r\n    this.isSave   = true;\r\n  }\r\n\r\n  fileChangeXlsx(element, variable) {\r\n      //var pattern=\"^.+\\.(xlsx|xls|csv)$\";\r\n      //var pattern=\"^.+\\.(xlsx)$\";\r\n      \r\n      const file = (element.target as HTMLInputElement).files[0];\r\n      //console.log('type', file.type);\r\n      //console.log('accept', element.target.accept);\r\n      //console.log(element.target.files[0].name);\r\n      \r\n      var name = element.target.files[0].name;\r\n      var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n      if (ext.toLowerCase() == 'xlsx') {\r\n          if (typeof (this.uploadedFiles) == \"undefined\") {\r\n            this.uploadedFiles = new Array<File>();\r\n            this.uploadedFiles.push(element.target.files[0]);\r\n          }\r\n          else {\r\n            this.uploadedFiles.push(element.target.files[0]);\r\n          }\r\n      }else{\r\n        variable.value = null;\r\n        Swal.fire('','File type should be xlsx','error');\r\n        return;\r\n      }\r\n\r\n      /*if (file.type !== 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n        //this.form.reset();\r\n        element.value = \"\";\r\n        variable.value = null;\r\n        Swal.fire('','File type should be xlsx','error');\r\n        return;\r\n      }else{\r\n      \r\n        if (typeof (this.uploadedFiles) == \"undefined\") {\r\n          this.uploadedFiles = new Array<File>();\r\n          this.uploadedFiles.push(element.target.files[0]);\r\n        }\r\n        else {\r\n          this.uploadedFiles.push(element.target.files[0]);\r\n        }\r\n        //console.log(this.uploadedFiles);\r\n      }*/\r\n    }\r\n  fileChangeZip(element, variable1) {\r\n    const file = (element.target as HTMLInputElement).files[0];\r\n    console.log('type', file.type);\r\n\r\n    var name = element.target.files[0].name;\r\n    var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n    if (ext.toLowerCase() == 'zip') {\r\n        if (typeof (this.uploadedFiles) == \"undefined\") {\r\n          this.uploadedFiles = new Array<File>();\r\n          this.uploadedFiles.push(element.target.files[0]);\r\n        }\r\n        else {\r\n          this.uploadedFiles.push(element.target.files[0]);\r\n        }\r\n    }else{\r\n      variable1.value = null;\r\n      Swal.fire('','File type should be zip','error');\r\n      return;\r\n    }\r\n  }\r\n  // Image Preview\r\n  uploadQuestionImage(event) {\r\n      const file = (event.target as HTMLInputElement).files[0];\r\n      this.form.patchValue({\r\n        question_image_url: file\r\n      });\r\n      this.form.get('question_image_url').updateValueAndValidity()\r\n\r\n      // File Preview\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.preview = reader.result as string;\r\n      }\r\n      reader.readAsDataURL(file)\r\n  }\r\n\r\n  eventCheck(event){\r\n    this.checkBox = event.target.checked;\r\n      console.log(event.target.checked)  //<--- Check with this\r\n  }\r\n\r\n  upload() {\r\n        this.showLoader(); \r\n        this.loading2   = true; \r\n        console.log('-bf');\r\n        console.log(this.uploadedFiles);\r\n        if (typeof (this.uploadedFiles) == \"undefined\" || this.uploadedFiles.length==0) {\r\n          this.isError = false;\r\n          this.isProcessed=false;\r\n          this.errorData = null;\r\n\r\n          //this.alertService.pop('error', \"Excel file or zip file not selected.\");\r\n          Swal.fire('','Excel file or zip file not selected.','error');\r\n          this.hideLoader(); \r\n          this.loading2   = false; \r\n          return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"existImage\", this.checkBox);\r\n        //console.log('this.checkBox ', this.checkBox)\r\n        for (var i = 0; i < this.uploadedFiles.length; i++) {\r\n          formData.append(\"uploads[]\", this.uploadedFiles[i], this.uploadedFiles[i].name);\r\n        }\r\n        //console.log('formData '+JSON.stringify(formData));\r\n        //const url = 'http://localhost:3000/api/upload';\r\n        this.http.post(apiUrl+'cms-study-exam/api/curr_upload/1', formData, { reportProgress: true, observe: \"events\"})\r\n          .subscribe((response: HttpEvent<any>) => {\r\n              \r\n              switch (response.type) {\r\n                    case HttpEventType.Sent:\r\n                        console.log('Request has been made!');\r\n                        break;\r\n                    case HttpEventType.ResponseHeader:\r\n                        console.log('Response header has been received!');\r\n                        break;\r\n                    case HttpEventType.UploadProgress:\r\n                        this.percentDone = Math.round(response.loaded / response.total * 100);\r\n                        console.log(`Uploaded! ${this.percentDone}%`);\r\n                        break;\r\n                    case HttpEventType.Response:\r\n                         //console.log('response.body.message '+ response.body.message);\r\n                            console.log('Upload successfully ', response.body);\r\n                        if (response.body.error_code == 0) {\r\n                             //this.errorData = response[\"data\"];\r\n                             this.uploadedFiles = [];\r\n                              this.fileData = response.body[\"data\"];\r\n                              //this.fileData['created_by'] = this.created_by; \r\n                              //this.fileData.unshift({'created_by' : this.created_by});\r\n                              //this.fileData.push({'created_by' : this.created_by});\r\n                              console.log(this.fileData);\r\n                              this.saveTemp(); // Here call function for save data in temp table\r\n                              this.isError=false;\r\n                              this.isProcessed=true;\r\n                              this.loading2 = false;\r\n                              this.alertService.pop('success', 'Study data upload successfully!');\r\n                              this.hideLoader(); \r\n                              this.uploadedFiles = new Array<File>();\r\n                        }\r\n                        else if (response.body.error_code == 1) {\r\n                              this.isError = false;\r\n                              this.isProcessed=false;\r\n                              this.loading2 = false;\r\n                              this.errorData = response.body[\"data\"];\r\n                              this.errorCode = response.body[\"error_code\"];\r\n                              this.errorDesc = response.body[\"err_desc\"];\r\n                              Swal.fire('',response.body.err_desc,'error');\r\n                              //this.alertService.pop('error', response.body.err_desc);\r\n                              this.uploadedFiles = new Array<File>();\r\n                              this.formVar.reset();\r\n                        }else if (response.body.error_code == 2) {\r\n                              this.uploadedFiles = [];\r\n                              this.isError = true;\r\n                              this.isProcessed=false;\r\n                              this.loading2 = false;\r\n                              this.errorData = response.body[\"data\"];\r\n                              Swal.fire('',response.body.err_desc,'error');\r\n                              this.uploadedFiles = new Array<File>();\r\n                              this.formVar.reset();\r\n                        }   \r\n                 this.loading2 = false;\r\n                this.percentDone = false;\r\n                       \r\n                }\r\n\r\n            \r\n            this.hideLoader(); \r\n            //console.log('response receved is ', response);\r\n            //console.log('HttpEventType -- '+JSON.stringify(HttpEventType));\r\n        });\r\n  }\r\n\r\n\r\n\r\n  saveTemp(){\r\n    this.pocquestionService.addBulkQuestionTemp(this.fileData, this.created_by)\r\n          .subscribe(\r\n              data => { //console.log('data -- '+JSON.stringify(data));\r\n                if(data['status']==200){\r\n                    this.getDraftQuestion(); //Show all temp data \r\n                    this.alertService.pop('success', 'Question added successfully in temp');\r\n                    //setTimeout(()=>this.router.navigate(['/study-exam']), 1500);\r\n                  }\r\n                  else\r\n                  {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                  }\r\n\r\n                  this.loading = false;\r\n                  //this.router.navigate(['/study-exam']);\r\n                  \r\n              },\r\n              error => {\r\n                  this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                  this.loading = false;\r\n                  //this.router.navigate(['/study-exam']);\r\n              });\r\n  }\r\n  // Function is defined \r\n  hideLoader() { \r\n\r\n      // Setting display of spinner \r\n      // element to none \r\n      document.getElementById('loading-s') \r\n          .style.display = 'none'; \r\n  }\r\n  showLoader() { \r\n\r\n      // Setting display of spinner \r\n      // element to none \r\n      document.getElementById('loading-s') \r\n          .style.display = 'block'; \r\n  }\r\n\r\n  /* onCheckboxChange(event,val) {\r\n      if(event.target.checked ) {\r\n          this.selectedItems.push(val);\r\n      }\r\n       else {\r\n        this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n      }\r\n\r\n  } */\r\n\r\n  selectAll() {\r\n    this.selectedAll = !this.selectedAll;\r\n    this.selectedItems = [];\r\n    for (var i = 0; i < this.questionArr.length; i++) {\r\n        this.questionArr[i].selected = this.selectedAll;\r\n        //console.log(this.selectedAll)\r\n        if(this.selectedAll == true){\r\n          this.selectedItems.push(this.questionArr[i].id);\r\n        }else{\r\n          this.selectedItems.splice(this.selectedItems.indexOf(this.questionArr[i].id),1);\r\n        }\r\n        \r\n    } \r\n    //console.log(this.selectedItems)\r\n  }\r\n  checkIfAllSelected(event,val) {\r\n    if(event.target.checked ) {\r\n        this.selectedItems.push(val);\r\n    }\r\n    else {\r\n      this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n    }\r\n    //console.log(this.selectedItems)\r\n  }\r\n  \r\n  deleteOneItem(item_id){\r\n        var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to delete?',\r\n            text: 'You will not be able to recover this item!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n\r\n              self.pocquestionService.deleteDraftQuestion(item_id).subscribe(() => {  \r\n                console.log('deleted draft row'); \r\n                self.getDraftQuestion();\r\n                //self.questionArr.splice(self.questionArr.indexOf(item_id),1);\r\n              });\r\n\r\n              if(self.questionArr.length==0){\r\n                this.isProcessed=false;\r\n              }\r\n\r\n               Swal.fire(\r\n                'Deleted!',\r\n                'Your data has been deleted.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n    }\r\n\r\n  deletItem(){ //console.log('this.selectedItems '+this.selectedItems)\r\n    if(this.selectedItems.length==0){\r\n     Swal.fire('Oh','No item selected to delete :)','error');\r\n     return false;\r\n     }\r\n      var self = this;\r\n      Swal.fire({\r\n          title: 'Are you sure want to delete?',\r\n          text: 'You will not be able to recover this item!',\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Yes, delete it!',\r\n          cancelButtonText: 'No, keep it'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n\r\n              /*this.selectedItems.forEach(function (value) {\r\n                   self.fileData.forEach(function(arrItem){\r\n                      if (value == arrItem.question) {\r\n                          self.fileData.splice(self.fileData.indexOf(arrItem),1);\r\n                      } \r\n                   });\r\n              });*/\r\n              this.selectedItems.forEach(function (value) { \r\n                   self.questionArr.forEach(function(arrItem){  \r\n                      if (value == arrItem.id) { \r\n                          self.questionArr.splice(self.questionArr.indexOf(arrItem),1);\r\n                          self.pocquestionService.deleteDraftQuestion(value).subscribe(() => {  \r\n                            console.log('deleted draft row'); \r\n                          });\r\n                      } \r\n                   });\r\n              });\r\n\r\n            if(self.questionArr.length==0){\r\n              this.isProcessed=false;\r\n            }\r\n            Swal.fire(\r\n              'Deleted!',\r\n              'Your data has been deleted.',\r\n              'success'\r\n            )\r\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n            Swal.fire(\r\n              'Cancelled',\r\n              'Your data is safe :)',\r\n              'error'\r\n            )\r\n          }\r\n        })\r\n  }\r\n\r\n  reUpload(){\r\n      this.router.navigate(['/study-exam/create']);\r\n  }\r\n\r\n  /*removeQuiz(quiz) {\r\n      if(confirm(\"Are you sure to delete: \"+quiz.question)) {\r\n          this.fileData.splice(this.fileData.indexOf(quiz), 1);\r\n          this.alertService.pop('success', 'Study data deleted successfully!');\r\n      }\r\n  }*/\r\n\r\n  onUpdateTemp() {\r\n        \r\n        this.submitted = true;\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        if(!this.form.value.answer){\r\n          Swal.fire('','Please select correct answer.','error');\r\n          return;\r\n        }\r\n\r\n        if(this.question_value=='' && this.form.value.question_type!='text'){\r\n          Swal.fire('','Please upload question.','error');\r\n          return;\r\n        }\r\n        if(this.form.value.question=='' && this.form.value.question_type=='text'){\r\n          Swal.fire('','Please write question.','error');\r\n          return;\r\n        }\r\n\r\n        if(this.form.value.question=='' && this.form.value.question_type=='text_and_image'){\r\n          Swal.fire('','Please write question.','error');\r\n          return;\r\n        }\r\n        //this.gridview=true;\r\n       \r\n        //this.form.value.q_id=this.row_id;\r\n        // this.row_id=this.row_id+1;\r\n        //this.form.value.question=this.question_value;\r\n\r\n        this.form.value.created_by=this.created_by; \r\n        this.form.value.isFile=this.isFile;\r\n        //this.questionArr.push(this.form.value);\r\n        //console.log(this.form.value);\r\n        //this.form.reset();\r\n\r\n        this.loading = true;\r\n          /////update in temp////\r\n          this.form.value.id=this.idEdit;\r\n\r\n          //console.log(this.form.value);\r\n          //console.log('---------->>>>>>>>')  \r\n          this.pocquestionService.updateQuestionInDraft(this.form.value)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question successfully updated in draft');\r\n                      this.getDraftQuestion();\r\n                      //setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      this.idEdit=false; \r\n                      this.isEdit=false;\r\n                      this.isProcessed=true;\r\n                      this.isSave=true;\r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                });\r\n\r\n  }\r\n\r\n  publish() \r\n  {\r\n    console.log(this.questionArr);\r\n      Swal.fire({\r\n        title: '',\r\n        text: 'Are you sure want to publish?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n\r\n        //////////publish call///\r\n        this.submitted2 = true;\r\n        this.loading2   = true; \r\n        //console.log(this.questionArr);\r\n        this.pocquestionService.saveQuiz(this.questionArr)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question added successfully');\r\n                      setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      \r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading2 = false;\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading2 = false;\r\n                });\r\n          //////////end////////////\r\n         \r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n          //cancel\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n\tonSubmitData() {\r\n        this.submitted = true;\r\n        \r\n        /*if(this.form.value.status){\r\n        this.form.value.status=\"1\";\r\n        }\r\n        else{\r\n        this.form.value.status=\"0\"\r\n        }*/\r\n \t\t    //this.form.value.question=this.value;\r\n        this.loading = true; \r\n        this.pocquestionService.addBulkQuestion(this.fileData)\r\n            .subscribe(\r\n                data => { //console.log('data -- '+JSON.stringify(data));\r\n                \tif(data['status']==200){\r\n                    \tthis.alertService.pop('success', 'Question added successfully');\r\n                    \tsetTimeout(()=>this.router.navigate(['/study-exam']), 1500);\r\n                    }\r\n                    else\r\n                    {\r\n                    \tthis.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading = false;\r\n                    //this.router.navigate(['/study-exam']);\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    //this.router.navigate(['/study-exam']);\r\n                });\r\n\r\n\r\n    }\r\n  convertTwoDigit(n) {\r\n    n = String(n);\r\n    if (n.length == 1){\r\n      n = '0' + n\r\n    }\r\n    return n;\r\n  }\r\n\r\n  qtChanged(element){\r\n    this.question_type=element;\r\n    this.question_value='';\r\n    this.croppedImage='';\r\n     this.form.patchValue({\r\n          question:''\r\n        });\r\n  }\r\n\r\n  //image cropping\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n  \r\n    fileChangeEvent(event: any): void {\r\n    \r\n      if (event.target.files && event.target.files.length > 0) {\r\n        let file = event.target.files[0];\r\n        let img = new Image();\r\n        var name = event.target.files[0].name;\r\n        var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n        if (ext.toLowerCase() != 'jpeg' && ext.toLowerCase() != 'jpg' && ext.toLowerCase() != 'png')\r\n          { \r\n            Swal.fire('','File type should be jpeg, jpg or png format','error');\r\n            return;\r\n          }\r\n          else\r\n          {\r\n            this.imageChangedEvent = event;\r\n            this.showModal = true;\r\n          }\r\n      }\r\n        \r\n    }\r\n    imageCropped(event: ImageCroppedEvent) {\r\n        this.croppedImage = event.base64;\r\n        this.question_value=this.croppedImage;\r\n        this.isFile=true;\r\n        this.form.patchValue({\r\n          edit_question_image: this.croppedImage\r\n        });\r\n\r\n    }\r\n    imageLoaded() {\r\n        /* show cropper */\r\n    }\r\n    cropperReady() {\r\n        /* cropper ready */\r\n    }\r\n    loadImageFailed() {\r\n        /* show message */\r\n        Swal.fire('','Please upload image only','error');\r\n    }\r\n\r\n    closePopup(){\r\n      this.showModal = false;\r\n    }\r\n\r\n}\r\n","export default \":host ::ng-deep .question .ck-editor__editable_inline {\\n  min-height: 200px;\\n  max-height: 200px;\\n}\\n\\n:host ::ng-deep .ck-editor__editable_inline p {\\n  font-size: 18px;\\n}\\n\\n:host ::ng-deep .ck-editor {\\n  width: 300px;\\n}\\n\\n.single-curriculum-wrap .group label {\\n  display: block;\\n}\\n\\n.card-block {\\n  padding: 0 12px 5px;\\n}\\n\\n.publish-table-wrap.m-b-0 {\\n  margin-bottom: 0px;\\n}\\n\\n.single-curriculum-wrap .publish-table-wrap {\\n  max-height: 400px;\\n}\\n\\n:host ::ng-deep .q_opton .ck-editor__editable_inline {\\n  min-height: 40px;\\n  max-height: 40px;\\n}\\n\\n:host ::ng-deep .ltr-txt .ck-editor__editable_inline {\\n  text-align: left;\\n  direction: ltr;\\n}\\n\\n:host ::ng-deep .rtl-txt .ck-editor__editable_inline {\\n  text-align: right;\\n  direction: rtl;\\n}\\n\\n.single-curriculum-wrap .publish-table-wrap {\\n  padding: 0px 0 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc3R1ZHktZXhhbS9jdXJyaWN1bHVtL0Q6XFxtZWFuXFxhbGxhbS1jbXMvc3JjXFxhcHBcXHBhZ2VzXFxzdHVkeS1leGFtXFxjdXJyaWN1bHVtXFxzaW5nbGUtY3VycmljdWx1bS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvc3R1ZHktZXhhbS9jdXJyaWN1bHVtL3NpbmdsZS1jdXJyaWN1bHVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksZUFBQTtBQ0NKOztBREdBO0VBQ0ksWUFBQTtBQ0FKOztBREdBO0VBQ0ksY0FBQTtBQ0FKOztBREdBO0VBQ0ksbUJBQUE7QUNBSjs7QURJQTtFQUE0QixrQkFBQTtBQ0E1Qjs7QURDQTtFQUE2QyxpQkFBQTtBQ0c3Qzs7QUREQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7QUNJSjs7QUREQTtFQUNJLGdCQUFBO0VBQ0gsY0FBQTtBQ0lEOztBREZBO0VBQ0ksaUJBQUE7RUFDQSxjQUFBO0FDS0o7O0FEREE7RUFBNkMsbUJBQUE7QUNLN0MiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9zdHVkeS1leGFtL2N1cnJpY3VsdW0vc2luZ2xlLWN1cnJpY3VsdW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLnF1ZXN0aW9uIC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XHJcbiAgICBtaW4taGVpZ2h0OiAyMDBweDtcclxuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHAge1xyXG4gICAgZm9udC1zaXplOjE4cHg7XHJcbn1cclxuXHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmNrLWVkaXRvcntcclxuICAgIHdpZHRoOiAzMDBweDs7XHJcbn1cclxuXHJcbi5zaW5nbGUtY3VycmljdWx1bS13cmFwIC5ncm91cCBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmNhcmQtYmxvY2sge1xyXG4gICAgcGFkZGluZzogMCAxMnB4IDVweDtcclxufVxyXG5cclxuXHJcbi5wdWJsaXNoLXRhYmxlLXdyYXAubS1iLTAgeyBtYXJnaW4tYm90dG9tOiAwcHg7fVxyXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAucHVibGlzaC10YWJsZS13cmFwIHttYXgtaGVpZ2h0OiA0MDBweDt9XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnFfb3B0b24gLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHtcclxuICAgIG1pbi1oZWlnaHQ6IDQwcHg7XHJcbiAgICBtYXgtaGVpZ2h0OiA0MHB4O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmx0ci10eHQgLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcblx0ZGlyZWN0aW9uOiBsdHI7XHJcbn1cclxuOmhvc3QgOjpuZy1kZWVwIC5ydGwtdHh0IC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIGRpcmVjdGlvbjogcnRsO1xyXG59XHJcblxyXG5cclxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLnB1Ymxpc2gtdGFibGUtd3JhcCB7cGFkZGluZzogMHB4IDAgMTVweDt9XHJcblxyXG5cclxuIiwiOmhvc3QgOjpuZy1kZWVwIC5xdWVzdGlvbiAuY2stZWRpdG9yX19lZGl0YWJsZV9pbmxpbmUge1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG59XG5cbjpob3N0IDo6bmctZGVlcCAuY2stZWRpdG9yX19lZGl0YWJsZV9pbmxpbmUgcCB7XG4gIGZvbnQtc2l6ZTogMThweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5jay1lZGl0b3Ige1xuICB3aWR0aDogMzAwcHg7XG59XG5cbi5zaW5nbGUtY3VycmljdWx1bS13cmFwIC5ncm91cCBsYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uY2FyZC1ibG9jayB7XG4gIHBhZGRpbmc6IDAgMTJweCA1cHg7XG59XG5cbi5wdWJsaXNoLXRhYmxlLXdyYXAubS1iLTAge1xuICBtYXJnaW4tYm90dG9tOiAwcHg7XG59XG5cbi5zaW5nbGUtY3VycmljdWx1bS13cmFwIC5wdWJsaXNoLXRhYmxlLXdyYXAge1xuICBtYXgtaGVpZ2h0OiA0MDBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5xX29wdG9uIC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XG4gIG1pbi1oZWlnaHQ6IDQwcHg7XG4gIG1heC1oZWlnaHQ6IDQwcHg7XG59XG5cbjpob3N0IDo6bmctZGVlcCAubHRyLXR4dCAuY2stZWRpdG9yX19lZGl0YWJsZV9pbmxpbmUge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBkaXJlY3Rpb246IGx0cjtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC5ydGwtdHh0IC5jay1lZGl0b3JfX2VkaXRhYmxlX2lubGluZSB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBkaXJlY3Rpb246IHJ0bDtcbn1cblxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLnB1Ymxpc2gtdGFibGUtd3JhcCB7XG4gIHBhZGRpbmc6IDBweCAwIDE1cHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { ChangeEvent,BlurEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\r\nimport { CurriculumSingleService } from '../../../services/studyexam/curriculum-single.service';\r\nimport { AuthenticationService } from '../../../services';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper'; \r\nimport { environment } from '../../../../environments/environment'\r\n \r\nimport domtoimage from 'dom-to-image-more';\r\ndeclare var $: any;\r\ndeclare var download: any;\r\ndeclare var jsPDF: any;\r\n@Component({\r\n  selector: 'app-single-curriculum',\r\n  templateUrl: './single-curriculum.component.html',\r\n  styleUrls: ['./single-curriculum.component.scss']\r\n})\r\nexport class SingleCurriculumComponent implements OnInit {\r\n\ttitle = 'angularckeditor';\r\n  s3_url =environment.s3_url;\r\n  public Editor = ClassicEditor;\r\n  public selectedItems = [];\r\n  form: FormGroup;\r\n\tloading = false;\r\n  submitted = false;\r\n  loading2 = false;\r\n  submitted2 = false;\r\n\tgridview = false;\r\n\terror = '';\r\n\tprivate questionArr:any=[];\r\n  masterArr:any=[];\r\n  row_id=1;\r\n\tprivate toasterService: ToasterService;\r\n  logUser:any;\r\n  created_by:number;\r\n  isEdit=false;\r\n  idEdit=false;\r\n  editData:any=[];\r\n  question_type:any='text'; \r\n  showModal:boolean=false;\r\n  isFile:boolean=false;\r\n\r\n  language:any='arabic'; \r\n\r\n\r\n  public config={\r\n    fontSize: {\r\n      options: [\r\n          12,\r\n          13,\r\n          14,\r\n          15,\r\n          16,\r\n          17,\r\n          18\r\n      ]\r\n    },\r\n    toolbar: [\r\n      'heading',\r\n      '|',\r\n      'fontSize',\r\n      '|',\r\n      'bold',\r\n      'italic',\r\n      'underline', \r\n      'strikethrough', \r\n      //'subscript', \r\n      //'superscript',\r\n      'link',\r\n      'bulletedList',\r\n      'numberedList',\r\n      '|',\r\n      'indent',\r\n      'outdent',\r\n      '|',\r\n      //'imageUpload',\r\n      //'blockQuote',\r\n      //'insertTable',\r\n      //'mediaEmbed',\r\n      'MathType',\r\n      'ChemType',\r\n      'undo',\r\n      'redo',\r\n    ],\r\n    contentsLangDirection : 'rtl',\r\n    contentsLanguage:'ar',\r\n    language:'ar'\r\n  }\r\n\r\n  public question_value: string = ``;\r\n  public optiona_value: string = ``;\r\n  public optionb_value: string = ``;\r\n  public optionc_value: string = ``;\r\n\tpublic optiond_value: string = ``;\r\n  public default_font_size='font-size:18px';\r\n    \r\n  constructor(private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private alertService: ToasterService,\r\n              private curriculumSingleService:CurriculumSingleService,\r\n              private authenticationService: AuthenticationService\r\n              ) {}\r\n\r\n\t  ngOnInit() {\r\n      this.form = this.fb.group({\r\n          question: [''],\r\n          question_text: [''],\r\n          question_image_url:[''],\r\n          question_type:[this.question_type,Validators.required],\r\n          language:[this.language],\r\n          option1: [''],\r\n          option2: [''],\r\n          option3: [''],\r\n          option4: [''],\r\n          answer: [''],\r\n          class: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          quiz_sub_type: [''],\r\n          quiz_type: ['1'],\r\n          chapter: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          subject: ['',Validators.required],\r\n          semester: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          quant_verbal: [''],\r\n          group: [''],\r\n          lesson: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          note: [''],\r\n          level: [''],\r\n          duration: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\r\n          delArray: this.fb.array([])\r\n        });\r\n\r\n       \r\n        this.logUser    = this.authenticationService.currentUserValue;\r\n        this.logUser    = JSON.parse(this.logUser);\r\n        this.created_by = this.logUser['user'][0]['id']; \r\n        this.getDraftQuestion();\r\n        this.getMasterData();\r\n\r\n\t  }\r\n\r\n    get f() { return this.form.controls; }\r\n\r\n    public getDraftQuestion(user_id=0) {\r\n        this.curriculumSingleService.getDraftQuestionByUser(this.created_by).subscribe(response => { \r\n        this.questionArr = response; \r\n        if(this.questionArr.length>0){\r\n          this.gridview=true;\r\n        }\r\n        \r\n        });\r\n    }\r\n\r\n    public getMasterData() {\r\n        this.curriculumSingleService.getMasterData().subscribe(response => { \r\n        this.masterArr = response['data']; \r\n        });\r\n        console.log(this.masterArr);\r\n    }\r\n\r\n    \r\n    onSubmit() {\r\n        this.submitted = true;\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        if(this.question_type=='text')\r\n        {\r\n          if(this.question_value=='' || this.question_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write question.','error');\r\n            return;\r\n          }\r\n             \r\n          //var qSize=this.isOverflown($(\".ck-content\")[0]);\r\n          var qSize=this.isOverflown($(\".question\").find(\"div.ck-content\")[0]);\r\n          if(qSize){\r\n            Swal.fire('','Question maximum request length exceeded ','error');\r\n            return;\r\n          }\r\n        }\r\n        if(this.croppedImage=='' && this.question_type!='text'){\r\n           Swal.fire('','Please upload question.','error');\r\n            return;\r\n        }\r\n        if(this.form.value.question_text=='' && this.form.value.question_type=='text_and_image'){\r\n          Swal.fire('','Please write question.','error');\r\n          return;\r\n        }\r\n\r\n        if(this.optiona_value=='' || this.optiona_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option A.','error');\r\n            return;\r\n        }\r\n        if(this.optionb_value=='' || this.optionb_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option B.','error');\r\n            return;\r\n        }\r\n        if(this.optionc_value=='' || this.optionc_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option C.','error');\r\n            return;\r\n        }\r\n        if(this.optiond_value=='' || this.optiond_value=='<p><br data-cke-filler=\"true\"></p>' ){\r\n            Swal.fire('','Please write option D.','error');\r\n            return;\r\n        }\r\n\r\n        if(!this.form.value.answer){\r\n          Swal.fire('','Please select correct answer.','error');\r\n          return;\r\n        }\r\n\r\n        \r\n        this.form.value.isFile=this.isFile;\r\n\r\n        this.gridview=true;\r\n       \r\n        //this.form.value.q_id=this.row_id;\r\n        // this.row_id=this.row_id+1;\r\n        this.form.value.question=this.question_value;\r\n        this.form.value.created_by=this.created_by; \r\n        this.form.value.option1=this.optiona_value;\r\n        this.form.value.option2=this.optionb_value;\r\n        this.form.value.option3=this.optionc_value;\r\n        this.form.value.option4=this.optiond_value;\r\n\r\n          console.log(this.form.value);\r\n\r\n        //this.questionArr.push(this.form.value);\r\n        \r\n        //this.form.reset();\r\n\r\n        this.loading = true;\r\n\r\n        if(this.idEdit && this.isEdit){\r\n          /////update in temp////\r\n          this.form.value.id=this.idEdit;\r\n\r\n          console.log(this.form.value);\r\n          console.log('---------->>>>>>>>')  \r\n          this.curriculumSingleService.updateQuestionInDraft(this.form.value)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question successfully saved in draft');\r\n                      this.getDraftQuestion();\r\n                      //setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      this.idEdit=false; \r\n                      this.isEdit=false;\r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n                    this.croppedImage='';\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                });\r\n        }\r\n        else{\r\n          /////save in temp////\r\n          this.curriculumSingleService.saveQuestionInDraft(this.form.value)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question successfully saved in draft');\r\n                      this.getDraftQuestion();\r\n                      //setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n                    this.croppedImage='';\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                    this.submitted=false\r\n\r\n                });\r\n        }\r\n\r\n        /////////////////////\r\n\r\n        }\r\n\r\n\t  publish() \r\n    {\r\n   // console.log(this.questionArr); return ;\r\n    \r\n      Swal.fire({\r\n        title: '',\r\n        text: 'Are you sure want to publish?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'No'\r\n      }).then((result) => {\r\n        if (result.value) {\r\n\r\n        //////////publish call///\r\n        this.submitted2 = true;\r\n        this.loading2   = true; \r\n        this.curriculumSingleService.saveQuiz(this.questionArr)\r\n            .subscribe(\r\n                data => {\r\n                  if(data['status']==200){\r\n                      this.alertService.pop('success', 'Question added successfully');\r\n                      setTimeout(()=>this.router.navigate(['/study-exam']), 1000);\r\n                      \r\n                    }\r\n                    else\r\n                    {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    }\r\n\r\n                    this.loading2 = false;\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading2 = false;\r\n                });\r\n          //////////end////////////\r\n         \r\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n          //cancel\r\n        }\r\n      })\r\n\r\n\r\n    }\r\n    \r\n     deleteOneItem(item_id){\r\n        var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to delete?',\r\n            text: 'You will not be able to recover this item!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n\r\n              self.curriculumSingleService.deleteDraftQuestion(item_id).subscribe(() => {  \r\n                console.log('deleted draft row'); \r\n                self.getDraftQuestion();\r\n\r\n              });\r\n\r\n              if(self.questionArr.length==0){\r\n                this.gridview=false;\r\n              }\r\n\r\n               Swal.fire(\r\n                'Deleted!',\r\n                'Your data has been deleted.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n    }\r\n\r\n    downloadItem(){\r\n      this.router.navigate([]).then(result => {  window.open('/authentication/studyexam-downlad/teacher/1/0', '_blank'); });;\r\n      //this.generatePDF();\r\n    }\r\n\r\n    generatePDF() {\r\n      const doc = new jsPDF({\r\n        orientation: \"landscape\",\r\n        unit: \"in\",\r\n        format: \"a4\"\r\n      });\r\n      var res = doc.autoTableHtmlToJson(document.getElementById(\"contentToConvert\"), false);\r\n      doc.autoTable(res.columns,res.rows);\r\n\r\n      doc.save(\"table.pdf\");\r\n    }\r\n\r\n    deletItem(){\r\n       \r\n       if(this.selectedItems.length==0){\r\n       Swal.fire('Oh','No item selected to delete :)','error');\r\n       return false;\r\n       }\r\n       var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to delete?',\r\n            text: 'You will not be able to recover this item!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              this.selectedItems.forEach(function (value) {\r\n                   self.questionArr.forEach(function(arrItem){\r\n                      if (value == arrItem.id) { \r\n                          self.questionArr.splice(self.questionArr.indexOf(arrItem),1);\r\n                          self.curriculumSingleService.deleteDraftQuestion(value).subscribe(() => {  \r\n                            console.log('deleted draft row'); \r\n                          });\r\n                      } \r\n                   });\r\n              });\r\n\r\n              if(self.questionArr.length==0){\r\n                this.gridview=false;\r\n              }\r\n\r\n               Swal.fire(\r\n                'Deleted!',\r\n                'Your data has been deleted.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n    editItem(event)\r\n    {\r\n      this.isFile=false;\r\n      this.editData = event;\r\n      this.isEdit   = true;\r\n      this.idEdit   = this.editData.id;\r\n      this.question_value=this.editData.question;\r\n      this.form.value.option1=this.optiona_value;\r\n      this.form.value.option2=this.optionb_value;\r\n      this.form.value.option3=this.optionc_value;\r\n      this.form.value.option4=this.optiond_value;\r\n      \r\n      console.log('---------------->>');\r\n      console.log(this.question_value);\r\n      \r\n      //const domEditableElement = document.querySelector('.ck-editor__editable');\r\n      //const editorInstance = domEditableElement.ckeditorInstance;\r\n      //editorInstance.setData(this.editData.question );\r\n\r\n      console.log('<<----------------');\r\n\r\n      this.form.patchValue({\r\n          option1: this.editData.option1,\r\n          option2: this.editData.option2,\r\n          option3: this.editData.option3,\r\n          option4: this.editData.option4,\r\n          answer: this.editData.answer,\r\n          class: this.editData.class,\r\n          quiz_sub_type: this.editData.quiz_sub_type,\r\n          quiz_type: this.editData.quiz_type,\r\n          chapter: this.editData.chapter,\r\n          subject: this.editData.subject,\r\n          semester: this.editData.semester,\r\n          quant_verbal: this.editData.quant_verbal,\r\n          group: this.editData.groups,\r\n          lesson: this.editData.lesson,\r\n          note: this.editData.note,\r\n          level:this.editData.level,\r\n          duration:this.editData.duration,\r\n          question_type:this.editData.qui_type,\r\n          question_text:this.editData.question,\r\n          qui_type:this.editData.qui_type,\r\n          question_image_url:this.editData.question_image_url, \r\n          });\r\n          this.croppedImage=this.s3_url+this.editData.question_image_url;\r\n          this.question_type=this.editData.qui_type;\r\n\r\n          window.scroll(0,0);\r\n\r\n    }\r\n\r\n    onCheckboxChange(event,val) {\r\n        if(event.target.checked ) {\r\n            this.selectedItems.push(val);\r\n        }\r\n         else {\r\n          this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n        }\r\n\r\n    }\r\n\r\n\r\n  public onChange( { editor }: BlurEvent ) {\r\n      this.question_value = editor.getData();\r\n      console.log('editor change event');\r\n      //var html =$(\".ck-content\").html();\r\n      var html = $(\".question\").find(\"div.ck-content\").html();\r\n      html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n      this.question_value =html; \r\n  }\r\n  public onChangeA( { editor }: BlurEvent ) {\r\n      this.optiona_value = editor.getData();\r\n      var html = $(\".optiona\").find(\"div.ck-content\").html();\r\n      html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n      this.optiona_value =html;\r\n      console.log('editor change event Option A'+html);\r\n  }\r\n  public onChangeB( { editor }: BlurEvent ) {\r\n      this.optionb_value = editor.getData();\r\n      var html = $(\".optionb\").find(\"div.ck-content\").html();\r\n      html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n      this.optionb_value =html;\r\n      console.log('editor change event Option B'+html);\r\n  }\r\n  public onChangeC( { editor }: BlurEvent ) {\r\n      this.optionc_value = editor.getData();\r\n      var html = $(\".optionc\").find(\"div.ck-content\").html();\r\n      html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n      this.optionc_value =html;\r\n      console.log('editor change event Option C'+html);\r\n  }\r\n  public onChangeD( { editor }: BlurEvent ) {\r\n      this.optiond_value = editor.getData();\r\n      var html = $(\".optiond\").find(\"div.ck-content\").html();\r\n      html = html.replace(\"<p>\", \"<p style='\"+this.default_font_size+\"'>\");\r\n      this.optiond_value =html;\r\n      console.log('editor change event Option D'+html);\r\n  }\r\n\r\n  isOverflown(element) {\r\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\r\n  }\r\n  qtChanged(element){\r\n    this.question_type=element;\r\n    this.question_value='';\r\n    this.croppedImage='';\r\n    this.form.patchValue({\r\n      question_text:'',\r\n    });\r\n  }\r\n  lgChanged(element)\r\n  {\r\n    this.language=element;\r\n    if(element=='english'){\r\n      $(\".q_opton,.question\").removeClass(\"rtl-txt\");\r\n      $(\".q_opton,.question\").addClass(\"ltr-txt\");\r\n      //update editor config\r\n      this.config.contentsLangDirection='ltr';\r\n      this.config.contentsLanguage='en';\r\n      this.config.language='en';\r\n    }\r\n    else{\r\n      $(\".q_opton,.question\").removeClass(\"ltr-txt\");\r\n      $(\".q_opton,.question\").addClass(\"rtl-txt\");\r\n      //update editor config\r\n      this.config.contentsLangDirection='rtl';\r\n      this.config.contentsLanguage='ar';\r\n      this.config.language='ar';\r\n    }\r\n  }\r\n\r\n  //image cropping\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n  \r\n    fileChangeEvent(event: any): void {\r\n    \r\n      if (event.target.files && event.target.files.length > 0) {\r\n        let file = event.target.files[0];\r\n        let img = new Image();\r\n        var name = event.target.files[0].name;\r\n        var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n        if (ext.toLowerCase() != 'jpeg' && ext.toLowerCase() != 'jpg' && ext.toLowerCase() != 'png')\r\n          { \r\n            Swal.fire('','File type should be jpeg, jpg or png format','error');\r\n            return;\r\n          }\r\n          else\r\n          {\r\n            this.imageChangedEvent = event;\r\n            this.showModal = true;\r\n          }\r\n      }\r\n        \r\n    }\r\n    imageCropped(event: ImageCroppedEvent) {\r\n        this.croppedImage = event.base64;\r\n        this.question_value=this.croppedImage;\r\n        this.isFile=true;\r\n        this.form.patchValue({\r\n          question_image: this.croppedImage\r\n        });\r\n\r\n    }\r\n    imageLoaded() {\r\n        /* show cropper */\r\n    }\r\n    cropperReady() {\r\n        /* cropper ready */\r\n    }\r\n    loadImageFailed() {\r\n        /* show message */\r\n        Swal.fire('','Please upload image only','error');\r\n    }\r\n\r\n    closePopup(){\r\n      this.showModal = false;\r\n    }\r\n}\r\n","import { Component, OnInit, Pipe } from '@angular/core';\r\nimport { Question } from '../../models/studyexam';\r\nimport { QuestionService } from '../../services/studyexam/question.service';\r\nimport { PocquestionService } from '../../services/studyexam/pocquestion.service';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport { AuthenticationService } from '../../services';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  //pipes: [OrderBy] \r\n})\r\n\r\n\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  questions:  any;\r\n\r\n  private toasterService: ToasterService;\r\n\r\n  term: string;\r\n  config: any;\r\n  filters: any;\r\n\r\n  isDesc: boolean = false;\r\n  column: string = 'id';\r\n  direction: number;\r\n\r\n  quizData: any[];\r\n  quizDraftData: any[];\r\n\r\n  logUser:any;\r\n  created_by:number;\r\n\r\n  \r\n  constructor(private pocquestionService: PocquestionService,\r\n  private questionService: QuestionService, \r\n  private router: Router,\r\n  private alertService: ToasterService,\r\n  private authenticationService: AuthenticationService) { \r\n\r\n   this.term = \"\"; \r\n    this.alertService = alertService; \r\n    this.config = {\r\n      itemsPerPage: 5,\r\n      currentPage: 1,\r\n      totalItems: 0\r\n    };\r\n    }\r\n\r\n  ngOnInit() {\r\n      this.logUser    = this.authenticationService.currentUserValue;\r\n      this.logUser    = JSON.parse(this.logUser);\r\n      this.created_by = this.logUser['user'][0]['id']; \r\n      this.showCompetitive();\r\n  }\r\n\r\n  showCompetitive(){\r\n    this.pocquestionService.getQuizByUser(this.created_by)\r\n            .subscribe(\r\n                data => {\r\n                    this.quizData = data['quiz'];\r\n                    this.quizDraftData=data['draft_quiz'];\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    //this.router.navigate(['/question']);\r\n                });\r\n  }\r\n\r\n  baseEncode(id){\r\n    return btoa(id);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {StudyexamComponent} from './studyexam.component';\r\nimport {DashboardComponent} from './dashboard.component';\r\nimport { SingleCompetitiveComponent } from './competitive/single-competitive.component';\r\nimport { SingleCurriculumComponent } from './curriculum/single-curriculum.component';\r\n\r\nimport { BulkCompetitiveComponent } from './competitive/bulk-competitive.component';\r\nimport { BulkCurriculumComponent } from './curriculum/bulk-curriculum.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: StudyexamComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'create/:quiz_temp_id',\r\n    component: StudyexamComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'curriculum-single',\r\n    component: SingleCurriculumComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'competitive-single-old',\r\n    component: SingleCompetitiveComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'competitive-single/:quiz_temp_id',\r\n    component: SingleCompetitiveComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'curriculum-bulk',\r\n    component: BulkCurriculumComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'curriculum-bulk/:quiz_temp_id',\r\n    component: BulkCurriculumComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'competitive-bulk',\r\n    component: BulkCompetitiveComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'competitive-bulk/:quiz_temp_id',\r\n    component: BulkCompetitiveComponent,\r\n    data: {\r\n      breadcrumb: 'Study Exam',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class QuestionRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QuestionRoutingModule } from './question-routing.module';\r\nimport { StudyexamComponent } from './studyexam.component';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { SingleCompetitiveComponent } from './competitive/single-competitive.component';\r\nimport { SingleCurriculumComponent } from './curriculum/single-curriculum.component';\r\n\r\nimport { BulkCompetitiveComponent } from './competitive/bulk-competitive.component';\r\nimport { BulkCurriculumComponent } from './curriculum/bulk-curriculum.component';\r\n\r\n//import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { PipesModule } from \"../../pipes/pipes.module\";\r\n\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\n\r\n\r\nimport { Pipe, PipeTransform} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser'\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\n@Pipe({ name: 'safeHtml'})\r\nexport class SafeHtmlPipe implements PipeTransform  {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value) \r\n  {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    QuestionRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    PipesModule,\r\n    CKEditorModule,\r\n    ImageCropperModule\r\n  ],\r\n  declarations: [\r\n  StudyexamComponent,\r\n  DashboardComponent,\r\n  SingleCompetitiveComponent,\r\n  SingleCurriculumComponent,\r\n  BulkCompetitiveComponent,\r\n  BulkCurriculumComponent,\r\n  SafeHtmlPipe\r\n\r\n  ]\r\n})\r\nexport class QuestionModule { }\r\n","import { Component, OnInit, Pipe, Output, EventEmitter } from '@angular/core';\r\nimport { Question } from '../../models/studyexam';\r\nimport { QuestionService } from '../../services/studyexam/question.service';\r\nimport { PocquestionService } from '../../services/studyexam/pocquestion.service';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster'\r\nimport { CompetitiveSingleService } from '../../services/studyexam/competitive-single.service';\r\nimport { AuthenticationService } from '../../services';\r\n\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { CurriculumSingleService } from '../../services/studyexam/curriculum-single.service';\r\nimport { environment } from '../../../environments/environment'\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\r\n\r\n@Component({\r\n  selector: 'app-studyexam',\r\n  templateUrl: './studyexam.component.html',\r\n  //pipes: [OrderBy] \r\n})\r\n\r\n\r\nexport class StudyexamComponent implements OnInit {\r\n  form: FormGroup; \r\n  questions:  any;\r\n  s3_url =environment.s3_url;\r\n  private toasterService: ToasterService;\r\n  private quizArr:any=[];\r\n  editData:any=[];\r\n  quiz_temp_id:string;\r\n  isEdit=false;\r\n  isFile:boolean=false;\r\n\r\n  term: string;\r\n  config: any;\r\n  filters: any;\r\n  submitted=false;\r\n  loading=false;\r\n  isDesc: boolean = false;\r\n  column: string = 'id';\r\n  direction: number;\r\n  isCompt:boolean=false;\r\n  returnUrl: string;\r\n  created_by:number;\r\n  logUser:any;\r\n  showModal:boolean=false;\r\n\r\n  fileData: File = null;\r\n\r\n  //@Output() public found = new EventEmitter<any>();\r\n  found: Array <any> = [];\r\n  quiz_icon_str: string;\r\n  preview: string;\r\n\r\n  masterArr:any=[];\r\n\r\n  constructor(private fb: FormBuilder,private route: ActivatedRoute,private pocquestionService: PocquestionService,\r\n  private questionService: QuestionService, \r\n  private router: Router,\r\n  private alertService: ToasterService, \r\n  private competitiveSingleService:CompetitiveSingleService,\r\n  private authenticationService: AuthenticationService,\r\n  private curriculumSingleService:CurriculumSingleService) { \r\n      this.form = this.fb.group({\r\n          upload_type:['single'],\r\n          quiz_type: ['1',Validators.required],\r\n          quiz_sub_type: ['',Validators.required],\r\n          quiz_title: ['',Validators.required],\r\n          quiz_description: ['',Validators.required],\r\n          quiz_icon:[null],\r\n        });\r\n    }\r\n  ngOnInit() \r\n  {\r\n      this.logUser    = this.authenticationService.currentUserValue;\r\n      this.logUser    = JSON.parse(this.logUser);\r\n      this.created_by = this.logUser['user'][0]['id']; \r\n\r\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n      this.getMasterData(); // Get master data from DB\r\n\r\n      this.quiz_temp_id = (this.route.snapshot.params['quiz_temp_id']); //atob\r\n      //console.log(this.quiz_temp_id);\r\n      if(this.quiz_temp_id)  {\r\n        this.getDraftQuiz(this.quiz_temp_id);\r\n        this.isEdit=true;\r\n      }\r\n  }\r\n\r\nget f() { return this.form.controls; }\r\n\r\npublic getMasterData() {\r\n        this.curriculumSingleService.getMasterData().subscribe(response => { \r\n        this.masterArr = response['data']; \r\n        });\r\n        console.log(this.masterArr);\r\n    }\r\n\r\npublic getDraftQuiz(quiz_id : string) {\r\n      this.pocquestionService.getDraftQuizByUser(this.created_by, quiz_id).subscribe(response => {  \r\n        this.editData=response[0];\r\n       \r\n        if(this.editData.length==0){\r\n          this.router.navigate(['/study-exam/create'])\r\n        }\r\n        //console.log(response[0]);\r\n        console.log('<<----------------');\r\n\r\n        this.isCompt=true; // Here true for show hidden form of Study competitive\r\n        this.form.patchValue({\r\n          upload_type:this.editData.save_type,\r\n          quiz_type: this.editData.quiz_type,\r\n          quiz_sub_type: this.editData.quiz_sub_type,\r\n          quiz_title: this.editData.quiz_title,\r\n          quiz_description: this.editData.quiz_description,\r\n          quiz_icon:[null],\r\n        });\r\n        this.preview = this.s3_url+this.editData.quiz_icon_url;\r\n        this.croppedImage=this.preview;\r\n      });\r\n  }\r\n\r\nuploadFile(event, variable) {\r\n  this.preview = '';\r\n  let reader = new FileReader();\r\n  if (event.target.files && event.target.files.length > 0) {\r\n    let file = event.target.files[0];\r\n\r\n    let img = new Image();\r\n    var name = event.target.files[0].name;\r\n    var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n    if (ext.toLowerCase() != 'jpeg' && ext.toLowerCase() != 'jpg' && ext.toLowerCase() != 'png')\r\n      { console.log('ext check')\r\n        variable.value = null;\r\n        Swal.fire('','File type should be jpeg, jpg or png format','error');\r\n        return;\r\n      }\r\n\r\n    img.src = window.URL.createObjectURL( file );\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      setTimeout(() => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n\r\n        window.URL.revokeObjectURL( img.src );\r\n        console.log(width + '*' + height);\r\n        if ( width !== 200 && height !== 200 ) {\r\n          Swal.fire('','Image should be 200 x 200 size.','error');\r\n          variable.value = null;\r\n        } else {\r\n          this.form.patchValue({\r\n              quiz_icon: file\r\n            });\r\n          this.form.get('quiz_icon').updateValueAndValidity()\r\n          this.preview = reader.result as string;\r\n        }\r\n      }, 1000);\r\n    };\r\n  }\r\n}\r\n\r\nonSubmit(){\r\n  if(this.form.value.quiz_type==''){\r\n      Swal.fire('','Please select quiz type.','error');\r\n      return;\r\n  }\r\n  if(this.form.value.quiz_type=='1'){ // 1 => Curriculum Exam\r\n    this.isCompt=false;\r\n     if(this.form.value.upload_type=='single'){\r\n       this.router.navigate(['/study-exam/curriculum-single']);\r\n     }else{\r\n       this.router.navigate(['/study-exam/curriculum-bulk']);\r\n     }\r\n  }\r\n  if(this.form.value.quiz_type=='2'){ // 2 => Competitive Exam\r\n\r\n  this.submitted = true;\r\n  if (this.form.invalid) {\r\n      return;\r\n  }\r\n  /* if(this.form.value.quiz_icon==null){\r\n      Swal.fire('','Please upload quiz icon.','error');\r\n      return;\r\n  } */\r\n    this.isCompt=true; \r\n\r\n    /* Add image start*/\r\n    var saveDataArr:any=[];\r\n    saveDataArr = this.form.value;\r\n    console.log(saveDataArr);\r\n   \r\n    saveDataArr['isFile']= this.isFile;\r\n    console.log(saveDataArr);\r\n    if(this.quiz_temp_id)  \r\n    {\r\n      saveDataArr['quiz_temp_id']= this.quiz_temp_id;\r\n      this.getUpdateDraftQuiz(this.quiz_temp_id, saveDataArr);\r\n\r\n      return;\r\n    }\r\n\r\n    this.competitiveSingleService.saveQuizImageNew(saveDataArr).subscribe(\r\n      (data) => { \r\n          if(data['status']==200){\r\n             this.quiz_icon_str = data['quiz_icon'];\r\n                 this.submitted = true;\r\n                  if (this.form.invalid) {\r\n                      return;\r\n                  }\r\n\r\n                  //////save in temp/////\r\n                  this.submitted = true;\r\n                  this.loading = true;\r\n                  // Check quiz icon is upload return blank \r\n                  if(this.quiz_icon_str == \"\"){\r\n                    this.quiz_icon_str = \"default/default_quiz_icon.png\";\r\n                  }\r\n                  this.form.value.created_by=this.created_by; \r\n                  this.found = this.form.value;\r\n                  this.found['quiz_icon_url'] = this.quiz_icon_str;\r\n                  //console.log(this.found);\r\n                  \r\n                  this.competitiveSingleService.saveQuizInTemp(this.found)\r\n                  .subscribe(\r\n                  data => {\r\n                      if(data['status']==200){                \r\n                        if(this.form.value.upload_type=='single'){\r\n                          var signal_url = '/study-exam/competitive-single/'+btoa(data['temp_quiz_id']);\r\n                          this.router.navigate([signal_url]);\r\n                        }else{\r\n                          var bulk_url = '/study-exam/competitive-bulk/'+btoa(data['temp_quiz_id']);\r\n\r\n                          this.router.navigate([bulk_url]);\r\n                        }\r\n                      }\r\n                      else\r\n                      {\r\n                        this.router.navigate(['/study-exam/create']);\r\n                        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      }\r\n                      this.loading = false;\r\n                  },\r\n                  error => {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      this.loading = false;\r\n                      this.router.navigate(['/study-exam/create']);\r\n                  });\r\n              // }else{\r\n                 \r\n              //    this.found = this.form.value;\r\n              //    //this.found['fileData'] = this.fileData;\r\n              //    this.found['quiz_icon_url'] = this.quiz_icon_str;\r\n              //    //console.log('this.found '+JSON.stringify(this.found));\r\n              //    this.questionService.insertData(this.found);\r\n              //    this.found = [];\r\n              //    this.router.navigate(['/study-exam/competitive-bulk']);\r\n              // }\r\n               //this.found = this.form.value;\r\n          }\r\n        },\r\n      (err) => console.log(err)\r\n    );\r\n    /* End here */\r\n     \r\n     \r\n  }\r\n  //console.log(this.form.value)\r\n}\r\n\r\ngetUpdateDraftQuiz(quiz_temp_id, formData){\r\n  console.log(formData);\r\n          console.log('---------->>>>>>>>')  \r\n          \r\n          this.competitiveSingleService.updateQuizImageNew(formData).subscribe(\r\n      (data) => { //console.log(data)\r\n          if(data['status']==200){\r\n             this.quiz_icon_str = data['quiz_icon'];\r\n            \r\n              //if(this.form.value.upload_type=='single'){\r\n                 //this.router.navigate(['/study-exam/competitive-single']);\r\n                 this.submitted = true;\r\n                  if (this.form.invalid) {\r\n                      return;\r\n                  }\r\n\r\n                  //////save in temp/////\r\n                  this.submitted = true;\r\n                  this.loading = true;\r\n\r\n                  this.form.value.created_by=this.created_by; \r\n                  this.found = this.form.value;\r\n                  this.found['quiz_icon_url'] = this.quiz_icon_str;\r\n                  // console.log(this.found);\r\n\r\n                  this.competitiveSingleService.updateQuizInTemp(this.found, quiz_temp_id)\r\n                  .subscribe(\r\n                  data => {\r\n                      if(data['status']==200){                \r\n                        if(this.form.value.upload_type=='single'){\r\n                          var signal_url = '/study-exam/competitive-single/'+quiz_temp_id;\r\n                          this.router.navigate([signal_url]);\r\n                        }else{\r\n                          var bulk_url = '/study-exam/competitive-bulk/'+quiz_temp_id;\r\n\r\n                          this.router.navigate([bulk_url]);\r\n                        }\r\n                      }\r\n                      else\r\n                      {\r\n                        this.router.navigate(['/study-exam/create']);\r\n                        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      }\r\n                      this.loading = false;\r\n                  },\r\n                  error => {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      this.loading = false;\r\n                      this.router.navigate(['/study-exam/create']);\r\n                  });\r\n          }\r\n        },\r\n      (err) => console.log(err)\r\n    );\r\n}\r\n\r\nexamType(){\r\n  if(this.form.value.quiz_type=='2'){\r\n    this.isCompt=true;\r\n  }\r\n  else{\r\n    this.isCompt=false;\r\n\r\n  }\r\n}\r\n\r\n  //image cropping\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n  \r\n    fileChangeEvent(event: any): void {\r\n    \r\n      if (event.target.files && event.target.files.length > 0) {\r\n        let file = event.target.files[0];\r\n        let img = new Image();\r\n        var name = event.target.files[0].name;\r\n        var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n        if (ext.toLowerCase() != 'jpeg' && ext.toLowerCase() != 'jpg' && ext.toLowerCase() != 'png')\r\n          { \r\n            Swal.fire('','File type should be jpeg, jpg or png format','error');\r\n            return;\r\n          }\r\n          else\r\n          {\r\n            this.imageChangedEvent = event;\r\n            this.showModal = true;\r\n            this.isFile =true;\r\n          }\r\n      }\r\n        \r\n    }\r\n    imageCropped(event: ImageCroppedEvent) {\r\n        this.croppedImage = event.base64;\r\n       \r\n        this.form.patchValue({\r\n          quiz_icon: this.croppedImage\r\n        });\r\n\r\n    }\r\n    imageLoaded() {\r\n        /* show cropper */\r\n    }\r\n    cropperReady() {\r\n        /* cropper ready */\r\n    }\r\n    loadImageFailed() {\r\n        /* show message */\r\n        Swal.fire('','Please upload image only','error');\r\n    }\r\n\r\n closePopup(){\r\n    this.showModal = false;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}