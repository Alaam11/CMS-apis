{"version":3,"sources":["./src/app/pages/auth/forgot/reset/reset.component.html","./src/app/pages/auth/forgot/reset/reset-routing.module.ts","./src/app/pages/auth/forgot/reset/reset.component.scss","./src/app/pages/auth/forgot/reset/reset.component.ts","./src/app/pages/auth/forgot/reset/reset.module.ts"],"names":[],"mappings":"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","file":"forgot-reset-reset-module.js","sourcesContent":["export default \"<section class=\\\"login p-fixed d-flex text-center bg-primary1 common-img-bg1\\\">\\r\\n  <!-- starts -->\\r\\n  <div class=\\\"auth-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n     <!--  <div class=\\\"col-sm-12\\\"> -->\\r\\n        <!-- Authentication card start -->\\r\\n        <div class=\\\"login-card card-body auth-body\\\">\\r\\n          <form class=\\\"md-float-material\\\" [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            \\r\\n            <div class=\\\"auth-box\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12 text-center\\\">\\r\\n                  <img src=\\\"assets/images/auth/allam.png\\\" alt=\\\"Allam\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <h3 class=\\\"text-center txt-primary\\\">Reset your password</h3>\\r\\n                   <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\r\\n                    <div *ngIf=\\\"success\\\" class=\\\"alert alert-success mt-3 mb-0\\\">{{success}}</div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr class=\\\" m-b-30\\\">\\r\\n              \\r\\n              <div *ngIf=\\\"formFlag==true\\\">\\r\\n                <div class=\\\"row\\\" >\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                        <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                          <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"New password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\r\\n                          <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.password.errors.required\\\">This field is required.</div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"conf_password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.conf_password.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && f.conf_password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.conf_password.errors.required\\\">This field is required.</div>\\r\\n                            <div *ngIf=\\\"f.conf_password.errors.confirmedValidator\\\">Password and Confirm Password must be match.</div>\\r\\n                        </div>\\r\\n                       \\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row m-t-20\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green btn-md btn-block waves-effect text-center text-white m-b-2\\\">\\r\\n                      <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                      SUBMIT\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <hr/>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <p class=\\\"text-inverse text-center m-b-0\\\">Already have an account?\\r\\n\\r\\n                   <a [routerLink]=\\\"['/authentication/login']\\\" class=\\\"text-right f-w-600 text-warning\\\"> Login</a>\\r\\n\\r\\n                  </p>\\r\\n                  \\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n          <!-- end of form -->\\r\\n        </div>\\r\\n        <!-- Authentication card end -->\\r\\n   <!--    </div> -->\\r\\n      <!-- end of col-sm-12 -->\\r\\n    </div>\\r\\n    <!-- end of row -->\\r\\n  </div>\\r\\n  <!-- end of -->\\r\\n</section>\"","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ResetComponent} from './reset.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResetComponent,\r\n    data: {\r\n      title: 'Thank You'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ResetRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvZm9yZ290L3Jlc2V0L3Jlc2V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService,UserService } from '../../../../services';\r\n\r\nimport { ConfirmedValidator } from '../../../../confirmed.validator';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.scss']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n  \r\n  resetForm: FormGroup;\r\n  loading   = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  success='';\r\n  resetUser: any = {};\r\n  formFlag=true;\r\n\r\n  message_title:string;\r\n  message_body:string;\r\n  id:string;\r\n  constructor(private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private activeAouter: ActivatedRoute,\r\n        private userService:UserService) { }\r\n\r\n  ngOnInit() \r\n  {\r\n  \tthis.id = this.activeAouter.snapshot.params['userId'];\r\n  \tthis.id = atob(this.id); //decode base64\r\n  \t//this.reset(this.id);\r\n  \t\r\n\r\n      this.resetForm = this.formBuilder.group({\r\n            password: ['', Validators.required],\r\n            conf_password: ['', Validators.required],\r\n        }, { \r\n      validator: ConfirmedValidator('password', 'conf_password')\r\n    });\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n  }\r\n\r\n  get f() { return this.resetForm.controls; }\r\n\r\n  onSubmit() {\r\n        this.submitted = true;\r\n        if (this.resetForm.invalid) {\r\n            return;\r\n        }\r\n \r\n        this.loading = true;\r\n        this.resetUser.password  = this.resetForm.value.password;\r\n        this.resetUser.id=this.id;\r\n       \r\n        this.userService.resetPassword(this.resetUser)\r\n            .subscribe(\r\n                data => {\r\n                    if(data['status'])\r\n                    {\r\n                        this.success = data['msg'];\r\n                        this.error='';\r\n                        this.loading = false; \r\n                        this.formFlag=false;\r\n                    }\r\n                    else\r\n                    {\r\n                        this.error = data['msg'];\r\n                        this.loading = false;\r\n                        this.formFlag=false;\r\n                    }\r\n                    \r\n                },\r\n                error => {\r\n                    this.error = \"Something went wrong. Try again later.\";\r\n                    this.loading = false;\r\n                });\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResetComponent } from './reset.component';\r\nimport {ResetRoutingModule} from './reset-routing.module';\r\nimport {SharedModule} from '../../../../shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ResetRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ResetComponent]\r\n})\r\nexport class ResetModule { }\r\n"],"sourceRoot":"webpack:///"}