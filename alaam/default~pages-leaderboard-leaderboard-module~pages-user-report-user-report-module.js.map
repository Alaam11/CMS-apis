{"version":3,"sources":["./src/app/pipes/custom.pipe.ts","./src/app/pipes/format-title.pipe.ts","./src/app/pipes/format.ts","./src/app/pipes/orderBy.ts","./src/app/pipes/orderby.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/pipes/sanitize-url.pipe.ts","./src/app/services/leaderboard.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAkD;AAKlD;IAAA;IAoBA,CAAC;IAnBC,8BAAS,GAAT,UAAU,KAAU,EAAE,MAAW,EAAE,KAAU;QAC3C,IAAI,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAClC,IAAI,YAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,KAAK,EAAE;gBACT,OAAO,KAAK,CAAC,MAAM,CAAC,cAAI;oBACpB,mBAAU,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,OAAO;wBAC5B,QAAC,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE;oBAAzF,CAAyF,EAAE,IAAI,CAAC;gBADpG,CACoG,CAAC,CAAC;aAC3G;iBAAM;gBACL,OAAO,KAAK,CAAC,MAAM,CAAC,cAAI;oBACtB,OAAO,YAAU,CAAC,IAAI,CAAC,UAAC,OAAO;wBAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;oBACzF,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;SACF;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAnBU,UAAU;QAHtB,0DAAI,CAAC;YACF,IAAI,EAAE,SAAS;SAClB,CAAC;OACW,UAAU,CAoBtB;IAAD,iBAAC;CAAA;AApBsB;;;;;;;;;;;;;;;;;;ACL6B;AAKpD;IAAA;IAQA,CAAC;IAPC,mCAAS,GAAT,UAAU,KAAa;QACrB,IAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAChD,IAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACjC,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEnC,OAAO,WAAW,CAAC;IACrB,CAAC;IAPU,eAAe;QAH3B,0DAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,eAAe,CAQ3B;IAAD,sBAAC;CAAA;AAR2B;;;;;;;;;;;;;;;;;;ACLsB;AAMlD;IAAA;IAyCA,CAAC;IAvCC,sCAAsC;IACtC,+CAA+C;IAE/C,0BAAS,GAAT,UAAU,KAAY,EAAE,IAAQ;QAC9B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACtC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;QAED,QAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE;YAChC,KAAK,MAAM;gBACT,OAAO,KAAK,CAAC;YACf;;;;;;;;6EAQiE;YACjE;;;;;;;;;;;6DAWiD;YACjD;gBACE,OAAO,KAAK,CAAC;SAChB;IACH,CAAC;IAxCU,MAAM;QAHlB,0DAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;OACW,MAAM,CAyClB;IAAD,aAAC;CAAA;AAzCkB;;;;;;;;;;;;;ACNnB;AAAA;AAAA;AAAA;AAAA;;;;;GAKG;;AAE+C;AAGlD;IADA;QAGC,UAAK,GAAW,EAAE,CAAC;IAsEpB,CAAC;gBAxEY,OAAO;IAIZ,0BAAkB,GAAzB,UAA0B,CAAK,EAAE,CAAK;QAE/B,IAAG,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,WAAW;YAAE,CAAC,GAAG,CAAC,CAAC;QACjD,IAAG,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,WAAW;YAAE,CAAC,GAAG,CAAC,CAAC;QAEvD,IAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC;YACnF,4DAA4D;YAC5D,IAAG,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE;gBAAE,OAAO,CAAC,CAAC,CAAC;YAChD,IAAG,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE;gBAAE,OAAO,CAAC,CAAC;SAC/C;aACG;YACH,8CAA8C;YAC9C,IAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;gBAAE,OAAO,CAAC,CAAC,CAAC;YAC5C,IAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;gBAAE,OAAO,CAAC,CAAC;SAC3C;QAED,OAAO,CAAC,CAAC,CAAC,kBAAkB;IAC7B,CAAC;IAEE,2BAAS,GAAT,UAAU,KAAS,EAAE,MAAmB;QAAnB,qCAAmB;QAEvC,sCAAsC;QACtC,IAAI,CAAC,KAAK,GAAG,+CAAI,KAAK,CAAC,CAAC;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEpB,IAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAEvC,IAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,EAAC;YACvE,IAAI,eAAe,GAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACzE,IAAI,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC;YAE/C,aAAa;YACb,IAAG,CAAC,eAAe,IAAI,eAAe,IAAI,GAAG,IAAI,eAAe,IAAI,GAAG,EAAC;gBACpE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;aACxD;iBACI;gBACD,IAAI,QAAQ,GAAU,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG;oBAC5F,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC3B,CAAC,CAAC,eAAe,CAAC;gBAEtB,OAAO,KAAK,CAAC,IAAI,CAAC,UAAS,CAAK,EAAC,CAAK;oBAClC,OAAO,CAAC,IAAI;wBACR,CAAC,CAAC,SAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACtD,CAAC,CAAC,CAAC,SAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChE,CAAC,CAAC,CAAC;aACN;SACJ;aACI;YACD,mDAAmD;YACnD,OAAO,KAAK,CAAC,IAAI,CAAC,UAAS,CAAK,EAAC,CAAK;gBAClC,KAAI,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;oBACzC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC;oBACzC,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG;wBACzE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACrB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAEhB,IAAI,UAAU,GAAG,CAAC,IAAI;wBAClB,CAAC,CAAC,SAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;wBACtD,CAAC,CAAC,CAAC,SAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAE5D,gEAAgE;oBAChE,IAAG,UAAU,IAAI,CAAC;wBAAE,OAAO,UAAU,CAAC;iBACzC;gBAED,OAAO,CAAC,CAAC,CAAC,kBAAkB;YAChC,CAAC,CAAC,CAAC;SACN;IACL,CAAC;;IAvEQ,OAAO;QADnB,0DAAI,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC;OACzB,OAAO,CAwEnB;IAAD,cAAC;CAAA;AAxEmB;;;;;;;;;;;;;;;;;;ACV8B;AAGlD;IAAA;IAgBA,CAAC;IAdC,gCAAS,GAAT,UAAU,OAAmB,EAAE,IAAU;QAEvC,OAAO,OAAO,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;YAC3B,IAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;gBACrC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;aAC5B;iBACI,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;gBAC3C,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;aAC3B;iBACG;gBACF,OAAO,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IAfO,YAAY;QADxB,0DAAI,CAAC,EAAG,IAAI,EAAE,SAAS,EAAE,CAAC;OACd,YAAY,CAgBxB;IAAD,mBAAC;CAAA;AAhBwB;;;;;;;;;;;;;;;;;;;;;;;;ACHgB;AACK;AACQ;AACpB;AACE;AACO;AACY;AAOvD;IAAA;IAA0B,CAAC;IAAd,WAAW;QALvB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,0DAAY,EAAE,kEAAe,EAAE,8CAAM,EAAE,gDAAO,EAAC,uDAAU,EAAE,mEAAgB,CAAC;YAC3F,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,CAAC,0DAAY,EAAE,kEAAe,EAAE,8CAAM,EAAE,gDAAO,EAAC,uDAAU,EAAE,mEAAgB,CAAC;SACvF,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;ACb0B;AACgC;AAIhF;IAEE,0BACU,QAAsB;QAAtB,aAAQ,GAAR,QAAQ,CAAc;IAC7B,CAAC;IAEJ,oCAAS,GAAT,UAAU,KAAa;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;;gBALmB,sEAAY;;IAHrB,gBAAgB;QAH9B,0DAAI,CAAC;YACF,IAAI,EAAE,cAAc;SACrB,CAAC;+EAIoB,sEAAY;OAHrB,gBAAgB,CAS5B;IAAD,uBAAC;CAAA;AAT4B;;;;;;;;;;;;;;;;;;;;;;ACLY;AACe;AACwC;AAEtC;AAE7B;AAC/B,4CAA4C;AAE5C,yDAAyD;AAEzD,IAAM,MAAM,GAAE,qEAAW,CAAC,MAAM,CAAC;AAQjC;IAEE,4BAAoB,IAAgB,EAAU,MAAc,EAAW,KAAqB;QAAxE,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAW,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAEjG,mCAAM,GAAN;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,MAAM,GAAC,cAAc,CAAC,CAAC;IACrD,CAAC;IACD,+CAAkB,GAAlB,UAAmB,OAAO;QACxB,sBAAsB;QACtB,IAAM,IAAI,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC,eAAe,CAAC;aAEhD,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,0CAA0C,EAAE,IAAI,CAAC,QAAQ,EAAE,EACxF;YACE,OAAO,EAAE,IAAI,gEAAW,EAAE;iBACvB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC;SAC5D,CAAC,CAAC;IAEN,CAAC;IACD,2CAAc,GAAd,UAAgB,cAAc;QAC5B,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;QAC9C,IAAM,IAAI,GAAG,IAAI,+DAAU,EAAE;aAC5B,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC,aAAa,CAAC;aACnD,GAAG,CAAC,kBAAkB,EAAE,cAAc,CAAC,eAAe,CAAC;aACvD,GAAG,CAAC,aAAa,EAAE,cAAc,CAAC,WAAW,CAAC;aAC9C,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC,YAAY,CAAC;aAChD,GAAG,CAAC,WAAW,EAAE,cAAc,CAAC,IAAI,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,yBAAyB,EAAE,IAAI,CAAC,QAAQ,EAAE,EACvE;YACE,OAAO,EAAE,IAAI,gEAAW,EAAE;iBACvB,GAAG,CAAC,cAAc,EAAE,mCAAmC,CAAC;SAC5D,CAAC,CAAC;IAEN,CAAC;;gBAhCyB,+DAAU;gBAAkB,sDAAM;gBAAkB,8DAAc;;IAFjF,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU,EAAkB,sDAAM,EAAkB,8DAAc;OAFjF,kBAAkB,CAmC9B;IAAD,yBAAC;CAAA;AAnC8B","file":"default~pages-leaderboard-leaderboard-module~pages-user-report-user-report-module.js","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cFilter'\r\n})\r\nexport class CustomPipe implements PipeTransform {\r\n  transform(items: any, filter: any, isAnd: any): any {\r\n    if (filter && Array.isArray(items)) {\r\n      let filterKeys = Object.keys(filter);\r\n      if (isAnd) {\r\n        return items.filter(item =>\r\n            filterKeys.reduce((memo, keyName) =>\r\n                (memo && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] === \"\", true));\r\n      } else {\r\n        return items.filter(item => {\r\n          return filterKeys.some((keyName) => {\r\n            console.log(keyName);\r\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] === \"\";\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      return items;\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'formatTitle'\r\n})\r\nexport class FormatTitlePipe implements PipeTransform {\r\n  transform(title: string): string {\r\n    const result = title.replace(/([A-Z])/g, ' $1');\r\n    const finalResult = result.charAt(0)\r\n      .toUpperCase() + result.slice(1);\r\n\r\n    return finalResult;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport { DatePipe, DecimalPipe } from '@angular/common';\r\n\r\n@Pipe({\r\n  name: 'format'\r\n})\r\nexport class Format implements PipeTransform  {\r\n  \r\n  //datePipe: DatePipe = new DatePipe();\r\n  //decimalPipe: DecimalPipe = new DecimalPipe();\r\n  \r\n  transform(input:string, args:any): any {\r\n    var format = '';\r\n    var parsedFloat = 0;\r\n    var pipeArgs = args.split(':');\r\n    for(var i = 0; i < pipeArgs.length; i++){\r\n      pipeArgs[i] = pipeArgs[i].trim(' ');\r\n    }\r\n    \r\n    switch(pipeArgs[0].toLowerCase()) {\r\n      case 'text':\r\n        return input;\r\n      /*case 'decimal':\r\n      case 'number':\r\n        parsedFloat = !isNaN(parseFloat(input)) ? parseFloat(input) : 0;\r\n        format = pipeArgs.length > 1 ? pipeArgs[1] : null;\r\n        return this.decimalPipe.transform(parsedFloat, format);\r\n      case 'percentage':\r\n        parsedFloat = !isNaN(parseFloat(input)) ? parseFloat(input) : 0;\r\n        format = pipeArgs.length > 1 ? pipeArgs[1] : null;\r\n        return this.decimalPipe.transform(parsedFloat, format) + '%';*/\r\n      /*case 'date':\r\n      case 'datetime':\r\n        var date = !isNaN(parseInt(input)) ? parseInt(input) : new Date(input);\r\n        format = 'MMM d, y h:mm:ss a';\r\n        if(pipeArgs.length > 1)\r\n        {\r\n            format = '';\r\n            for(var i = 1; i < pipeArgs.length; i++){\r\n                format += pipeArgs[i];\r\n            }\r\n        }\r\n        return this.datePipe.transform(date, format);*/\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n}","/*\r\n * Example use\r\n *\t\tBasic Array of single type: *ngFor=\"let todo of todoService.todos | orderBy : '-'\"\r\n *\t\tMultidimensional Array Sort on single column: *ngFor=\"let todo of todoService.todos | orderBy : ['-status']\"\r\n *\t\tMultidimensional Array Sort on multiple columns: *ngFor=\"let todo of todoService.todos | orderBy : ['status', '-title']\"\r\n */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'orderByy', pure: false})\r\nexport class OrderBy implements PipeTransform {\r\n\r\n\tvalue:string[] =[];\r\n\r\n\tstatic _orderByComparator(a:any, b:any):number{\r\n        \r\n        if(a === null || typeof a === 'undefined') a = 0;\r\n        if(b === null || typeof b === 'undefined') b = 0;\r\n\r\n\t\tif((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))){\r\n\t\t\t//Isn't a number so lowercase the string to properly compare\r\n\t\t\tif(a.toLowerCase() < b.toLowerCase()) return -1;\r\n\t\t\tif(a.toLowerCase() > b.toLowerCase()) return 1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\t//Parse strings as numbers to compare properly\r\n\t\t\tif(parseFloat(a) < parseFloat(b)) return -1;\r\n\t\t\tif(parseFloat(a) > parseFloat(b)) return 1;\r\n\t\t}\r\n\r\n\t\treturn 0; //equal each other\r\n\t}\r\n\r\n    transform(input:any, config:string = '+'): any{\r\n\r\n    \t//make a copy of the input's reference\r\n    \tthis.value = [...input];\r\n    \tvar value = this.value;\r\n        \r\n        if(!Array.isArray(value)) return value;\r\n\r\n        if(!Array.isArray(config) || (Array.isArray(config) && config.length == 1)){\r\n            var propertyToCheck:string = !Array.isArray(config) ? config : config[0];\r\n            var desc = propertyToCheck.substr(0, 1) == '-';\r\n            \r\n            //Basic array\r\n            if(!propertyToCheck || propertyToCheck == '-' || propertyToCheck == '+'){\r\n                return !desc ? value.sort() : value.sort().reverse();\r\n            }\r\n            else {\r\n                var property:string = propertyToCheck.substr(0, 1) == '+' || propertyToCheck.substr(0, 1) == '-'\r\n                    ? propertyToCheck.substr(1)\r\n                    : propertyToCheck;\r\n\r\n                return value.sort(function(a:any,b:any){\r\n                    return !desc \r\n                        ? OrderBy._orderByComparator(a[property], b[property]) \r\n                        : -OrderBy._orderByComparator(a[property], b[property]);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            //Loop over property of the array in order and sort\r\n            return value.sort(function(a:any,b:any){\r\n                for(var i:number = 0; i < config.length; i++){\r\n                    var desc = config[i].substr(0, 1) == '-';\r\n                    var property = config[i].substr(0, 1) == '+' || config[i].substr(0, 1) == '-'\r\n                        ? config[i].substr(1)\r\n                        : config[i];\r\n\r\n                    var comparison = !desc \r\n                        ? OrderBy._orderByComparator(a[property], b[property]) \r\n                        : -OrderBy._orderByComparator(a[property], b[property]);\r\n                    \r\n                    //Don't return 0 yet in case of needing to sort by next property\r\n                    if(comparison != 0) return comparison;\r\n                }\r\n\r\n                return 0; //equal each other\r\n            });\r\n        }\r\n    }\r\n}","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({  name: 'orderBy' })\r\nexport class OrderrByPipe implements PipeTransform {\r\n\r\n  transform(records: Array<any>, args?: any): any {\r\n    \r\n    return records.sort(function(a, b){\r\n          if(a[args.property] < b[args.property]){\r\n            return -1 * args.direction;\r\n          }\r\n          else if( a[args.property] > b[args.property]){\r\n            return 1 * args.direction;\r\n          }\r\n          else{\r\n            return 0;\r\n          }\r\n        });\r\n    };\r\n}","import { NgModule } from '@angular/core';\r\nimport { OrderrByPipe } from \"./orderby.pipe\";\r\nimport { FormatTitlePipe } from \"./format-title.pipe\";\r\nimport { Format } from \"./format\";\r\nimport { OrderBy } from \"./orderBy\";\r\nimport { CustomPipe } from \"./custom.pipe\";\r\nimport { SanitizerUrlPipe } from \"./sanitize-url.pipe\";\r\n\r\n@NgModule({\r\n  declarations: [OrderrByPipe, FormatTitlePipe, Format, OrderBy,CustomPipe, SanitizerUrlPipe],\r\n  imports: [],\r\n  exports: [OrderrByPipe, FormatTitlePipe, Format, OrderBy,CustomPipe, SanitizerUrlPipe]\r\n})\r\nexport class PipesModule {}","import {Pipe, PipeTransform} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\r\n@Pipe({\r\n    name: 'sanitizerUrl'\r\n  })\r\n  export class SanitizerUrlPipe implements PipeTransform {\r\n  \r\n    constructor (\r\n      private sanitize: DomSanitizer\r\n    ) {}\r\n  \r\n    transform(value: string): SafeUrl {\r\n      return this.sanitize.bypassSecurityTrustUrl(value);\r\n    }\r\n  }","import { Injectable } from '@angular/core';\nimport { Router , ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpParams, HttpHeaders, HttpEvent, HttpRequest} from '@angular/common/http';\n\nimport { environment } from '../../environments/environment'\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport 'rxjs/add/operator/map';\n//import { Header } from '../models/header';\n\n//import { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst apiUrl =environment.apiUrl;\ninterface ComPostResponse {\n  data: any\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaderboardService {\n\n  constructor(private http: HttpClient, private router: Router,  private route: ActivatedRoute) { }\n\n  getAll() {\n    return this.http.get<any[]>(apiUrl+'competition/');\n  }\n  getCompetitionName(filters): Observable<any>{\n    //console.log(filters)\n    const body = new HttpParams()\n    .set('competition_type', filters.competitionType)\n    \n    .set('created_at', filters.created_at);\n     return this.http.post(apiUrl+'competition/leaderboard_competition_name', body.toString(),\n     {\n       headers: new HttpHeaders()\n         .set('Content-Type', 'application/x-www-form-urlencoded')\n     });\n\n  }\n  getLeaderboard( audienceFilter): Observable<any>{\n    console.log('audienceFilter', audienceFilter);\n    const body = new HttpParams()\n    .set('competition_id', audienceFilter.competitionId)\n    .set('competition_type', audienceFilter.competitionType)\n    .set('action_flag', audienceFilter.action_flag)\n    .set('action_value', audienceFilter.action_value)\n    .set('sort_type', audienceFilter.rank)\n     return this.http.post(apiUrl+'competition/leaderboard', body.toString(),\n     {\n       headers: new HttpHeaders()\n         .set('Content-Type', 'application/x-www-form-urlencoded')\n     });\n\n  }\n}\n"],"sourceRoot":"webpack:///"}