{"version":3,"sources":["./node_modules/html-to-image/es/applyStyleWithOptions.js","./node_modules/html-to-image/es/cloneNode.js","./node_modules/html-to-image/es/clonePseudoElements.js","./node_modules/html-to-image/es/createSvgDataURL.js","./node_modules/html-to-image/es/embedImages.js","./node_modules/html-to-image/es/embedResources.js","./node_modules/html-to-image/es/embedWebFonts.js","./node_modules/html-to-image/es/getBlobFromURL.js","./node_modules/html-to-image/es/index.js","./node_modules/html-to-image/es/util.js","./src/app/pages/auth/studyexam-downlad/studyexam-downlad.component.html","./src/app/pages/auth/studyexam-downlad/studyexam-downlad-routing.module.ts","./src/app/pages/auth/studyexam-downlad/studyexam-downlad.component.scss","./src/app/pages/auth/studyexam-downlad/studyexam-downlad.component.ts","./src/app/pages/auth/studyexam-downlad/studyexam-downlad.module.ts","./src/app/pipes/custom.pipe.ts","./src/app/pipes/format-title.pipe.ts","./src/app/pipes/format.ts","./src/app/pipes/orderBy.ts","./src/app/pipes/orderby.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/pipes/sanitize-url.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAO;AACP,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iD;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC4D;AACd;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yBAAyB,qDAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gFAAmB;AAC3C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qDAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qC;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAuC;AAChC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAI;AAC9B;AACA;AACA,sCAAsC,qBAAqB,GAAG,UAAU;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU,GAAG,OAAO;AACjD;AACA;AACA;AACA,0CAA0C,UAAU,EAAE,SAAS;AAC/D;AACA;AACA;AACA,kBAAkB,cAAc,YAAY,SAAS;AACrD;AACA;AACA,eAAe,qDAAO;AACtB;AACA;AACA;AACA,sBAAsB,KAAK,IAAI,MAAM,EAAE,+BAA+B;AACtE,SAAS;AACT;AACA;AACA,CAAC,wBAAwB;AACzB,+C;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAsC;AAC/B;AACP;AACA;AACA;AACA,uCAAuC,MAAM;AAC7C,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAAY;AACvB;AACA,4C;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACkD;AACA;AACkB;AAC7D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAAc;AAC/C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,qDAAqD,uDAAS;AAC9D;AACA;AACA;AACA,uBAAuB,sEAAc;AACrC,wBAAwB,uDAAS,OAAO,yDAAW;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,qDAAO;AAChC;AACA;AACA,KAAK;AACL;AACA,uC;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACS;AAC3D;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,uDAAS;AAC5C;AACO;AACP;AACA;AACA,yCAAyC,sEAAc;AACvD,wBAAwB,uDAAS,OAAO,yDAAW;AACnD,2EAA2E,QAAQ;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA,kCAAkC;AAClC;AACA,0C;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACiC;AAC8B;AACxD;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAO;AAC3B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sEAAc;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAO;AAC/B;AACA,yBAAyB;AACzB;AACA;AACA,0EAA0E,WAAW;AACrF;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,mEAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,YAAY,OAAO;AAC7E;AACA,aAAa,aAAa,MAAM,gBAAgB,aAAa,GAAG;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,cAAc;AACrF;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,yC;;;;;;;;;;;;AC3LA;AAAA;AAAA;AAAA;AAC2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,kBAAkB,uDAAiB;AACnC;AACA;AACA;AACA;AACA,+CAA+C,QAAQ,sCAAsC,IAAI;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,IAAI,YAAY,WAAW;AAC7F;AACA;AACA;AACA;AACA,4BAA4B,+DAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,0C;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AAC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","file":"studyexam-downlad-studyexam-downlad-module.js","sourcesContent":["export function applyStyleWithOptions(clonedNode, options) {\n    const { style } = clonedNode;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return clonedNode;\n}\n//# sourceMappingURL=applyStyleWithOptions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, toArray } from './util';\nfunction cloneSingleNode(node) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (node instanceof HTMLCanvasElement) {\n            const dataURL = node.toDataURL();\n            if (dataURL === 'data:,') {\n                return Promise.resolve(node.cloneNode(false));\n            }\n            return createImage(dataURL);\n        }\n        // if (node.tagName && node.tagName.toLowerCase() === 'svg') {\n        //   return Promise.resolve(node as SVGElement)\n        //     .then((svg) => svgToDataURL(svg))\n        //     .then(createImage)\n        // }\n        return Promise.resolve(node.cloneNode(false));\n    });\n}\nfunction cloneChildren(nativeNode, clonedNode, filter) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = toArray(nativeNode.childNodes);\n        if (children.length === 0) {\n            return Promise.resolve(clonedNode);\n        }\n        return children\n            .reduce((done, child) => done\n            .then(() => cloneNode(child, filter))\n            .then((clonedChild) => {\n            if (clonedChild) {\n                clonedNode.appendChild(clonedChild);\n            }\n        }), Promise.resolve())\n            .then(() => clonedNode);\n    });\n}\nfunction decorate(nativeNode, clonedNode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return clonedNode;\n        }\n        return Promise.resolve()\n            .then(() => cloneCssStyle(nativeNode, clonedNode))\n            .then(() => clonePseudoElements(nativeNode, clonedNode))\n            .then(() => cloneInputValue(nativeNode, clonedNode))\n            .then(() => clonedNode);\n    });\n}\nfunction cloneCssStyle(nativeNode, clonedNode) {\n    const source = window.getComputedStyle(nativeNode);\n    const target = clonedNode.style;\n    if (source.cssText) {\n        target.cssText = source.cssText;\n    }\n    else {\n        toArray(source).forEach((name) => {\n            target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLTextAreaElement) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (nativeNode instanceof HTMLInputElement) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nexport function cloneNode(nativeNode, filter, isRoot) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!isRoot && filter && !filter(nativeNode)) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(nativeNode)\n            .then(cloneSingleNode)\n            .then((clonedNode) => cloneChildren(nativeNode, clonedNode, filter))\n            .then((clonedNode) => decorate(nativeNode, clonedNode));\n    });\n}\n//# sourceMappingURL=cloneNode.js.map","import { uuid, toArray } from './util';\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    const pseudos = [':before', ':after'];\n    pseudos.forEach((pseudo) => Pseudo.clonePseudoElement(nativeNode, clonedNode, pseudo));\n}\nvar Pseudo;\n(function (Pseudo) {\n    function clonePseudoElement(nativeNode, clonedNode, pseudo) {\n        const style = window.getComputedStyle(nativeNode, pseudo);\n        const content = style.getPropertyValue('content');\n        if (content === '' || content === 'none') {\n            return;\n        }\n        const className = uuid();\n        // fix: Cannot assign to read only property 'className' of object '#<…\n        try {\n            clonedNode.className = `${clonedNode.className} ${className}`;\n        }\n        catch (err) {\n            return;\n        }\n        const styleElement = document.createElement('style');\n        styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n        clonedNode.appendChild(styleElement);\n    }\n    Pseudo.clonePseudoElement = clonePseudoElement;\n    function getPseudoElementStyle(className, pseudo, style) {\n        const selector = `.${className}:${pseudo}`;\n        const cssText = style.cssText\n            ? formatCssText(style)\n            : formatCssProperties(style);\n        return document.createTextNode(`${selector}{${cssText}}`);\n    }\n    function formatCssText(style) {\n        const content = style.getPropertyValue('content');\n        return `${style.cssText} content: ${content};`;\n    }\n    function formatCssProperties(style) {\n        return toArray(style)\n            .map((name) => {\n            const value = style.getPropertyValue(name);\n            const priority = style.getPropertyPriority(name);\n            return `${name}: ${value}${priority ? ' !important' : ''};`;\n        })\n            .join(' ');\n    }\n})(Pseudo || (Pseudo = {}));\n//# sourceMappingURL=clonePseudoElements.js.map","import { svgToDataURL } from './util';\nexport function createSvgDataURL(clonedNode, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttributeNS('', 'width', `${width}`);\n    svg.setAttributeNS('', 'height', `${height}`);\n    foreignObject.setAttributeNS('', 'width', '100%');\n    foreignObject.setAttributeNS('', 'height', '100%');\n    foreignObject.setAttributeNS('', 'x', '0');\n    foreignObject.setAttributeNS('', 'y', '0');\n    foreignObject.setAttributeNS('', 'externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(clonedNode);\n    return svgToDataURL(svg);\n}\n//# sourceMappingURL=createSvgDataURL.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { toArray, isDataUrl, toDataURL, getMimeType } from './util';\nexport function embedImages(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(clonedNode instanceof Element)) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(clonedNode)\n            .then((node) => embedBackground(node, options))\n            .then((node) => embedImageNode(node, options))\n            .then((node) => embedChildren(node, options));\n    });\n}\nfunction embedBackground(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const background = clonedNode.style.getPropertyValue('background');\n        if (!background) {\n            return Promise.resolve(clonedNode);\n        }\n        return Promise.resolve(background)\n            .then((cssString) => embedResources(cssString, null, options))\n            .then((cssString) => {\n            clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n            return clonedNode;\n        });\n    });\n}\nfunction embedImageNode(clonedNode, options) {\n    if (!(clonedNode instanceof HTMLImageElement) || isDataUrl(clonedNode.src)) {\n        return Promise.resolve(clonedNode);\n    }\n    return Promise.resolve(clonedNode.src)\n        .then((url) => getBlobFromURL(url, options))\n        .then((data) => toDataURL(data, getMimeType(clonedNode.src)))\n        .then((dataURL) => new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        clonedNode.src = dataURL;\n    }))\n        .then(() => clonedNode, () => clonedNode);\n}\nfunction embedChildren(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const children = toArray(clonedNode.childNodes);\n        const deferreds = children.map((child) => embedImages(child, options));\n        return Promise.all(deferreds).then(() => clonedNode);\n    });\n}\n//# sourceMappingURL=embedImages.js.map","import { getBlobFromURL } from './getBlobFromURL';\nimport { isDataUrl, toDataURL, getMimeType } from './util';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nexport function shouldEmbed(string) {\n    return string.search(URL_REGEX) !== -1;\n}\nexport function embedResources(cssString, baseUrl, options) {\n    if (!shouldEmbed(cssString)) {\n        return Promise.resolve(cssString);\n    }\n    return Promise.resolve(cssString)\n        .then(parseURLs)\n        .then((urls) => urls.reduce((done, url) => done.then((ret) => embed(ret, url, baseUrl, options)), Promise.resolve(cssString)));\n}\nexport function parseURLs(str) {\n    const result = [];\n    str.replace(URL_REGEX, (raw, quotation, url) => {\n        result.push(url);\n        return raw;\n    });\n    return result.filter((url) => !isDataUrl(url));\n}\nexport function embed(cssString, resourceURL, baseURL, options, get) {\n    const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n    return Promise.resolve(resolvedURL)\n        .then((url) => (get ? get(url) : getBlobFromURL(url, options)))\n        .then((data) => toDataURL(data, getMimeType(resourceURL)))\n        .then((dataURL) => cssString.replace(urlToRegex(resourceURL), `$1${dataURL}$3`))\n        .then((content) => content, () => resolvedURL);\n}\nfunction resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nfunction urlToRegex(url) {\n    return new RegExp(`(url\\\\(['\"]?)(${escape(url)})(['\"]?\\\\))`, 'g');\n}\nfunction escape(url) {\n    return url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n}\n//# sourceMappingURL=embedResources.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toArray } from './util';\nimport { shouldEmbed, embedResources } from './embedResources';\nexport function parseWebFontRules(clonedNode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            if (!clonedNode.ownerDocument) {\n                reject(new Error('Provided element is not within a Document'));\n            }\n            resolve(toArray(clonedNode.ownerDocument.styleSheets));\n        })\n            .then(getCssRules)\n            .then(getWebFontRules);\n    });\n}\nexport function embedWebFonts(clonedNode, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return parseWebFontRules(clonedNode)\n            .then((rules) => Promise.all(rules.map((rule) => {\n            const baseUrl = rule.parentStyleSheet\n                ? rule.parentStyleSheet.href\n                : null;\n            return embedResources(rule.cssText, baseUrl, options);\n        })))\n            .then((cssStrings) => cssStrings.join('\\n'))\n            .then((cssString) => {\n            const styleNode = document.createElement('style');\n            const sytleContent = document.createTextNode(cssString);\n            styleNode.appendChild(sytleContent);\n            if (clonedNode.firstChild) {\n                clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n            }\n            else {\n                clonedNode.appendChild(styleNode);\n            }\n            return clonedNode;\n        });\n    });\n}\nexport function getCssRules(styleSheets) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ret = [];\n        const promises = [];\n        // First loop inlines imports\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules).forEach((item) => {\n                        if (item.type === CSSRule.IMPORT_RULE) {\n                            promises.push(fetchCSS(item.href, sheet)\n                                .then(embedFonts)\n                                .then((cssText) => {\n                                const parsed = parseCSS(cssText);\n                                parsed.forEach((rule) => {\n                                    sheet.insertRule(rule, sheet.cssRules.length);\n                                });\n                            })\n                                .catch((e) => {\n                                console.log('Error loading remote css', e.toString());\n                            }));\n                        }\n                    });\n                }\n                catch (e) {\n                    const inline = styleSheets.find((a) => a.href === null) || document.styleSheets[0];\n                    if (sheet.href != null) {\n                        promises.push(fetchCSS(sheet.href, inline)\n                            .then(embedFonts)\n                            .then((cssText) => {\n                            const parsed = parseCSS(cssText);\n                            parsed.forEach((rule) => {\n                                inline.insertRule(rule, sheet.cssRules.length);\n                            });\n                        })\n                            .catch((e) => {\n                            console.log('Error loading remote stylesheet', e.toString());\n                        }));\n                    }\n                    console.log('Error inlining remote css file', e.toString());\n                }\n            }\n        });\n        return Promise.all(promises).then(() => {\n            // Second loop parses rules\n            styleSheets.forEach((sheet) => {\n                if ('cssRules' in sheet) {\n                    try {\n                        toArray(sheet.cssRules).forEach((item) => {\n                            ret.push(item);\n                        });\n                    }\n                    catch (e) {\n                        console.log(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n                    }\n                }\n            });\n            return ret;\n        });\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nfunction parseCSS(source) {\n    if (source === undefined) {\n        return [];\n    }\n    let cssText = source;\n    const css = [];\n    const cssKeyframeRegex = '((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})';\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})'; // to match css & media queries together\n    const cssCommentsRegex = new RegExp('(\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)', 'gi');\n    // strip out comments\n    cssText = cssText.replace(cssCommentsRegex, '');\n    const keyframesRegex = new RegExp(cssKeyframeRegex, 'gi');\n    let arr;\n    while (true) {\n        arr = keyframesRegex.exec(cssText);\n        if (arr === null) {\n            break;\n        }\n        css.push(arr[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    // unified regex\n    const unified = new RegExp(combinedCSSRegex, 'gi');\n    while (true) {\n        arr = unified.exec(cssText);\n        if (arr === null) {\n            break;\n        }\n        css.push(arr[0]);\n    }\n    return css;\n}\nfunction fetchCSS(url, sheet) {\n    return fetch(url).then((res) => {\n        return {\n            url,\n            cssText: res.text(),\n        };\n    }, (e) => {\n        console.log('ERROR FETCHING CSS: ', e.toString());\n    });\n}\nfunction embedFonts(data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return data.cssText.then((resolved) => {\n            let cssText = resolved;\n            const regexUrlFind = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n            const fontLocations = cssText.match(/url\\([^)]+\\)/g) || [];\n            const fontLoadedPromises = fontLocations.map((location) => {\n                let url = location.replace(regexUrlFind, '$1');\n                if (!url.startsWith('https://')) {\n                    const source = data.url;\n                    url = new URL(url, source).href;\n                }\n                return new Promise((resolve, reject) => {\n                    fetch(url)\n                        .then((res) => res.blob())\n                        .then((blob) => {\n                        const reader = new FileReader();\n                        reader.addEventListener('load', (res) => {\n                            // Side Effect\n                            cssText = cssText.replace(location, `url(${reader.result})`);\n                            resolve([location, reader.result]);\n                        });\n                        reader.readAsDataURL(blob);\n                    })\n                        .catch(reject);\n                });\n            });\n            return Promise.all(fontLoadedPromises).then(() => cssText);\n        });\n    });\n}\n//# sourceMappingURL=embedWebFonts.js.map","/* tslint:disable:max-line-length */\nimport { getDataURLContent } from './util';\n// KNOWN ISSUE\n// -----------\n// Can not handle redirect-url, such as when access 'http://something.com/avatar.png'\n// will redirect to 'http://something.com/65fc2ffcc8aea7ba65a1d1feda173540'\nconst TIMEOUT = 30000;\nconst cache = [];\nexport function getBlobFromURL(url, options) {\n    const root = url.split('?')[0];\n    const found = cache.find((item) => item.url === root);\n    if (found) {\n        return found.promise;\n    }\n    // cache bypass so we dont have CORS issues with cached images\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // tslint:disable-next-line\n        url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n    }\n    const failed = (reason) => {\n        let placeholder = '';\n        if (options.imagePlaceholder) {\n            const parts = options.imagePlaceholder.split(/,/);\n            if (parts && parts[1]) {\n                placeholder = parts[1];\n            }\n        }\n        let msg = `Failed to fetch resource: ${url}`;\n        if (reason) {\n            msg = typeof reason === 'string' ? reason : reason.message;\n        }\n        if (msg) {\n            console.error(msg);\n        }\n        return placeholder;\n    };\n    const deferred = window.fetch\n        ? window\n            .fetch(url)\n            .then((response) => response.blob())\n            .then((blob) => new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onloadend = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(blob);\n        }))\n            .then(getDataURLContent)\n            .catch(() => new Promise((resolve, reject) => reject()))\n        : new Promise((resolve, reject) => {\n            const req = new XMLHttpRequest();\n            const timeout = () => {\n                reject(new Error(`Timeout of ${TIMEOUT}ms occured while fetching resource: ${url}`));\n            };\n            const done = () => {\n                if (req.readyState !== 4) {\n                    return;\n                }\n                if (req.status !== 200) {\n                    reject(new Error(`Failed to fetch resource: ${url}, status: ${req.status}`));\n                    return;\n                }\n                const encoder = new FileReader();\n                encoder.onloadend = () => {\n                    resolve(getDataURLContent(encoder.result));\n                };\n                encoder.readAsDataURL(req.response);\n            };\n            req.onreadystatechange = done;\n            req.ontimeout = timeout;\n            req.responseType = 'blob';\n            req.timeout = TIMEOUT;\n            req.open('GET', url, true);\n            req.send();\n        });\n    const promise = deferred.catch(failed);\n    cache.push({ promise, url: root });\n    return promise;\n}\n//# sourceMappingURL=getBlobFromURL.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { cloneNode } from './cloneNode';\nimport { embedImages } from './embedImages';\nimport { embedWebFonts } from './embedWebFonts';\nimport { createSvgDataURL } from './createSvgDataURL';\nimport { applyStyleWithOptions } from './applyStyleWithOptions';\nimport { delay, createImage, canvasToBlob, getNodeWidth, getNodeHeight, getPixelRatio, } from './util';\nfunction getImageSize(domNode, options = {}) {\n    const width = options.width || getNodeWidth(domNode);\n    const height = options.height || getNodeHeight(domNode);\n    return { width, height };\n}\nexport function toSvg(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(domNode, options);\n        return cloneNode(domNode, options.filter, true)\n            .then((clonedNode) => embedWebFonts(clonedNode, options))\n            .then((clonedNode) => embedImages(clonedNode, options))\n            .then((clonedNode) => applyStyleWithOptions(clonedNode, options))\n            .then((clonedNode) => createSvgDataURL(clonedNode, width, height));\n    });\n}\nexport const toSvgDataURL = toSvg;\nexport function toCanvas(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toSvg(domNode, options)\n            .then(createImage)\n            .then(delay(100))\n            .then((image) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const ratio = options.pixelRatio || getPixelRatio();\n            const { width, height } = getImageSize(domNode, options);\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = `${width}`;\n            canvas.style.height = `${height}`;\n            if (options.backgroundColor) {\n                context.fillStyle = options.backgroundColor;\n                context.fillRect(0, 0, canvas.width, canvas.height);\n            }\n            context.drawImage(image, 0, 0);\n            return canvas;\n        });\n    });\n}\nexport function toPixelData(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { width, height } = getImageSize(domNode, options);\n        return toCanvas(domNode, options).then((canvas) => {\n            const ctx = canvas.getContext('2d');\n            return ctx.getImageData(0, 0, width, height).data;\n        });\n    });\n}\nexport function toPng(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(domNode, options).then((canvas) => canvas.toDataURL());\n    });\n}\nexport function toJpeg(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(domNode, options).then((canvas) => canvas.toDataURL('image/jpeg', options.quality || 1));\n    });\n}\nexport function toBlob(domNode, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return toCanvas(domNode, options).then(canvasToBlob);\n    });\n}\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n};\nexport const uuid = (function uuid() {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const ext = getExtension(url).toLowerCase();\n    return mimes[ext] || '';\n}\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(args);\n        }, ms);\n    });\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function toDataURL(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport function getDataURLContent(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nfunction toBlob(canvas) {\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], { type: 'image/png' }));\n    });\n}\nexport function canvasToBlob(canvas) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => canvas.toBlob(resolve));\n    }\n    return toBlob(canvas);\n}\nexport function toArray(arrayLike) {\n    const result = [];\n    for (let i = 0, l = arrayLike.length; i < l; i += 1) {\n        result.push(arrayLike[i]);\n    }\n    return result;\n}\nfunction px(node, styleProperty) {\n    const val = window.getComputedStyle(node).getPropertyValue(styleProperty);\n    return parseFloat(val.replace('px', ''));\n}\nexport function getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.scrollWidth + leftBorder + rightBorder;\n}\nexport function getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.scrollHeight + topBorder + bottomBorder;\n}\nexport function getPixelRatio() {\n    let ratio;\n    const val = process && process.env ? process.env.devicePixelRatio : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.onload = () => resolve(image);\n        image.onerror = reject;\n        image.crossOrigin = 'anonymous';\n        image.src = url;\n    });\n}\nexport function svgToDataURL(svg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.resolve()\n            .then(() => new XMLSerializer().serializeToString(svg))\n            .then(encodeURIComponent)\n            .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n    });\n}\nexport function getBlobFromImageURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return createImage(url).then((image) => {\n            const { width, height } = image;\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const ratio = getPixelRatio();\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = `${width}`;\n            canvas.style.height = `${height}`;\n            context.scale(ratio, ratio);\n            context.drawImage(image, 0, 0);\n            const dataURL = canvas.toDataURL(getMimeType(url));\n            return getDataURLContent(dataURL);\n        });\n    });\n}\n//# sourceMappingURL=util.js.map","export default \"<div class=\\\"container-fluid download-studyexam\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 \\\">\\r\\n      <div class=\\\"print-btn\\\">\\r\\n        <button class=\\\"btn allam-btn btn-success\\\" onclick=\\\"window.print()\\\" title=\\\"Print\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-print\\\"></i> Print</button>\\r\\n      </div>\\r\\n      <div class=\\\"publish-table-wrap table-responsive\\\" id=\\\"\\\" *ngIf=\\\"mode==1 && parentmodule=='teacher'\\\"> \\r\\n        <table #container class=\\\"table table-striped table-bordered \\\" id=\\\"contentToConvert\\\" >\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Level</th>\\r\\n            <th>Answer</th>\\r\\n            <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n            <th>Question Type</th>\\r\\n            <th>Question </th>\\r\\n            <th>Duration </th>\\r\\n            <!-- <th>Group </th>     -->        \\r\\n          </tr>\\r\\n         </thead>\\r\\n          <tbody>\\r\\n            <tr class=\\\"even ng-star-inserted\\\" *ngFor=\\\"let question of questionArr\\\">\\r\\n                <td>{{ question.level }}</td>\\r\\n                <td>{{ question.answer }}</td>\\r\\n                <td [innerHTML]=\\\"question.option4 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option3 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option2 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option1 | safeHtml\\\"></td>\\r\\n                <td>{{ question.qui_type }}</td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"question.qui_type=='text'\\\" [innerHTML]=\\\"question.question | safeHtml\\\"></div>\\r\\n                \\r\\n                  <div *ngIf=\\\"question.qui_type=='image'\\\">\\r\\n                    <img src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                 </div>\\r\\n                 <div *ngIf=\\\"question.qui_type=='text_and_image'\\\">\\r\\n                  <img src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                  <br>{{question.question}}\\r\\n                 </div>\\r\\n                 </td>\\r\\n\\r\\n                <td class=\\\"\\\">{{ question.duration }}</td>\\r\\n               <!--  <td class=\\\"\\\">{{ question.groups }}</td> -->\\r\\n                \\r\\n            </tr>\\r\\n          </tbody>\\r\\n\\r\\n          </table>  \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"publish-table-wrap table-responsive\\\"  *ngIf=\\\"mode==2 && parentmodule=='teacher'\\\">\\r\\n        <table id=\\\"autofill\\\" class=\\\"table table-striped table-bordered table-sm dataTable no-footer\\\" role=\\\"grid\\\" aria-describedby=\\\"autofill_info\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Level</th>\\r\\n              <th>Answer</th>\\r\\n              <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n              <th>Question Type</th>\\r\\n              <th>Question </th>\\r\\n              <!-- <th>Quant/Verbal </th>\\r\\n              <th>Group </th> -->\\r\\n              <th>Quiz type</th>\\r\\n              <!-- <th>Quiz sub type</th> -->\\r\\n              <th>Duration</th>\\r\\n             <!--  <th>Image URL</th> -->\\r\\n              \\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of questionArr\\\">\\r\\n              <td class=\\\"\\\">{{ item.level }}</td>\\r\\n              <td class=\\\"\\\">{{ item.answer }}</td>\\r\\n              <td class=\\\"\\\">{{ item.option4 }}</td>\\r\\n              <td class=\\\"\\\">{{ item.option3 }} </td>\\r\\n              <td class=\\\"\\\">{{ item.option2 }} </td>\\r\\n              <td class=\\\"\\\">{{ item.option1 }} </td>\\r\\n              <td class=\\\"\\\">{{ item.question_type }} </td>\\r\\n              <td *ngIf=\\\"item.question_type=='text_and_image'\\\">\\r\\n              <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n              <br>\\r\\n               {{ item.question }}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"item.question_type=='image'\\\">\\r\\n              <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n              </td>\\r\\n              <td *ngIf=\\\"item.question_type=='text' || item.question_type==null\\\">\\r\\n               {{ item.question }}\\r\\n              </td>\\r\\n             <!--  <td class=\\\"\\\">{{ item.quant_verbal }}</td>\\r\\n              <td class=\\\"\\\">{{ item.group }}</td> -->\\r\\n              <td class=\\\"\\\">{{ item.quiz_type_name }}</td>\\r\\n              <!-- <td class=\\\"\\\">{{ item.quiz_sub_type_name }}</td> -->\\r\\n              <td class=\\\"\\\">{{ item.duration }}</td>\\r\\n              <!-- <td> <span class=\\\"img-url-break\\\"> {{ item.question_image_url }}</span></td> -->\\r\\n              \\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"publish-table-wrap m-b-0 table-responsive\\\" *ngIf=\\\"mode==3 && parentmodule=='teacher'\\\"> \\r\\n        <table class=\\\"table table-striped table-bordered \\\" id=\\\"\\\" >\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Answer</th>\\r\\n            <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n            <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n            <th><span class=\\\"option-width\\\">option B </span></th>\\r\\n            <th><span class=\\\"option-width\\\">option A</span> </th>\\r\\n            <th>Question Type</th>\\r\\n            <th>Question </th>\\r\\n            <th>Quant/Verbal </th>\\r\\n            <th>Group </th>\\r\\n          </tr>\\r\\n         </thead>\\r\\n          <tbody>\\r\\n            <tr class=\\\"even ng-star-inserted\\\" *ngFor=\\\"let question of questionArr\\\">\\r\\n                <td class=\\\"\\\">{{ question.answer }}</td>\\r\\n                <td [innerHTML]=\\\"question.option4 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option3 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option2 | safeHtml\\\"></td>\\r\\n                <td [innerHTML]=\\\"question.option1 | safeHtml\\\"></td>\\r\\n                <td class=\\\"\\\">{{ question.qui_type }}</td>\\r\\n                <td class=\\\"\\\">\\r\\n                  <div *ngIf=\\\"question.qui_type=='text'\\\" [innerHTML]=\\\"question.question | safeHtml\\\"></div>\\r\\n               \\r\\n                  <div *ngIf=\\\"question.qui_type=='image'\\\">\\r\\n                    <img src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"question.qui_type=='text_and_image'\\\">\\r\\n                   <img src=\\\"{{s3_url+question.question_image_url}}\\\">\\r\\n                   <br>{{question.question}}\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td class=\\\"\\\">{{ question.quant_verbal }}</td>\\r\\n                <td class=\\\"\\\">{{ question.groups }}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n\\r\\n          </table>\\r\\n      </div>\\r\\n      <div class=\\\"publish-table-wrap table-responsive\\\" *ngIf=\\\"mode==4 && parentmodule=='teacher'\\\">\\r\\n        <table id=\\\"autofill\\\" class=\\\"table table-striped table-bordered nowrap dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"autofill_info\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Level</th>\\r\\n              <th>Answer</th>\\r\\n              <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n              <th>Question Type</th>\\r\\n              <th>Question </th>\\r\\n              <th>Quant/Verbal </th>\\r\\n              <th>Group </th>\\r\\n              <th>Quiz type</th>\\r\\n              <th>Quiz sub type</th>\\r\\n              <th>Duation</th>\\r\\n             <!--  <th>Image URL</th> -->\\r\\n              \\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of questionArr\\\">  \\r\\n              <td class=\\\"\\\">{{ item.level }}</td>\\r\\n              <td class=\\\"\\\">{{ item.answer }}</td>\\r\\n              <td class=\\\"\\\">{{ item.option4 }}</td>\\r\\n              <td class=\\\"\\\">{{ item.option3 }}</td>\\r\\n              <td class=\\\"\\\">{{ item.option2 }}</td>\\r\\n              <td class=\\\"\\\">{{ item.option1 }}</td>\\r\\n              <td class=\\\"\\\">{{ item.question_type }} </td>\\r\\n              <td *ngIf=\\\"item.question_type=='text_and_image'\\\">\\r\\n              <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n              <br>\\r\\n               {{ item.question }}\\r\\n              </td>\\r\\n              <td *ngIf=\\\"item.question_type=='image'\\\">\\r\\n              <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ local_api_url}}{{item.question_image}}\\\"/>\\r\\n              </td>\\r\\n              <td *ngIf=\\\"item.question_type=='text' || item.question_type==null\\\">\\r\\n               {{ item.question }}\\r\\n              </td>\\r\\n              <td class=\\\"\\\">{{ item.quant_verbal }}</td>\\r\\n              <td class=\\\"\\\">{{ item.groups }}</td>\\r\\n              <td class=\\\"\\\">{{ item.quiz_type_name }}</td>\\r\\n              <td class=\\\"\\\">{{ item.quiz_sub_type_name }}</td>\\r\\n              <td class=\\\"\\\">{{ item.duration }}</td>\\r\\n          <!--    <td class=\\\"\\\"> <span class=\\\"img-url-break\\\">{{ item.question_image_url }} </span> </td> -->\\r\\n               \\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"publish-table-wrap table-responsive\\\" *ngIf=\\\"mode==1 && parentmodule=='tsupervisor'\\\">\\r\\n          <table id=\\\"autofill\\\" class=\\\"table table-striped table-bordered nowrap dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"autofill_info\\\">\\r\\n            <thead>\\r\\n              <tr role=\\\"row\\\">\\r\\n              <th>Level</th>\\r\\n              <th>Answer</th>\\r\\n              <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n              <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n              <th>Question Type</th>\\r\\n              <th>Question </th>\\r\\n             <!--  <th>Quant/Verbal </th> -->\\r\\n              <th>Lesson</th> \\r\\n              <th>Subject</th> \\r\\n              <th>Semester</th>\\r\\n              <th>Class</th> \\r\\n              <th>Sub Type</th>\\r\\n              <th>Quiz Type</th>  \\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr role=\\\"row\\\" *ngFor=\\\"let question of questionArr\\\">\\r\\n                    <td>{{ question.level_name }}</td>\\r\\n                    <td>{{ question.answer }}</td>\\r\\n                    <td>\\r\\n                        <img *ngIf=\\\"question.option_type=='image' else opt4Else\\\" src=\\\"{{ s3_url}}{{question.option4}}\\\"/>\\r\\n                        <ng-template #opt4Else>\\r\\n                           {{ question.option4 }}\\r\\n                       </ng-template>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <img *ngIf=\\\"question.option_type=='image' else opt3Else\\\" src=\\\"{{ s3_url}}{{question.option3}}\\\"/>\\r\\n                        <ng-template #opt3Else>\\r\\n                           {{ question.option3 }}\\r\\n                       </ng-template>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <img *ngIf=\\\"question.option_type=='image' else opt2Else\\\" src=\\\"{{ s3_url}}{{question.option2}}\\\"/>\\r\\n                        <ng-template #opt2Else>\\r\\n                           {{ question.option2 }}\\r\\n                       </ng-template>\\r\\n                    </td>\\r\\n                     <td>\\r\\n                        <img *ngIf=\\\"question.option_type=='image' else opt1Else\\\" src=\\\"{{ s3_url}}{{question.option1}}\\\"/>\\r\\n                        <ng-template #opt1Else>\\r\\n                           {{ question.option1 }}\\r\\n                       </ng-template>\\r\\n                    </td>\\r\\n                    <td class=\\\"\\\">{{ question.question_type }} </td>\\r\\n                    <td *ngIf=\\\"question.question_type=='text_and_image'\\\">\\r\\n                    <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ s3_url}}{{question.question_image_url}}\\\"/>\\r\\n                    <br>\\r\\n                     {{ question.question }}\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"question.question_type=='image'\\\">\\r\\n                    <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ s3_url}}{{question.question_image_url}}\\\"/>\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"question.question_type=='text' || question.question_type==null\\\">\\r\\n                     {{ question.question }}\\r\\n                    </td>\\r\\n                   <!--  <td>{{ question.quant_verbal }}</td> -->\\r\\n                    <td>{{ question.lesson_name | titlecase}}</td>\\r\\n                    <td>{{ question.subject_name | titlecase}}</td>\\r\\n                    <td>{{ question.semester_name | titlecase}}</td>\\r\\n                    <td>{{ question.class_name | titlecase}}</td>\\r\\n                    <td>{{ question.sub_quiz_name | titlecase}}</td>\\r\\n                    <td>{{ question.quiz_type_name | titlecase}}</td>\\r\\n\\r\\n                  </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n   </div>\\r\\n  </div>\\r\\n</div>\"","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {StudyExamDownloadComponent} from './studyexam-downlad.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StudyExamDownloadComponent,\r\n    data: {\r\n      title: 'Study Exam Download Component'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StudyExamDownloadRoutingModule { }\r\n","export default \".sv_main.sv_frame .sv_container {\\n  max-width: 100% !important;\\n  padding: 0 !important;\\n}\\n\\n#survey-viewer-container {\\n  margin-top: 15px;\\n}\\n\\n#survey-viewer-container .sv_main.sv_default_css .sv_body {\\n  border-top: 0px !important;\\n}\\n\\nh2 {\\n  padding: 15px 15px;\\n  margin-bottom: 0px;\\n  color: #4d4d4d;\\n  font-size: 28px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYXV0aC9zdHVkeWV4YW0tZG93bmxhZC9EOlxcbWVhblxcYWxsYW0tY21zL3NyY1xcYXBwXFxwYWdlc1xcYXV0aFxcc3R1ZHlleGFtLWRvd25sYWRcXHN0dWR5ZXhhbS1kb3dubGFkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9hdXRoL3N0dWR5ZXhhbS1kb3dubGFkL3N0dWR5ZXhhbS1kb3dubGFkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQWlDLDBCQUFBO0VBQTJCLHFCQUFBO0FDRzVEOztBREZBO0VBQTJCLGdCQUFBO0FDTTNCOztBRExBO0VBQTRELDBCQUFBO0FDUzVEOztBRE5BO0VBQ0ksa0JBQUE7RUFBb0Isa0JBQUE7RUFDcEIsY0FBQTtFQUNBLDBCQUFBO0FDVUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hdXRoL3N0dWR5ZXhhbS1kb3dubGFkL3N0dWR5ZXhhbS1kb3dubGFkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN2X21haW4uc3ZfZnJhbWUgLnN2X2NvbnRhaW5lciB7bWF4LXdpZHRoOiAxMDAlIWltcG9ydGFudDsgcGFkZGluZzogMCFpbXBvcnRhbnQ7fVxyXG4jc3VydmV5LXZpZXdlci1jb250YWluZXIgeyBtYXJnaW4tdG9wOjE1cHg7fVxyXG4jc3VydmV5LXZpZXdlci1jb250YWluZXIgLnN2X21haW4uc3ZfZGVmYXVsdF9jc3MgLnN2X2JvZHkgeyBib3JkZXItdG9wOiAwcHghaW1wb3J0YW50OyB9XHJcblxyXG5cclxuaDIge1xyXG4gICAgcGFkZGluZzogMTVweCAxNXB4OyBtYXJnaW4tYm90dG9tOiAwcHg7ICBcclxuICAgIGNvbG9yOiAjNGQ0ZDRkO1xyXG4gICAgZm9udC1zaXplOiAyOHB4IWltcG9ydGFudDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIi5zdl9tYWluLnN2X2ZyYW1lIC5zdl9jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuXG4jc3VydmV5LXZpZXdlci1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuXG4jc3VydmV5LXZpZXdlci1jb250YWluZXIgLnN2X21haW4uc3ZfZGVmYXVsdF9jc3MgLnN2X2JvZHkge1xuICBib3JkZXItdG9wOiAwcHggIWltcG9ydGFudDtcbn1cblxuaDIge1xuICBwYWRkaW5nOiAxNXB4IDE1cHg7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbiAgY29sb3I6ICM0ZDRkNGQ7XG4gIGZvbnQtc2l6ZTogMjhweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport { PocquestionService } from '../../../services/studyexam/pocquestion.service';\r\nimport { CurriculumSingleService } from '../../../services/studyexam/curriculum-single.service';\r\nimport { CompetitiveSingleService } from '../../../services/studyexam/competitive-single.service';\r\nimport { AuthenticationService } from '../../../services';\r\nimport { environment } from '../../../../environments/environment';\r\nimport * as htmlToImage from 'html-to-image';\r\nimport { TsupervisorService } from '../../../services/tsupervisor.service';\r\n\r\n\r\ndeclare var jsPDF: any;\r\n\r\nimport $ from 'jquery';\r\nimport { RowCssClassCalculator } from 'ag-grid-community/dist/lib/rendering/row/rowCssClassCalculator';\r\n\r\nconst apiUrl =environment.apiUrl;\r\n\r\n@Component({\r\n  selector: 'app-referendum',\r\n  templateUrl: './studyexam-downlad.component.html',\r\n  styleUrls: ['./studyexam-downlad.component.scss']\r\n})\r\nexport class StudyExamDownloadComponent implements OnInit {\r\n  @ViewChild('container',{static:false}) container: any; \r\n  title = 'Download';\r\n  public selectedItems = [];\r\n\tgridview = false;\r\n\terror = '';\r\n\tprivate questionArr:any=[];\r\n  masterArr:any=[];\r\n  row_id=1;\r\n\tprivate toasterService: ToasterService;\r\n  logUser:any;\r\n  created_by:number;\r\n  mode='';\r\n  parentmodule='';\r\n  quiz_temp_id:any;\r\n  s3_url =environment.s3_url;\r\n  local_api_url=environment.apiUrl;\r\n  \r\n\tpublic question_value: string = ``;\r\n    \r\n  constructor(private router: Router,\r\n              private activeAouter: ActivatedRoute,\r\n              private alertService: ToasterService,\r\n              private curriculumSingleService:CurriculumSingleService,\r\n              private authenticationService: AuthenticationService,\r\n              private pocquestionService: PocquestionService,\r\n              private competitiveSingleService:CompetitiveSingleService,\r\n              private tsupervisorService:TsupervisorService,\r\n\r\n              ) {}\r\n\r\n\t  ngOnInit() {    \r\n        this.logUser    = this.authenticationService.currentUserValue;\r\n        this.logUser    = JSON.parse(this.logUser);\r\n        this.created_by = this.logUser['user'][0]['id']; \r\n        this.mode = this.activeAouter.snapshot.params['mode'];\r\n        this.parentmodule=this.activeAouter.snapshot.params[\"parent\"];\r\n        this.quiz_temp_id = (this.activeAouter.snapshot.params['quiz_temp_id']);\r\n        this.getDraftQuestion(this.mode);\r\n        $(document).ready(function(){\r\n          //setTimeout(() => window.print(), 1000);\r\n        });\r\n\t  }\r\n\r\n    public getDraftQuestion(mode) {\r\n      if(this.parentmodule==\"teacher\"){\r\n        if(mode=='1'){\r\n          this.curriculumSingleService.getDraftQuestionByUser(this.created_by).subscribe(response => { \r\n            this.questionArr = response;       \r\n          });\r\n        }\r\n        else if(mode=='2'){\r\n          this.pocquestionService.getDraftQuestionByUser(this.created_by).subscribe(response => {\r\n            this.questionArr = response;\r\n          });\r\n        }\r\n        else if(mode=='3'){\r\n          this.competitiveSingleService.getDraftQuestionByUser(this.created_by,this.quiz_temp_id).subscribe(response => { \r\n            this.questionArr = response; \r\n          });\r\n        }\r\n        else if(mode=='4'){\r\n          this.pocquestionService.getDraftQuestionCompetitiveByUser(this.created_by,this.quiz_temp_id).subscribe(response => {  \r\n            this.questionArr=response;\r\n          });\r\n        }\r\n      }\r\n      else{\r\n\r\n         this.tsupervisorService.getPublishQuestion(this.quiz_temp_id).subscribe(response => {  \r\n            this.questionArr=response;\r\n          });\r\n      }\r\n    }\r\n\r\n    generatePDF() {\r\n      var self=this;\r\n      const doc = new jsPDF({\r\n        orientation: \"landscape\",\r\n        unit: \"in\",\r\n        format: \"a4\"\r\n      });\r\n      var res = doc.autoTableHtmlToJson(document.getElementById(\"contentToConvert\"), false);\r\n      doc.autoTable(res.columns,res.rows,{\r\n        bodyStyles: {valign: 'top', minCellHeight: 100},\r\n        styles: {overflow: 'linebreak', columnWidth: 'wrap'},\r\n        createdCell: function(cell, data) {\r\n          if (data.column.index === 6) {\r\n            debugger;\r\n            cell.styles.cellPadding = {vertical: 1};\r\n            var div = document.createElement(\"div\"); \r\n            div.innerHTML = data.cell.raw.innerHTML; \r\n            cell.text = cell.raw.textContent.replace(/./g, ' ');\r\n            setTimeout(() => htmlToImage.toPng(data.cell.raw)\r\n            .then(function (dataUrl) {\r\n                var img = new Image();\r\n                img.src = dataUrl;\r\n                var textPos = data.cell.textPos;\r\n                var dim = data.cell.raw.offsetHeight - data.cell.padding('vertical');\r\n                doc.addImage(img.src, textPos.x, textPos.y);\r\n            })\r\n            .catch(function (error) {\r\n              debugger;\r\n                console.error('oops, something went wrong!', error);\r\n            }), 1000);\r\n          }\r\n        }\r\n      });\r\n      //doc.save(\"table.pdf\")\r\n      setTimeout(() => doc.save(\"table.pdf\"), 10000);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { StudyExamDownloadRoutingModule } from './studyexam-downlad-routing.module';\r\nimport { StudyExamDownloadComponent } from './studyexam-downlad.component';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { PipesModule } from \"../../../pipes/pipes.module\";\r\nimport { Pipe, PipeTransform} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser'\r\n\r\n@Pipe({ name: 'safeHtml'})\r\nexport class SafeHtmlPipe implements PipeTransform  {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value) \r\n  {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StudyExamDownloadRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [StudyExamDownloadComponent,\r\n    SafeHtmlPipe]\r\n})\r\nexport class StudyExamDownloadModule { }\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'cFilter'\r\n})\r\nexport class CustomPipe implements PipeTransform {\r\n  transform(items: any, filter: any, isAnd: any): any {\r\n    if (filter && Array.isArray(items)) {\r\n      let filterKeys = Object.keys(filter);\r\n      if (isAnd) {\r\n        return items.filter(item =>\r\n            filterKeys.reduce((memo, keyName) =>\r\n                (memo && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] === \"\", true));\r\n      } else {\r\n        return items.filter(item => {\r\n          return filterKeys.some((keyName) => {\r\n            console.log(keyName);\r\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] === \"\";\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      return items;\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'formatTitle'\r\n})\r\nexport class FormatTitlePipe implements PipeTransform {\r\n  transform(title: string): string {\r\n    const result = title.replace(/([A-Z])/g, ' $1');\r\n    const finalResult = result.charAt(0)\r\n      .toUpperCase() + result.slice(1);\r\n\r\n    return finalResult;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport { DatePipe, DecimalPipe } from '@angular/common';\r\n\r\n@Pipe({\r\n  name: 'format'\r\n})\r\nexport class Format implements PipeTransform  {\r\n  \r\n  //datePipe: DatePipe = new DatePipe();\r\n  //decimalPipe: DecimalPipe = new DecimalPipe();\r\n  \r\n  transform(input:string, args:any): any {\r\n    var format = '';\r\n    var parsedFloat = 0;\r\n    var pipeArgs = args.split(':');\r\n    for(var i = 0; i < pipeArgs.length; i++){\r\n      pipeArgs[i] = pipeArgs[i].trim(' ');\r\n    }\r\n    \r\n    switch(pipeArgs[0].toLowerCase()) {\r\n      case 'text':\r\n        return input;\r\n      /*case 'decimal':\r\n      case 'number':\r\n        parsedFloat = !isNaN(parseFloat(input)) ? parseFloat(input) : 0;\r\n        format = pipeArgs.length > 1 ? pipeArgs[1] : null;\r\n        return this.decimalPipe.transform(parsedFloat, format);\r\n      case 'percentage':\r\n        parsedFloat = !isNaN(parseFloat(input)) ? parseFloat(input) : 0;\r\n        format = pipeArgs.length > 1 ? pipeArgs[1] : null;\r\n        return this.decimalPipe.transform(parsedFloat, format) + '%';*/\r\n      /*case 'date':\r\n      case 'datetime':\r\n        var date = !isNaN(parseInt(input)) ? parseInt(input) : new Date(input);\r\n        format = 'MMM d, y h:mm:ss a';\r\n        if(pipeArgs.length > 1)\r\n        {\r\n            format = '';\r\n            for(var i = 1; i < pipeArgs.length; i++){\r\n                format += pipeArgs[i];\r\n            }\r\n        }\r\n        return this.datePipe.transform(date, format);*/\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n}","/*\r\n * Example use\r\n *\t\tBasic Array of single type: *ngFor=\"let todo of todoService.todos | orderBy : '-'\"\r\n *\t\tMultidimensional Array Sort on single column: *ngFor=\"let todo of todoService.todos | orderBy : ['-status']\"\r\n *\t\tMultidimensional Array Sort on multiple columns: *ngFor=\"let todo of todoService.todos | orderBy : ['status', '-title']\"\r\n */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'orderByy', pure: false})\r\nexport class OrderBy implements PipeTransform {\r\n\r\n\tvalue:string[] =[];\r\n\r\n\tstatic _orderByComparator(a:any, b:any):number{\r\n        \r\n        if(a === null || typeof a === 'undefined') a = 0;\r\n        if(b === null || typeof b === 'undefined') b = 0;\r\n\r\n\t\tif((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))){\r\n\t\t\t//Isn't a number so lowercase the string to properly compare\r\n\t\t\tif(a.toLowerCase() < b.toLowerCase()) return -1;\r\n\t\t\tif(a.toLowerCase() > b.toLowerCase()) return 1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\t//Parse strings as numbers to compare properly\r\n\t\t\tif(parseFloat(a) < parseFloat(b)) return -1;\r\n\t\t\tif(parseFloat(a) > parseFloat(b)) return 1;\r\n\t\t}\r\n\r\n\t\treturn 0; //equal each other\r\n\t}\r\n\r\n    transform(input:any, config:string = '+'): any{\r\n\r\n    \t//make a copy of the input's reference\r\n    \tthis.value = [...input];\r\n    \tvar value = this.value;\r\n        \r\n        if(!Array.isArray(value)) return value;\r\n\r\n        if(!Array.isArray(config) || (Array.isArray(config) && config.length == 1)){\r\n            var propertyToCheck:string = !Array.isArray(config) ? config : config[0];\r\n            var desc = propertyToCheck.substr(0, 1) == '-';\r\n            \r\n            //Basic array\r\n            if(!propertyToCheck || propertyToCheck == '-' || propertyToCheck == '+'){\r\n                return !desc ? value.sort() : value.sort().reverse();\r\n            }\r\n            else {\r\n                var property:string = propertyToCheck.substr(0, 1) == '+' || propertyToCheck.substr(0, 1) == '-'\r\n                    ? propertyToCheck.substr(1)\r\n                    : propertyToCheck;\r\n\r\n                return value.sort(function(a:any,b:any){\r\n                    return !desc \r\n                        ? OrderBy._orderByComparator(a[property], b[property]) \r\n                        : -OrderBy._orderByComparator(a[property], b[property]);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            //Loop over property of the array in order and sort\r\n            return value.sort(function(a:any,b:any){\r\n                for(var i:number = 0; i < config.length; i++){\r\n                    var desc = config[i].substr(0, 1) == '-';\r\n                    var property = config[i].substr(0, 1) == '+' || config[i].substr(0, 1) == '-'\r\n                        ? config[i].substr(1)\r\n                        : config[i];\r\n\r\n                    var comparison = !desc \r\n                        ? OrderBy._orderByComparator(a[property], b[property]) \r\n                        : -OrderBy._orderByComparator(a[property], b[property]);\r\n                    \r\n                    //Don't return 0 yet in case of needing to sort by next property\r\n                    if(comparison != 0) return comparison;\r\n                }\r\n\r\n                return 0; //equal each other\r\n            });\r\n        }\r\n    }\r\n}","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({  name: 'orderBy' })\r\nexport class OrderrByPipe implements PipeTransform {\r\n\r\n  transform(records: Array<any>, args?: any): any {\r\n    \r\n    return records.sort(function(a, b){\r\n          if(a[args.property] < b[args.property]){\r\n            return -1 * args.direction;\r\n          }\r\n          else if( a[args.property] > b[args.property]){\r\n            return 1 * args.direction;\r\n          }\r\n          else{\r\n            return 0;\r\n          }\r\n        });\r\n    };\r\n}","import { NgModule } from '@angular/core';\r\nimport { OrderrByPipe } from \"./orderby.pipe\";\r\nimport { FormatTitlePipe } from \"./format-title.pipe\";\r\nimport { Format } from \"./format\";\r\nimport { OrderBy } from \"./orderBy\";\r\nimport { CustomPipe } from \"./custom.pipe\";\r\nimport { SanitizerUrlPipe } from \"./sanitize-url.pipe\";\r\n\r\n@NgModule({\r\n  declarations: [OrderrByPipe, FormatTitlePipe, Format, OrderBy,CustomPipe, SanitizerUrlPipe],\r\n  imports: [],\r\n  exports: [OrderrByPipe, FormatTitlePipe, Format, OrderBy,CustomPipe, SanitizerUrlPipe]\r\n})\r\nexport class PipesModule {}","import {Pipe, PipeTransform} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl, SafeUrl} from '@angular/platform-browser';\r\n@Pipe({\r\n    name: 'sanitizerUrl'\r\n  })\r\n  export class SanitizerUrlPipe implements PipeTransform {\r\n  \r\n    constructor (\r\n      private sanitize: DomSanitizer\r\n    ) {}\r\n  \r\n    transform(value: string): SafeUrl {\r\n      return this.sanitize.bypassSecurityTrustUrl(value);\r\n    }\r\n  }"],"sourceRoot":"webpack:///"}