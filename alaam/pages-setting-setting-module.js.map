{"version":3,"sources":["./src/app/pages/setting/setting.component.html","./src/app/pages/setting/setting-routing.module.ts","./src/app/pages/setting/setting.component.scss","./src/app/pages/setting/setting.component.ts","./src/app/pages/setting/setting.module.ts"],"names":[],"mappings":"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","file":"pages-setting-setting-module.js","sourcesContent":["export default \"<div class=\\\"row allam-wrap\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"row m-b-20\\\"><div class=\\\"col-md-12\\\">\\r\\n      <h3  class=\\\"text-right txt-primary\\\">Settings </h3>\\r\\n     </div></div>\\r\\n     <hr />\\r\\n\\r\\n   <div class=\\\"card \\\">\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n      <div class=\\\"col-sm-6 col-sm-6 col-xs-12\\\">\\r\\n     <form class=\\\"md-float-material\\\" [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"onSubmit()\\\">  \\r\\n            <div class=\\\"row\\\" >\\r\\n              <div class=\\\"card-block col-md-12 pull-left\\\">\\r\\n                <h3>Change Password</h3>\\r\\n              </div>\\r\\n            \\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"group m-b-20\\\">\\r\\n                    <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"New password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\">\\r\\n                      <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.password.errors.required\\\">This field is required.</div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n              </div>\\r\\n           \\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"group m-b-20\\\">\\r\\n                  <div class=\\\"input-group input-tr-br-radius\\\">\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"conf_password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.conf_password.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && f.conf_password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.conf_password.errors.required\\\">This field is required.</div>\\r\\n                        <div *ngIf=\\\"f.conf_password.errors.confirmedValidator\\\">Password and Confirm Password must be match.</div>\\r\\n                    </div>\\r\\n                   \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n           \\r\\n                      \\r\\n           \\r\\n              <div class=\\\"col-md-12\\\">\\r\\n              \\r\\n                 <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border create_cancel pull-right m-b-20\\\">\\r\\n                   <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                    Save\\r\\n                  </button>\\r\\n                  \\r\\n              \\r\\n           </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\\r\\n   </div>\\r\\n</div>\"","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {SettingComponent} from './setting.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingComponent,\r\n    data: {\r\n      title: 'Thank You'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmcvc2V0dGluZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport { AuthenticationService,UserService } from '../../services';\r\nimport { ConfirmedValidator } from '../../confirmed.validator';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.scss']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n    \r\n  resetForm: FormGroup;\r\n  loading   = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  success='';\r\n  resetUser: any = {};\r\n  formFlag=true;\r\n  message_title:string;\r\n  message_body:string;\r\n  id:string;\r\n  private toasterService: ToasterService;\r\n  logUser:any;\r\n\r\n  constructor(private userService: UserService, \r\n              private route: ActivatedRoute, \r\n              private router: Router,\r\n              private fb: FormBuilder, \r\n              private alertService: ToasterService,\r\n              private authenticationService: AuthenticationService\r\n              ) { }\r\n\r\n  ngOnInit() \r\n  {  \t\r\n  \tthis.message_title='';\r\n  \tthis.message_body='';\r\n    this.resetForm = this.fb.group({\r\n            password: ['', Validators.required],\r\n            conf_password: ['', Validators.required],\r\n        }, { \r\n      validator: ConfirmedValidator('password', 'conf_password')\r\n    });\r\n\r\n    this.logUser    = this.authenticationService.currentUserValue;\r\n    this.logUser    = JSON.parse(this.logUser);\r\n    this.id         = this.logUser['user'][0]['id']; \r\n  }\r\n\r\n    get f() { return this.resetForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        if (this.resetForm.invalid) {\r\n            return;\r\n        }\r\n \r\n        this.loading = true;\r\n        this.resetUser.password  = this.resetForm.value.password;\r\n        this.resetUser.id=this.id;\r\n        this.userService.changePassword(this.resetUser)\r\n            .subscribe(\r\n                data => {\r\n                    if(data['status'])\r\n                    {\r\n                      this.alertService.pop('success', 'Password changed successfully');\r\n                      this.loading = false; \r\n                    }\r\n                    else\r\n                    {  \r\n                        this.alertService.pop('error', data['msg']);\r\n                        this.loading = false; \r\n                    }\r\n                    \r\n                },\r\n                error => {\r\n                    this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                    this.loading = false;\r\n                });\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SettingComponent } from './setting.component';\r\nimport { SettingRoutingModule } from './setting-routing.module';\r\nimport {SharedModule} from '../../shared/shared.module';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SettingRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [SettingComponent]\r\n})\r\nexport class SettingModule { }\r\n"],"sourceRoot":"webpack:///"}