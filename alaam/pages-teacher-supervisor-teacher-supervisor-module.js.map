{"version":3,"sources":["./src/app/pages/teacher-supervisor/question/question.component.html","./src/app/pages/teacher-supervisor/teacher-supervisor.component.html","./src/app/pages/teacher-supervisor/question/question.component.scss","./src/app/pages/teacher-supervisor/question/question.component.ts","./src/app/pages/teacher-supervisor/teacher-supervisor-routing.module.ts","./src/app/pages/teacher-supervisor/teacher-supervisor.component.ts","./src/app/pages/teacher-supervisor/teacher-supervisor.module.ts"],"names":[],"mappings":"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","file":"pages-teacher-supervisor-teacher-supervisor-module.js","sourcesContent":["export default \"<div class=\\\"row\\\" *ngIf=\\\"isSave\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <div class=\\\"dt-responsive table-responsive11\\\">\\r\\n              <div id=\\\"autofill_wrapper\\\" class=\\\"dataTables_wrapper dt-bootstrap4\\\">\\r\\n                <div class=\\\"row m-b-10\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-12 col-md-4 text-left\\\">\\r\\n                     <a [routerLink]=\\\"['teacher-supervisor']\\\" class=\\\"btn btn-warning text-white m-t-15\\\">\\r\\n                            <i class=\\\"icofont icofont-arrow-left\\\"></i>Back\\r\\n                      </a>\\r\\n                    </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-12 col-md-4\\\">\\r\\n                     <div> &nbsp; </div>\\r\\n                    <input type=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Search Here\\\" aria-controls=\\\"autofill\\\" [(ngModel)]=\\\"term\\\"> \\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-12 col-md-4 text-right\\\"> \\r\\n                     <label> \\r\\n                      <button class=\\\"btn btn-success m-t-15\\\" (click)=\\\"downloadItem()\\\" title=\\\"Download\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-download\\\"></i></button>\\r\\n                         \\r\\n                      </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-12\\\">\\r\\n                    <div class=\\\"dt-responsive table-responsive\\\">\\r\\n                      <table id=\\\"autofill\\\" class=\\\"table table-striped table-bordered nowrap dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"autofill_info\\\">\\r\\n                        <thead>\\r\\n                          <tr role=\\\"row\\\">\\r\\n                          <th>Level</th>\\r\\n                          <th>Answer</th>\\r\\n                          <th><span class=\\\"option-width\\\">Option D </span></th>\\r\\n                          <th><span class=\\\"option-width\\\">Option C </span></th>\\r\\n                          <th><span class=\\\"option-width\\\">Option B </span></th>\\r\\n                          <th><span class=\\\"option-width\\\">Option A </span></th>\\r\\n                          <th>Question Type</th>\\r\\n                          <th>Question </th>\\r\\n                          <th>Quant/Verbal </th>\\r\\n                         <!--  <th>Group </th>  -->\\r\\n                          <th>Lesson</th> \\r\\n                          <th>Subject</th> \\r\\n                          <th>Semester</th>\\r\\n                          <th>Class</th> \\r\\n                          <th>Quiz Sub Type</th>\\r\\n                          <th>Quiz Type</th>\\r\\n                          <th>Edit</th>  \\r\\n                          <th>Approve</th>\\r\\n                          <th>\\r\\n                            <span class=\\\"option-width\\\"><input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"selectAll()\\\" [checked]=\\\"selectedAll\\\">&nbsp;&nbsp;\\r\\n                            <button class=\\\"btn btn-warning\\\" (click)=\\\"approveItem()\\\" title=\\\"Approve\\\" type=\\\"button\\\">\\r\\n                            <i class=\\\"icofont icofont-check-circled\\\"></i></button> </span>\\r\\n                          </th>\\r\\n                         \\r\\n                         \\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr role=\\\"row\\\" *ngFor=\\\"let question of questionArr | filter: term | paginate : {\\r\\n                  itemsPerPage: pageSize,\\r\\n                  currentPage: page,\\r\\n                  totalItems: count\\r\\n                }; \\\">\\r\\n                               \\r\\n                                <td>{{ question.level_name }}</td>\\r\\n                                <td>{{ question.answer }}</td>\\r\\n                                <td>\\r\\n                                    <img *ngIf=\\\"question.option_type=='image' else opt4Else\\\" src=\\\"{{ s3_url}}{{question.option4}}\\\"/>\\r\\n                                    <ng-template #opt4Else>\\r\\n                                       {{ question.option4 }}\\r\\n                                   </ng-template>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <img *ngIf=\\\"question.option_type=='image' else opt3Else\\\" src=\\\"{{ s3_url}}{{question.option3}}\\\"/>\\r\\n                                    <ng-template #opt3Else>\\r\\n                                       {{ question.option3 }}\\r\\n                                   </ng-template>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <img *ngIf=\\\"question.option_type=='image' else opt2Else\\\" src=\\\"{{ s3_url}}{{question.option2}}\\\"/>\\r\\n                                    <ng-template #opt2Else>\\r\\n                                       {{ question.option2 }}\\r\\n                                   </ng-template>\\r\\n                                </td>\\r\\n                                 <td>\\r\\n                                    <img *ngIf=\\\"question.option_type=='image' else opt1Else\\\" src=\\\"{{ s3_url}}{{question.option1}}\\\"/>\\r\\n                                    <ng-template #opt1Else>\\r\\n                                       {{ question.option1 }}\\r\\n                                   </ng-template>\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\">{{ question.question_type }} </td>\\r\\n                                <td *ngIf=\\\"question.question_type=='text_and_image'\\\">\\r\\n                                <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ s3_url}}{{question.question_image_url}}\\\"/>\\r\\n                                <br>\\r\\n                                 {{ question.question }}\\r\\n                                </td>\\r\\n                                <td *ngIf=\\\"question.question_type=='image'\\\">\\r\\n                                <img width=\\\"300\\\" height=\\\"200\\\" src=\\\"{{ s3_url}}{{question.question_image_url}}\\\"/>\\r\\n                                </td>\\r\\n                                <td *ngIf=\\\"question.question_type=='text' || question.question_type==null\\\">\\r\\n                                 {{ question.question }}\\r\\n                                </td>\\r\\n                                <td>{{ question.quant_verbal }}</td>\\r\\n                               <!--  <td>{{ question.group_name }}</td> -->\\r\\n                                <td>{{ question.lesson_name | titlecase}}</td>\\r\\n                                <td>{{ question.subject_name | titlecase}}</td>\\r\\n                                <td>{{ question.semester_name | titlecase}}</td>\\r\\n                                <td>{{ question.class_name | titlecase}}</td>\\r\\n                                <td>{{ question.sub_quiz_name | titlecase}}</td>\\r\\n                                <td>{{ question.quiz_type_name | titlecase}}</td>\\r\\n                                <td>\\r\\n                                  <button type=\\\"button\\\" class=\\\"btn allam-btn allam-btn-green text-white \\\" (click)=\\\"editItem(question)\\\"><i class=\\\"icofont icofont-ui-edit\\\"></i> </button>\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\">\\r\\n                                    <button class=\\\"btn allam-btn btn-warning\\\" (click)=\\\"approveOneItem(question.id)\\\" title=\\\"Approve\\\" type=\\\"button\\\"><i class=\\\"icofont icofont-check-circled\\\"></i></button>\\r\\n                                </td>\\r\\n                                <td class=\\\"categories\\\">\\r\\n                                  <!-- <input type=\\\"checkbox\\\"  name=\\\"del_row\\\" [value]=\\\"question.id\\\" (change)=\\\"onCheckboxChange($event,question.id)\\\" >  -->\\r\\n                                   <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"{{question.id}}\\\" [(ngModel)]=\\\"question.selected\\\" (change)=\\\"checkIfAllSelected($event,question.id)\\\"> \\r\\n                                </td>\\r\\n                                \\r\\n                                \\r\\n                              </tr>\\r\\n                              <tr *ngIf=\\\"questionArr.length==0\\\">\\r\\n                                <td colspan=\\\"16\\\" align=\\\"center\\\">No Data found.</td>\\r\\n                              </tr>\\r\\n\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div _ngcontent-cjp-c8=\\\"\\\" class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\r\\n                  <div class=\\\"dataTables_info\\\" id=\\\"autofill_info\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">Show Entries\\r\\n                  <label>\\r\\n                   <select (change)=\\\"handlePageSizeChange($event)\\\" class=\\\"form-control inpuitemsPerPaget-sm\\\">\\r\\n                      <option *ngFor=\\\"let size of pageSizes\\\" [ngValue]=\\\"size\\\">\\r\\n                          {{ size }}\\r\\n                      </option>\\r\\n                    </select>\\r\\n                  </label>\\r\\n                  </div>\\r\\n                  </div>\\r\\n                  <div _ngcontent-cjp-c8=\\\"\\\" class=\\\"col-xs-12 col-sm-12 col-md-6\\\">\\r\\n                     <pagination-controls\\r\\n                      previousLabel=\\\"Prev\\\"\\r\\n                      nextLabel=\\\"Next\\\"\\r\\n                      responsive=\\\"true\\\"\\r\\n                      class=\\\"pagination\\\"\\r\\n                      (pageChange)=\\\"handlePageChange($event)\\\"\\r\\n                    ></pagination-controls> \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container-fluid single-curriculum\\\" *ngIf=\\\"isEditCurr\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 single-curriculum-wrap\\\">\\r\\n        <div class=\\\"row\\\" >\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"row m-b-20\\\">\\r\\n                <div class=\\\"col-md-12 pull-right\\\">\\r\\n                  <h4>Edit Curriculum Exam</h4>\\r\\n               </div>\\r\\n           </div>\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onUpdateTemp()\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <label >Class</label>\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"class\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.class.errors }\\\">\\r\\n                        <option value=\\\"\\\">Class</option>\\r\\n                        <option *ngFor=\\\"let option of masterArr.master_class\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                      </select>\\r\\n                      \\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                      <div *ngIf=\\\"submitted && f.class.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.class.errors.required\\\">Class is required.</div>\\r\\n                        <div *ngIf=\\\"f.class.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div> \\r\\n          \\r\\n                <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n\\r\\n                      <label>Chapter</label>\\r\\n                      \\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"chapter\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.chapter.errors }\\\">\\r\\n                        <option value=\\\"\\\">Chapter</option>\\r\\n                        <option *ngFor=\\\"let option of masterArr.master_chapter\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                      </select>\\r\\n\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.chapter.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.chapter.errors.required\\\">Chapter is required.</div>\\r\\n                          <div *ngIf=\\\"f.chapter.errors.pattern\\\">Accept numeric values only.</div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div> \\r\\n                <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <label>Subject</label>\\r\\n                     \\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"subject\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.subject.errors }\\\">\\r\\n                        <option value=\\\"\\\">Subject</option>\\r\\n                        <option *ngFor=\\\"let option of masterArr.master_subject\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                      </select>\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.subject.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.subject.errors.required\\\">Subject is required.</div>\\r\\n                        </div>\\r\\n                   </div>\\r\\n                </div> \\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <label>Semester</label>\\r\\n                      \\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"semester\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.semester.errors }\\\">\\r\\n                        <option value=\\\"\\\">Semester</option>\\r\\n                        <option *ngFor=\\\"let option of masterArr.master_semester\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                      </select>\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.semester.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.semester.errors.required\\\">Semester is required.</div>\\r\\n                          <div *ngIf=\\\"f.semester.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div> \\r\\n          \\r\\n                <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <label>Lesson</label>\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"lesson\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lesson.errors }\\\">\\r\\n                        <option value=\\\"\\\">Lesson</option>\\r\\n                        <option *ngFor=\\\"let option of masterArr.master_lesson\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                      </select>\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.lesson.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.lesson.errors.required\\\">Lesson is required.</div>\\r\\n                            <div *ngIf=\\\"f.lesson.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                        </div>\\r\\n                   </div>\\r\\n                </div> \\r\\n                 <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                 <div class=\\\"group\\\">\\r\\n                  <label>Question Type</label>\\r\\n                  <select class=\\\"form-control\\\" (change)=\\\"qtChanged($event.target.value)\\\" formControlName=\\\"question_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question_type.errors }\\\">\\r\\n                        <option value=\\\"text\\\">Text</option>\\r\\n                        <option value=\\\"image\\\">Image</option>\\r\\n                        <option value=\\\"text_and_image\\\">Text and Image</option>\\r\\n                  </select>\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                   <div *ngIf=\\\"submitted && f.question_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.question_type.errors.required\\\">Question Type is required.</div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              </div>\\r\\n               <div class=\\\"row\\\">&nbsp;</div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-8 \\\">\\r\\n                  <div class=\\\"row \\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                    \\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option A\\\" type=\\\"text\\\" formControlName=\\\"option1\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option1.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                      <div *ngIf=\\\"submitted && f.option1.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option1.errors.required\\\">Option A is required.</div>\\r\\n                       </div>\\r\\n                        <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option1.value}}\\\"/>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2  txt-left \\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"a\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'a'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row m-t-15\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n\\r\\n                      <input class=\\\"form-control\\\" placeholder=\\\"Option B\\\" type=\\\"text\\\" formControlName=\\\"option2\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option2.errors }\\\">\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.option2.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.option2.errors.required\\\">Option B is required.</div>\\r\\n                      </div>\\r\\n                       <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option2.value}}\\\"/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2 txt-left\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"b\\\" formControlName=\\\"answer\\\"  [checked]=\\\"form.get('answer').value.toLowerCase() == 'b'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row m-t-15\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option C\\\" type=\\\"text\\\" formControlName=\\\"option3\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option3.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.option3.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option3.errors.required\\\">Option C is required.</div>\\r\\n                      </div>\\r\\n                       <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option3.value}}\\\"/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"c\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'c'\\\"> \\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row m-t-15\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                    \\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option D\\\" type=\\\"text\\\" formControlName=\\\"option4\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option4.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.option4.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option4.errors.required\\\">Option D is required.</div>\\r\\n                      </div>\\r\\n                       <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option4.value}}\\\"/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"d\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'd'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n                      <label >Level</label>\\r\\n                       <div class=\\\"group\\\">\\r\\n                        \\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"level\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.level.errors }\\\">\\r\\n                          <option value=\\\"\\\">Level</option>\\r\\n                          <option *ngFor=\\\"let option of levelOptions\\\" [value]=\\\"option\\\" >{{option}}</option>\\r\\n                        </select>\\r\\n                        <span class=\\\"md-line\\\"></span>\\r\\n                         <div *ngIf=\\\"submitted && f.level.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.level.errors.required\\\">Level is required.</div>\\r\\n                            <div *ngIf=\\\"f.level.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div> \\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n                      <label >Duration (In Seconds)</label>\\r\\n                       <div class=\\\"group\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"duration\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\">\\r\\n                          <option value=\\\"\\\">Duration (In Seconds)</option>\\r\\n                          <option *ngFor=\\\"let option of durationOptions\\\" [value]=\\\"option\\\" >{{option}}</option>\\r\\n                        </select>\\r\\n                        \\r\\n                        <span class=\\\"md-line\\\"></span>\\r\\n                         <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.duration.errors.required\\\">Question time is required.</div>\\r\\n                            <div *ngIf=\\\"f.duration.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div> \\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                      <label >Note</label>\\r\\n                      <div class=\\\"group\\\">\\r\\n\\r\\n                       <input class=\\\"form-control\\\" placeholder=\\\"Note\\\" type=\\\"text\\\" formControlName=\\\"note\\\" maxlength=\\\"70\\\">\\r\\n                       <span class=\\\"md-line\\\"></span>\\r\\n                      </div>\\r\\n                    </div> \\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                  </div> \\r\\n                  \\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                      <div class=\\\"m-t-15\\\">\\r\\n                        <button (click)=\\\"goBack()\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-warning text-white round-border m-r-10 create_cancel\\\">\\r\\n                           <span *ngIf=\\\"this.idEdit\\\">Back</span>\\r\\n                        </button>\\r\\n                        \\r\\n                        <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border create_cancel\\\">\\r\\n                          <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                           <span *ngIf=\\\"this.idEdit\\\">Update</span>\\r\\n                           \\r\\n                        </button>\\r\\n\\r\\n                      </div>\\r\\n                      \\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>  \\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-4 \\\">\\r\\n                 <!--  <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\" *ngIf=\\\"editData.save_type=='bulk'\\\"> \\r\\n                   <label>Question</label>\\r\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"> </textarea> \\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                    <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.question.errors.required\\\">Question is required.</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                   <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\" *ngIf=\\\"editData.save_type=='single'\\\"> \\r\\n                     <label>Question</label>\\r\\n                      <ckeditor [editor]=\\\"Editor\\\" [data]='question_value' [config]=\\\"config\\\" (blur)=\\\"onChange($event)\\\"></ckeditor>\\r\\n                      <div class=\\\"question_note\\\">Note: your question should be in the limit of the text editor height and width. NO SCROLL BAR should be displayed as this will be out of the limit of the question maximum length.</div>\\r\\n                  </div> -->\\r\\n                <div class=\\\" \\\" *ngIf=\\\"question_type=='text'\\\">\\r\\n                <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                 <label>Question</label>\\r\\n                  \\r\\n                  <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"> </textarea>\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                  <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.question.errors.required\\\">Question is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"question_type=='image'\\\" class=\\\"remove-txt-here \\\">\\r\\n                 <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                    <div class=\\\" m-t-15\\\">\\r\\n                      <label>Upload Question </label>\\r\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"preview\\\" >\\r\\n                      <img [src]=\\\"croppedImage\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"question_type=='text_and_image'\\\" class=\\\"remove-txt-here \\\">\\r\\n                 <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                    <div class=\\\" m-t-15\\\">\\r\\n                      <label>Upload Question 1</label>\\r\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"preview\\\" *ngIf=\\\"croppedImage!=s3_url\\\">\\r\\n                      <img [src]=\\\"croppedImage\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                     <label>Question Text</label>\\r\\n                      <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" > </textarea>\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n                 \\r\\n                </div>\\r\\n              </div>\\r\\n              <!--\\r\\n                 <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n                    <div class=\\\"m-t-15\\\">\\r\\n                      <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 create_cancel\\\">\\r\\n                        <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                         Save and insert\\r\\n                      </button>\\r\\n                      </div>\\r\\n                     </div>\\r\\n                     \\r\\n              </div>\\r\\n              -->\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid single-curriculum\\\" *ngIf=\\\"isEditComp\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 single-curriculum-wrap\\\">\\r\\n        <div class=\\\"row\\\" >\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"row m-b-20\\\">\\r\\n                <div class=\\\"col-md-12 pull-right\\\">\\r\\n                  <h4>Edit Competitive Exam</h4>\\r\\n               </div>\\r\\n           </div>\\r\\n            <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onUpdateTemp()\\\">\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <label>Quant/Verbal</label>\\r\\n                      <input class=\\\"form-control\\\" placeholder=\\\"Quant/Verbal\\\" type=\\\"text\\\" formControlName=\\\"quant_verbal\\\" formControlName=\\\"quant_verbal\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.quant_verbal.errors }\\\">\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                       <div *ngIf=\\\"submitted && f.quant_verbal.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.quant_verbal.errors.required\\\">This field is required.</div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div> \\r\\n                <div class=\\\"card-block col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                    <div class=\\\"group\\\">\\r\\n                      <label>Group</label>\\r\\n                      <select class=\\\"form-control\\\" formControlName=\\\"group\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.group.errors }\\\">\\r\\n                        <option value=\\\"\\\">Group</option>\\r\\n                        <option *ngFor=\\\"let option of masterArr.master_group\\\" [value]=\\\"option.id\\\" >{{option.name}}</option>\\r\\n                      </select>\\r\\n                      <span class=\\\"md-line\\\"></span>\\r\\n                      <div *ngIf=\\\"submitted && f.group.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.group.errors.required\\\">Group is required.</div>\\r\\n                      </div>\\r\\n                   </div>\\r\\n                </div> \\r\\n                <div class=\\\"col-sm-4 col-sm-4 col-md-4\\\">\\r\\n                 <div class=\\\"group\\\">\\r\\n                  <label>Question Type</label>\\r\\n                  <select class=\\\"form-control\\\" (change)=\\\"qtChanged($event.target.value)\\\" formControlName=\\\"question_type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question_type.errors }\\\">\\r\\n                        <option value=\\\"text\\\">Text</option>\\r\\n                        <option value=\\\"image\\\">Image</option>\\r\\n                        <option value=\\\"text_and_image\\\">Text and Image</option>\\r\\n                  </select>\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                   <div *ngIf=\\\"submitted && f.question_type.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.question_type.errors.required\\\">Question Type is required.</div>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-8 \\\">\\r\\n                  <div class=\\\"row \\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                    \\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option A\\\" type=\\\"text\\\" formControlName=\\\"option1\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option1.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                      <div *ngIf=\\\"submitted && f.option1.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option1.errors.required\\\">Option A is required.</div>\\r\\n                      </div>\\r\\n                       <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option1.value}}\\\"/>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2  txt-left \\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"a\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'a'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row m-t-15\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option B\\\" type=\\\"text\\\" formControlName=\\\"option2\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option2.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.option2.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option2.errors.required\\\">Option B is required.</div>\\r\\n                      </div>\\r\\n                       <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option2.value}}\\\"/>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2 txt-left\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"b\\\" formControlName=\\\"answer\\\"  [checked]=\\\"form.get('answer').value.toLowerCase() == 'b'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row m-t-15\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n\\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option C\\\" type=\\\"text\\\" formControlName=\\\"option3\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option3.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                      <div *ngIf=\\\"submitted && f.option3.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option3.errors.required\\\">Option C is required.</div>\\r\\n                      </div>\\r\\n                       <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option3.value}}\\\"/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"c\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'c'\\\"> \\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row m-t-15\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 group\\\">\\r\\n                    \\r\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Option D\\\" type=\\\"text\\\" formControlName=\\\"option4\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.option4.errors }\\\">\\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                     <div *ngIf=\\\"submitted && f.option4.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"f.option4.errors.required\\\">Option D is required.</div>\\r\\n                      </div>\\r\\n                       <img *ngIf=\\\"option_type=='image'\\\" src=\\\"{{ s3_url}}{{f.option4.value}}\\\"/>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> \\r\\n                      <label class=\\\"radio-box\\\">\\r\\n                        <input type=\\\"radio\\\"  name=\\\"answer\\\" value=\\\"d\\\" formControlName=\\\"answer\\\" [checked]=\\\"form.get('answer').value.toLowerCase() == 'd'\\\">\\r\\n                        <span class=\\\"checkmark\\\"></span>\\r\\n                      </label>\\r\\n                     </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10\\\">\\r\\n                      <label >Duration (In Seconds)</label>\\r\\n                       <div class=\\\"group\\\">\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"duration\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.duration.errors }\\\">\\r\\n                          <option value=\\\"\\\">Duration (In Seconds)</option>\\r\\n                          <option *ngFor=\\\"let option of durationOptions\\\" [value]=\\\"option\\\" >{{option}}</option>\\r\\n                        </select>\\r\\n                        \\r\\n                        <span class=\\\"md-line\\\"></span>\\r\\n                         <div *ngIf=\\\"submitted && f.duration.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"f.duration.errors.required\\\">Question time is required.</div>\\r\\n                            <div *ngIf=\\\"f.duration.errors.pattern\\\">Accept numeric values only.</div>\\r\\n\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div> \\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                      <label >Note</label>\\r\\n                      <div class=\\\"group\\\">\\r\\n\\r\\n                       <input class=\\\"form-control\\\" placeholder=\\\"Note\\\" type=\\\"text\\\" formControlName=\\\"note\\\" maxlength=\\\"70\\\">\\r\\n                       <span class=\\\"md-line\\\"></span>\\r\\n                      </div>\\r\\n                    </div> \\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>\\r\\n                  </div> \\r\\n                  \\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-10 col-xs-10 col-md-10 \\\">\\r\\n                      <div class=\\\"m-t-15\\\">\\r\\n                        <button (click)=\\\"goBack()\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-warning text-white round-border m-r-10 create_cancel\\\">\\r\\n                           <span *ngIf=\\\"this.idEdit\\\">Back</span>\\r\\n                        </button>\\r\\n                        \\r\\n                        <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border create_cancel\\\">\\r\\n                          <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                           <span *ngIf=\\\"this.idEdit\\\">Update</span>\\r\\n                           \\r\\n                        </button>\\r\\n\\r\\n                      </div>\\r\\n                      \\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2 col-xs-2 col-md-2\\\"> </div>  \\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-lg-4 \\\">\\r\\n                   <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\" *ngIf=\\\"editData.save_type=='bulk'\\\"> \\r\\n                   <label>Question</label>\\r\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"> </textarea> \\r\\n                    <span class=\\\"md-line\\\"></span>\\r\\n                    <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.question.errors.required\\\">Question is required.</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                   <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\" *ngIf=\\\"editData.save_type=='single'\\\"> \\r\\n                     <label>Question</label>\\r\\n                      <ckeditor [editor]=\\\"Editor\\\" [data]='question_value' [config]=\\\"config\\\" (blur)=\\\"onChange($event)\\\"></ckeditor>\\r\\n                      <div class=\\\"question_note\\\">Note: your question should be in the limit of the text editor height and width. NO SCROLL BAR should be displayed as this will be out of the limit of the question maximum length.</div>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n              <div class=\\\"col-lg-4 \\\" *ngIf=\\\"question_type=='text'\\\">\\r\\n                <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                 <label>Question</label>\\r\\n                  \\r\\n                  <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.question.errors }\\\"> </textarea>\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                  <div *ngIf=\\\"submitted && f.question.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.question.errors.required\\\">Question is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"question_type=='image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n                 <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                    <div class=\\\" m-t-15\\\">\\r\\n                      <label>Upload Question </label>\\r\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"preview\\\" >\\r\\n                      <img [src]=\\\"croppedImage\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"question_type=='text_and_image'\\\" class=\\\"remove-txt-here col-md-4\\\">\\r\\n                 <div class=\\\"form-group  files color m-t-15\\\">\\r\\n                    <div class=\\\" m-t-15\\\">\\r\\n                      <label>Upload Question </label>\\r\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" (change)=\\\"fileChangeEvent($event)\\\" accept=\\\"image/x-png,image/jpeg\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"preview\\\" *ngIf=\\\"croppedImage!=s3_url\\\">\\r\\n                      <img [src]=\\\"croppedImage\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"editor-wrap\\\" id=\\\"my-node\\\"> \\r\\n                     <label>Question Text</label>\\r\\n                      <textarea class=\\\"form-control\\\" placeholder=\\\"Question\\\" formControlName=\\\"question\\\" maxlength=\\\"70\\\" > </textarea>\\r\\n                    </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n              </div>\\r\\n              <!--\\r\\n                 <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-12 col-xs-12 col-md-12\\\">\\r\\n                    <div class=\\\"m-t-15\\\">\\r\\n                      <button [disabled]=\\\"loading\\\" class=\\\"btn allam-btn-green text-white round-border m-r-10 create_cancel\\\">\\r\\n                        <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                         Save and insert\\r\\n                      </button>\\r\\n                      </div>\\r\\n                     </div>\\r\\n                     \\r\\n              </div>\\r\\n              -->\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal crop-image-wrap\\\" id=\\\"myModal\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Crop Image</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close alert-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">&times;</button>\\r\\n      </div>\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body slot-details-wrap\\\">\\r\\n          <image-cropper \\r\\n          [imageChangedEvent]=\\\"imageChangedEvent\\\" \\r\\n          [maintainAspectRatio]=\\\"true\\\" \\r\\n          [aspectRatio]=\\\"3 / 2\\\"\\r\\n          [resizeToWidth]=\\\"600\\\" \\r\\n          format=\\\"png\\\" \\r\\n          (imageCropped)=\\\"imageCropped($event)\\\" \\r\\n          (imageLoaded)=\\\"imageLoaded()\\\"\\r\\n          (cropperReady)=\\\"cropperReady()\\\" \\r\\n          (loadImageFailed)=\\\"loadImageFailed()\\\"></image-cropper>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal footer -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" (click)=\\\"closePopup()\\\">Done</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container-fluid dashboard\\\">\\r\\n  \\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 Competitive-curriculum-exam-wrap\\\">\\r\\n      <div class=\\\"row justify-content-md-center\\\">\\r\\n\\r\\n      <div class=\\\"col-md-9\\\">\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n        <h4>Select Teacher</h4>\\r\\n        \\r\\n        <form class=\\\"md-float-material\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\" col-sm-12 col-xs-12 col-md-12 \\\">\\r\\n                       \\r\\n               <div class=\\\"group\\\">\\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"teacher\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.teacher.errors }\\\">\\r\\n                    <option value=\\\"\\\">Teacher</option>\\r\\n                    <option *ngFor=\\\"let option of teacherArr\\\" [value]=\\\"option.id\\\" >{{option.first_name+' '+option.last_name | titlecase }}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"submitted && f.teacher.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.teacher.errors.required\\\">This field is required.</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          </div>\\r\\n           <div class=\\\"row\\\">&nbsp;</div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6 col-xs-6 col-md-6\\\">\\r\\n                <div class=\\\"group\\\">\\r\\n                    <button  class=\\\"btn btn-block allam-btn-green text-white \\\">\\r\\n                            Next\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \":host ::ng-deep .ck-editor__editable_inline {\\n  min-height: 200px;\\n  max-height: 200px;\\n}\\n\\n:host ::ng-deep .ck-editor {\\n  width: 300px;\\n}\\n\\n.single-curriculum-wrap .group label {\\n  display: block;\\n}\\n\\n.card-block {\\n  padding: 0 12px 5px;\\n}\\n\\n.dataTables_filter > input {\\n  width: 60%;\\n}\\n\\n#autofill_info {\\n  margin-top: 20px;\\n  float: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGVhY2hlci1zdXBlcnZpc29yL3F1ZXN0aW9uL0Q6XFxtZWFuXFxhbGxhbS1jbXMvc3JjXFxhcHBcXHBhZ2VzXFx0ZWFjaGVyLXN1cGVydmlzb3JcXHF1ZXN0aW9uXFxxdWVzdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvdGVhY2hlci1zdXBlcnZpc29yL3F1ZXN0aW9uL3F1ZXN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7QUNDSjs7QURFQTtFQUE2QixVQUFBO0FDRTdCOztBRERBO0VBQWlCLGdCQUFBO0VBQWtCLFdBQUE7QUNNbkMiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy90ZWFjaGVyLXN1cGVydmlzb3IvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLmNrLWVkaXRvcl9fZWRpdGFibGVfaW5saW5lIHtcclxuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xyXG4gICAgbWF4LWhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAuY2stZWRpdG9ye1xyXG4gICAgd2lkdGg6IDMwMHB4OztcclxufVxyXG5cclxuLnNpbmdsZS1jdXJyaWN1bHVtLXdyYXAgLmdyb3VwIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uY2FyZC1ibG9jayB7XHJcbiAgICBwYWRkaW5nOiAwIDEycHggNXB4O1xyXG59XHJcblxyXG4uZGF0YVRhYmxlc19maWx0ZXIgPiBpbnB1dCB7IHdpZHRoOiA2MCU7fVxyXG4jYXV0b2ZpbGxfaW5mbyB7IG1hcmdpbi10b3A6IDIwcHg7IGZsb2F0OiBsZWZ0O31cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIjpob3N0IDo6bmctZGVlcCAuY2stZWRpdG9yX19lZGl0YWJsZV9pbmxpbmUge1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG59XG5cbjpob3N0IDo6bmctZGVlcCAuY2stZWRpdG9yIHtcbiAgd2lkdGg6IDMwMHB4O1xufVxuXG4uc2luZ2xlLWN1cnJpY3VsdW0td3JhcCAuZ3JvdXAgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNhcmQtYmxvY2sge1xuICBwYWRkaW5nOiAwIDEycHggNXB4O1xufVxuXG4uZGF0YVRhYmxlc19maWx0ZXIgPiBpbnB1dCB7XG4gIHdpZHRoOiA2MCU7XG59XG5cbiNhdXRvZmlsbF9pbmZvIHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgZmxvYXQ6IGxlZnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { ChangeEvent,BlurEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\r\nimport { CurriculumSingleService } from '../../../services/studyexam/curriculum-single.service';\r\nimport { PocquestionService } from '../../../services/studyexam/pocquestion.service';\r\nimport { AuthenticationService } from '../../../services';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { TsupervisorService } from '../../../services/tsupervisor.service';\r\nimport { environment } from '../../../../environments/environment'\r\nimport domtoimage from 'dom-to-image-more';\r\nimport { ImageCroppedEvent } from 'ngx-image-cropper'; \r\n\r\ndeclare var $: any;\r\ndeclare var download: any;\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.scss']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n\r\n  page = 1;\r\n  count = 0;\r\n  pageSize = 5;\r\n  pageSizes = [5, 10, 25, 50, 100];\r\n\r\n\ttitle = 'angularckeditor';\r\n  public Editor = ClassicEditor;\r\n  public selectedItems = [];\r\n  form: FormGroup;\r\n\tloading = false;\r\n  submitted = false;\r\n  loading2 = false;\r\n  submitted2 = false;\r\n\tgridview = false;\r\n  term: string;\r\n  term2: string;\r\n  isProcessed: boolean = false;\r\n  isError: boolean;\r\n  \r\n  filters: any;\r\n\terror = '';\r\n\tprivate questionArr:any=[];\r\n  masterArr:any=[];\r\n  row_id=1;\r\n\tprivate toasterService: ToasterService;\r\n  logUser:any;\r\n  created_by:number;\r\n  isSave = true;\r\n  isEdit=false;\r\n  isEditCurr=false;\r\n  isEditComp=false;\r\n  idEdit=false;\r\n  editData:any=[];\r\n  teacher_id:any;\r\n  s3_url =environment.s3_url;\r\n  local_api_url=environment.apiUrl;\r\n  private durationOptions: string[] = [\"05\",\"15\", \"25\", \"30\",\"60\",\"120\"];\r\n  private levelOptions: string[] = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n\r\n  question_type:any='text';\r\n  showModal:boolean=false;\r\n  isFile:boolean=false;\r\n  option_type:any='text';\r\n  selectedAll: boolean = false;\r\n\r\n  public config={\r\n  fontSize: {\r\n      options: [\r\n          9,\r\n          11,\r\n          13,\r\n          'default',\r\n          17,\r\n          19,\r\n          21\r\n      ]\r\n    },\r\n    toolbar: [\r\n      'heading',\r\n      '|',\r\n      'fontSize',\r\n      '|',\r\n      'bold',\r\n      'italic',\r\n      'link',\r\n      'bulletedList',\r\n      'numberedList',\r\n      '|',\r\n      'indent',\r\n      'outdent',\r\n      '|',\r\n      'imageUpload',\r\n      'blockQuote',\r\n      'insertTable',\r\n      'mediaEmbed',\r\n      'MathType',\r\n      'ChemType',\r\n      'undo',\r\n      'redo'\r\n    ],\r\n    itemsPerPage: 5,\r\n    currentPage: 1,\r\n    totalItems: 0\r\n  }\r\n\tpublic question_value: string = ``;\r\n    \r\n  constructor(private fb: FormBuilder,\r\n              private activeAouter: ActivatedRoute,\r\n              private router: Router,\r\n              private alertService: ToasterService,\r\n              private curriculumSingleService:CurriculumSingleService,\r\n              private authenticationService: AuthenticationService,\r\n              private tsupervisorService: TsupervisorService\r\n              ) \r\n              {\r\n              this.term = \"\"; \r\n              }\r\n\r\n\t  ngOnInit() {\r\n          this.form = this.fb.group({\r\n          question: [''],\r\n          question_text: [''],\r\n          question_image_url:[''],\r\n          question_image:[''],\r\n          qui_type:[''],\r\n          question_type:['',Validators.required],\r\n          option_type:[this.option_type],\r\n          save_type: [''],\r\n          option1: ['',Validators.required],\r\n          option2: ['',Validators.required],\r\n          option3: ['',Validators.required],\r\n          option4: ['',Validators.required],\r\n          answer: [''],\r\n          class: [''],\r\n          quiz_sub_type: [''],\r\n          quiz_type: [''],\r\n          chapter: [''],\r\n          subject: [''],\r\n          semester: [''],\r\n          quant_verbal: [''],\r\n          group: [''],\r\n          lesson: [''],\r\n          note: [''],\r\n          level: [''],\r\n          type:[''],\r\n          duration: ['',Validators.required],\r\n          delArray: this.fb.array([])\r\n        });\r\n\r\n\r\n        this.teacher_id = (this.activeAouter.snapshot.params['teacher_id']); //atob\r\n        console.log(this.teacher_id);\r\n\r\n        this.logUser    = this.authenticationService.currentUserValue;\r\n        this.logUser    = JSON.parse(this.logUser);\r\n        this.created_by = this.logUser['user'][0]['id']; \r\n        //this.getDraftQuestion();\r\n        this.getPublishQuestion();\r\n        this.getMasterData();\r\n\r\n\t  }\r\n\r\n    get f() { return this.form.controls; }\r\n\r\n    public getMasterData() {\r\n        this.curriculumSingleService.getMasterData().subscribe(response => { \r\n        this.masterArr = response['data']; \r\n        //console.log( response.data);\r\n        });\r\n        console.log(this.masterArr);\r\n    }\r\n\r\n    public getPublishQuestion() {\r\n    const params = this.getRequestParams(this.term, this.page, this.pageSize);\r\n     //console.log(params);\r\n        this.tsupervisorService.getPublishQuestionNew(this.teacher_id,params).subscribe(response => { \r\n        //console.log(response);\r\n        this.questionArr = response['data'];\r\n        this.count = response['count'];\r\n        });\r\n    }\r\n\r\n\r\n\r\n     approveOneItem(item_id){\r\n        var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to approve?',\r\n            text: '',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, approve it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) \r\n            {\r\n              self.tsupervisorService.approvePublishQuestion(item_id,this.created_by,this.editData).subscribe(() => {   \r\n                self.getPublishQuestion();\r\n              });\r\n\r\n              Swal.fire(\r\n                'Approved!',\r\n                'Your data has been approved.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n    }\r\n\r\n    approveItem(){\r\n       console.log(this.selectedItems);\r\n       if(this.selectedItems.length==0){\r\n       Swal.fire('Oh','No item selected to approve :)','error');\r\n       return false;\r\n       }\r\n       var self = this;\r\n        Swal.fire({\r\n            title: 'Are you sure want to approve?',\r\n            text: '',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, approve it!',\r\n            cancelButtonText: 'No, keep it'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              this.selectedItems.forEach(function (value) {\r\n                   self.questionArr.forEach(function(arrItem){\r\n                      if (value == arrItem.id) { \r\n                          self.tsupervisorService.approvePublishQuestion(value,self.created_by,self.editData).subscribe(() => {  \r\n                            console.log('approved row'); \r\n                            self.getPublishQuestion();\r\n                          });\r\n                      } \r\n                   });\r\n              });\r\n              this.selectedAll=false;\r\n               Swal.fire(\r\n                'Approved!',\r\n                'Your data has been approved.',\r\n                'success'\r\n              )\r\n             \r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n              //Swal.fire('Cancelled','Your data is safe :)','error')\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n\r\n    onCheckboxChange(event,val) {\r\n        if(event.target.checked ) {\r\n            this.selectedItems.push(val);\r\n        }\r\n         else {\r\n          this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n        }\r\n\r\n    }\r\n\r\n  pageChanged(event){\r\n    this.config.currentPage = event;\r\n  }\r\n\r\n   downloadItem(){\r\n      this.router.navigate([]).then(result => {  window.open('/authentication/studyexam-downlad/tsupervisor/1/'+this.teacher_id, '_blank'); });;\r\n      //this.generatePDF();\r\n  }\r\n\r\n  editItem(event)\r\n  {\r\n\r\n    this.editData = event;\r\n    console.log( this.editData);\r\n    if(this.editData.quiz_type==1){\r\n      this.isEditCurr   = true;\r\n      this.isEditComp   = false;\r\n    }\r\n    else{\r\n      this.isEditComp   = true;\r\n      this.isEditCurr   = false;\r\n    }\r\n    \r\n    this.isSave   = false;\r\n    this.idEdit   = this.editData.id;\r\n    this.question_value=this.editData.question;\r\n     \r\n    \r\n    //const domEditableElement = document.querySelector('.ck-editor__editable');\r\n    //const editorInstance = domEditableElement.ckeditorInstance;\r\n    //editorInstance.setData(this.editData.question );\r\n\r\n    //console.log('<<----------------');\r\n\r\n    this.form.patchValue({\r\n        save_type: this.editData.save_type,\r\n        question: this.editData.question,\r\n        option1: this.editData.option1,\r\n        option2: this.editData.option2,\r\n        option3: this.editData.option3,\r\n        option4: this.editData.option4,\r\n        answer: this.editData.answer,\r\n        class: this.editData.class,\r\n        quiz_sub_type: this.editData.quiz_sub_type,\r\n        quiz_type: this.editData.quiz_type,\r\n        chapter: this.editData.chapter,\r\n        subject: this.editData.subject,\r\n        semester: this.editData.semester,\r\n        quant_verbal: this.editData.quant_verbal,\r\n        group: this.editData.groups,\r\n        lesson: this.editData.lesson,\r\n        note: this.editData.note,\r\n        level:this.editData.level,\r\n        duration:this.convertTwoDigit(this.editData.duration),\r\n        question_type:this.editData.question_type,\r\n        option_type:this.editData.option_type,\r\n        question_text:this.editData.question,\r\n        qui_type:this.editData.qui_type,\r\n        question_image_url:this.editData.question_image_url,\r\n        question_image:this.editData.question_image,\r\n        type:this.editData.type\r\n        });\r\n\r\n        this.croppedImage  = this.s3_url+this.editData.question_image_url;\r\n        this.question_type = this.editData.question_type;\r\n        this.option_type = this.editData.option_type;\r\n\r\n        \r\n  }\r\n\r\n  onUpdateTemp() \r\n  {\r\n   console.log(this.form.value); \r\n        this.submitted = true;\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        if(!this.form.value.answer){\r\n          Swal.fire('','Please select correct answer.','error');\r\n          return;\r\n        }\r\n\r\n        if(this.form.value.question=='' && this.form.value.question_type!='image' ){\r\n          Swal.fire('','Please write question.','error');\r\n          return;\r\n        }\r\n        /*if(this.form.value.question_image=='' && (this.question_type=='image' || this.question_type=='text_and_image')){\r\n           Swal.fire('','Please upload question.','error');\r\n            return;\r\n        }*/\r\n\r\n        this.form.value.isFile=this.isFile;\r\n        this.form.value.created_by=this.created_by; \r\n\r\n        this.loading = true;\r\n          /////update in temp////\r\n          this.form.value.id=this.idEdit;\r\n\r\n          console.log(this.form.value);\r\n          console.log('---------->>>>>>>>')  \r\n            \r\n          this.tsupervisorService.updateQuestionById(this.form.value)\r\n              .subscribe(\r\n                  data => {\r\n                    if(data['status']==200){\r\n                        this.alertService.pop('success', 'Question successfully updated');\r\n                        this.getPublishQuestion();\r\n                        this.idEdit=false; \r\n                        this.isEditCurr=false;\r\n                        this.isEditComp=false;\r\n                        this.isProcessed=true;\r\n                        this.isSave=true;\r\n                      }\r\n                      else\r\n                      {\r\n                        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      }\r\n\r\n                      this.loading = false;\r\n                      this.submitted=false\r\n\r\n                      \r\n                  },\r\n                  error => {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      this.loading = false;\r\n                      this.submitted=false\r\n\r\n            });\r\n\r\n          /*if(this.form.value.save_type=='bulk'){\r\n            this.tsupervisorService.updateQuestionById(this.form.value)\r\n              .subscribe(\r\n                  data => {\r\n                    if(data['status']==200){\r\n                        this.alertService.pop('success', 'Question successfully updated');\r\n                        this.getPublishQuestion();\r\n                        this.idEdit=false; \r\n                        this.isEditCurr=false;\r\n                        this.isEditComp=false;\r\n                        this.isProcessed=true;\r\n                        this.isSave=true;\r\n                      }\r\n                      else\r\n                      {\r\n                        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      }\r\n\r\n                      this.loading = false;\r\n                      this.submitted=false\r\n\r\n                      \r\n                  },\r\n                  error => {\r\n                      this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                      this.loading = false;\r\n                      this.submitted=false\r\n\r\n                  });\r\n          }\r\n          else\r\n          {\r\n            this.form.value.question=this.question_value;\r\n          \r\n              this.tsupervisorService.updateQuestionByTsSingle(this.form.value)\r\n                .subscribe(\r\n                    data => {\r\n                      if(data['status']==200){\r\n                          this.alertService.pop('success', 'Question successfully updated');\r\n                          this.getPublishQuestion();\r\n                          this.idEdit=false; \r\n                          this.isEditCurr=false;\r\n                          this.isEditComp=false;\r\n                          this.isProcessed=true;\r\n                          this.isSave=true;\r\n                        }\r\n                        else\r\n                        {\r\n                          this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                        }\r\n\r\n                        this.loading = false;\r\n                        this.submitted=false\r\n\r\n                        \r\n                    },\r\n                    error => {\r\n                        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n                        this.loading = false;\r\n                        this.submitted=false\r\n\r\n                    });\r\n          }\r\n          */\r\n  }\r\n\r\n  goBack(){\r\n    this.isEdit   = false;\r\n    this.isEditComp   = false;\r\n    this.isEditCurr   = false;\r\n    this.isSave   = true;\r\n  }\r\n\r\n  public onChange( { editor }: BlurEvent ) {\r\n    this.question_value = editor.getData();\r\n    console.log('dsdsds');\r\n    var html =$(\".ck-content\").html();\r\n    this.question_value =html;\r\n  }\r\n\r\n  isOverflown(element) {\r\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\r\n  }\r\n\r\n    //custom search & pagination\r\n getRequestParams(searchText, page, pageSize): any { \r\n    let params = {};\r\n\r\n    if (searchText) {\r\n      params[`searchText`] = searchText;\r\n    }\r\n    else{\r\n      params[`searchText`] =0;\r\n    }\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n\r\n handlePageChange(event): void {\r\n    this.page = event;\r\n    this.getPublishQuestion();\r\n  }\r\n\r\n  handlePageSizeChange(event): void {\r\n    this.pageSize = event.target.value;\r\n    this.page = 1;\r\n    this.getPublishQuestion();\r\n  }\r\n\r\n  qtChanged(element){\r\n    this.question_type=element;\r\n    this.option_type = 'text';\r\n    this.question_value='';\r\n    this.croppedImage='';\r\n     this.form.patchValue({\r\n        option1: '',\r\n        option2: '',\r\n        option3: '',\r\n        option4: '',\r\n       });\r\n  }\r\n\r\n  //image cropping\r\n    imageChangedEvent: any = '';\r\n    croppedImage: any = '';\r\n  \r\n    fileChangeEvent(event: any): void {\r\n    \r\n      if (event.target.files && event.target.files.length > 0) {\r\n        let file = event.target.files[0];\r\n        let img = new Image();\r\n        var name = event.target.files[0].name;\r\n        var ext = name.substring(name.lastIndexOf('.') + 1);\r\n\r\n        if (ext.toLowerCase() != 'jpeg' && ext.toLowerCase() != 'jpg' && ext.toLowerCase() != 'png')\r\n          { \r\n            Swal.fire('','File type should be jpeg, jpg or png format','error');\r\n            return;\r\n          }\r\n          else\r\n          {\r\n            this.imageChangedEvent = event;\r\n            this.showModal = true;\r\n          }\r\n      }\r\n        \r\n    }\r\n    imageCropped(event: ImageCroppedEvent) {\r\n        this.croppedImage = event.base64;\r\n        this.question_value=this.croppedImage;\r\n        this.isFile=true;\r\n        this.form.patchValue({\r\n          question_image: this.croppedImage\r\n        });\r\n\r\n    }\r\n    imageLoaded() {\r\n        /* show cropper */\r\n    }\r\n    cropperReady() {\r\n        /* cropper ready */\r\n    }\r\n    loadImageFailed() {\r\n        /* show message */\r\n        Swal.fire('','Please upload image only','error');\r\n    }\r\n\r\n    closePopup(){\r\n      this.showModal = false;\r\n    }\r\n\r\n  convertTwoDigit(n) {\r\n    n = String(n);\r\n    if (n.length == 1){\r\n      n = '0' + n\r\n    }\r\n    return n;\r\n  }\r\n\r\n\r\n  selectAll() {\r\n    this.selectedAll = !this.selectedAll;\r\n    this.selectedItems = [];\r\n    for (var i = 0; i < this.questionArr.length; i++) {\r\n        this.questionArr[i].selected = this.selectedAll;\r\n        //console.log(this.selectedAll)\r\n        if(this.selectedAll == true){\r\n          this.selectedItems.push(this.questionArr[i].id);\r\n        }else{\r\n          this.selectedItems.splice(this.selectedItems.indexOf(this.questionArr[i].id),1);\r\n        }\r\n        \r\n    } \r\n    //console.log(this.selectedItems)\r\n  }\r\n    checkIfAllSelected(event,val) {\r\n      if(event.target.checked ) {\r\n          this.selectedItems.push(val);\r\n      }\r\n      else {\r\n        this.selectedItems.splice(this.selectedItems.indexOf(val),1);\r\n      }\r\n      //console.log(this.selectedItems)\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TeacherSupervisorComponent } from './teacher-supervisor.component';\r\nimport { QuestionComponent } from './question/question.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TeacherSupervisorComponent,\r\n    data: {\r\n      breadcrumb: 'General Competition',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  },\r\n  {\r\n    path: 'question/:teacher_id',\r\n    component: QuestionComponent,\r\n    data: {\r\n      breadcrumb: 'Review Question',\r\n      icon: 'icofont-table bg-c-blue',\r\n      breadcrumb_caption: '',\r\n      status: false\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TeacherSupervisorRoutingModule { }\r\n","import { Component, OnInit, Pipe, Output, EventEmitter } from '@angular/core';\r\nimport { Question } from '../../models/studyexam';\r\nimport { TsupervisorService } from '../../services/tsupervisor.service';\r\nimport {ToasterModule, ToasterService} from 'angular2-toaster'\r\nimport { AuthenticationService } from '../../services';\r\n\r\n\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { CurriculumSingleService } from '../../services/studyexam/curriculum-single.service';\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Component({\r\n  selector: 'app-teacher-supervisor',\r\n  templateUrl: './teacher-supervisor.component.html',\r\n  //pipes: [OrderBy] \r\n})\r\n\r\n\r\nexport class TeacherSupervisorComponent implements OnInit {\r\n  form: FormGroup; \r\n  questions:  any;\r\n  s3_url =environment.s3_url;\r\n  private toasterService: ToasterService;\r\n  private teacherArr:any=[];\r\n  submitted=false;\r\n  loading=false;\r\n  returnUrl: string;\r\n  created_by:number;\r\n  logUser:any;\r\n  questionArrr:any=[];\r\n\r\n  constructor(private fb: FormBuilder,private route: ActivatedRoute,\r\n  private tsupervisorService: TsupervisorService, \r\n  private router: Router,\r\n  private alertService: ToasterService, \r\n  private authenticationService: AuthenticationService) { \r\n  this.form = this.fb.group({\r\n         \r\n          teacher: ['',Validators.required],\r\n         \r\n        });\r\n  }\r\n  ngOnInit() \r\n  {\r\n      this.logUser    = this.authenticationService.currentUserValue;\r\n      this.logUser    = JSON.parse(this.logUser);\r\n      this.created_by = this.logUser['user'][0]['id'];   \r\n      this.getAllTeacher();    \r\n  }\r\n\r\n\r\n  public getAllTeacher() {\r\n    this.tsupervisorService.getAllTeacher().subscribe(response => { \r\n      this.teacherArr = response['data'];\r\n      console.log( this.teacherArr);\r\n    },\r\n    error => {\r\n        this.alertService.pop('error', 'Something went wrong. Try again later.');\r\n    });\r\n  }\r\n\r\nget f() { return this.form.controls; }\r\nonSubmit(){\r\n  this.submitted = true;\r\n  if (this.form.invalid) {\r\n      return;\r\n  }\r\n  var teacher_id= this.form.value.teacher;\r\n  var qUrl = '/teacher-supervisor/question/'+btoa(teacher_id);\r\n  console.log(qUrl);\r\n  console.log(teacher_id);\r\n\r\n  this.router.navigate([qUrl]);\r\n}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TeacherSupervisorRoutingModule } from './teacher-supervisor-routing.module';\r\nimport { TeacherSupervisorComponent } from './teacher-supervisor.component';\r\nimport { QuestionComponent } from './question/question.component';\r\n\r\n\r\n//import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { PipesModule } from \"../../pipes/pipes.module\";\r\n\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\n\r\n\r\nimport { Pipe, PipeTransform} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser'\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\n@Pipe({ name: 'safeHtml'})\r\nexport class SafeHtmlPipe implements PipeTransform  {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value) \r\n  {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TeacherSupervisorRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    PipesModule,\r\n    CKEditorModule,\r\n    ImageCropperModule\r\n  ],\r\n  declarations: [\r\n  TeacherSupervisorComponent,\r\n  QuestionComponent,\r\n  SafeHtmlPipe\r\n\r\n  ]\r\n})\r\nexport class TeacherSupervisorModule { }\r\n"],"sourceRoot":"webpack:///"}